#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModelCore.DataModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HNBLLC")]
	public partial class LcEntityDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAmendingLcInformation(AmendingLcInformation instance);
    partial void UpdateAmendingLcInformation(AmendingLcInformation instance);
    partial void DeleteAmendingLcInformation(AmendingLcInformation instance);
    partial void InsertAmendingLcRegistry(AmendingLcRegistry instance);
    partial void UpdateAmendingLcRegistry(AmendingLcRegistry instance);
    partial void DeleteAmendingLcRegistry(AmendingLcRegistry instance);
    partial void InsertAttachableDocument(AttachableDocument instance);
    partial void UpdateAttachableDocument(AttachableDocument instance);
    partial void DeleteAttachableDocument(AttachableDocument instance);
    partial void InsertBankData(BankData instance);
    partial void UpdateBankData(BankData instance);
    partial void DeleteBankData(BankData instance);
    partial void InsertBankDataScope(BankDataScope instance);
    partial void UpdateBankDataScope(BankDataScope instance);
    partial void DeleteBankDataScope(BankDataScope instance);
    partial void InsertBusinessDataScope(BusinessDataScope instance);
    partial void UpdateBusinessDataScope(BusinessDataScope instance);
    partial void DeleteBusinessDataScope(BusinessDataScope instance);
    partial void InsertCreditCancellation(CreditCancellation instance);
    partial void UpdateCreditCancellation(CreditCancellation instance);
    partial void DeleteCreditCancellation(CreditCancellation instance);
    partial void Insertcurrency_type(currency_type instance);
    partial void Updatecurrency_type(currency_type instance);
    partial void Deletecurrency_type(currency_type instance);
    partial void InsertDocumentaryAllowance(DocumentaryAllowance instance);
    partial void UpdateDocumentaryAllowance(DocumentaryAllowance instance);
    partial void DeleteDocumentaryAllowance(DocumentaryAllowance instance);
    partial void InsertDocumentaryDenial(DocumentaryDenial instance);
    partial void UpdateDocumentaryDenial(DocumentaryDenial instance);
    partial void DeleteDocumentaryDenial(DocumentaryDenial instance);
    partial void InsertDocumentaryLevel(DocumentaryLevel instance);
    partial void UpdateDocumentaryLevel(DocumentaryLevel instance);
    partial void DeleteDocumentaryLevel(DocumentaryLevel instance);
    partial void InsertDocumentType(DocumentType instance);
    partial void UpdateDocumentType(DocumentType instance);
    partial void DeleteDocumentType(DocumentType instance);
    partial void InsertGoodsDetail(GoodsDetail instance);
    partial void UpdateGoodsDetail(GoodsDetail instance);
    partial void DeleteGoodsDetail(GoodsDetail instance);
    partial void InsertLcItem(LcItem instance);
    partial void UpdateLcItem(LcItem instance);
    partial void DeleteLcItem(LcItem instance);
    partial void InsertLevelExpression(LevelExpression instance);
    partial void UpdateLevelExpression(LevelExpression instance);
    partial void DeleteLevelExpression(LevelExpression instance);
    partial void InsertMessageType(MessageType instance);
    partial void UpdateMessageType(MessageType instance);
    partial void DeleteMessageType(MessageType instance);
    partial void InsertNegoDraftRegistry(NegoDraftRegistry instance);
    partial void UpdateNegoDraftRegistry(NegoDraftRegistry instance);
    partial void DeleteNegoDraftRegistry(NegoDraftRegistry instance);
    partial void InsertNegoHost(NegoHost instance);
    partial void UpdateNegoHost(NegoHost instance);
    partial void DeleteNegoHost(NegoHost instance);
    partial void InsertOpeningApplicationDocumentary(OpeningApplicationDocumentary instance);
    partial void UpdateOpeningApplicationDocumentary(OpeningApplicationDocumentary instance);
    partial void DeleteOpeningApplicationDocumentary(OpeningApplicationDocumentary instance);
    partial void InsertDocumentary(Documentary instance);
    partial void UpdateDocumentary(Documentary instance);
    partial void DeleteDocumentary(Documentary instance);
    partial void InsertCreditCancellationInfo(CreditCancellationInfo instance);
    partial void UpdateCreditCancellationInfo(CreditCancellationInfo instance);
    partial void DeleteCreditCancellationInfo(CreditCancellationInfo instance);
    partial void InsertCustomerOfBranch(CustomerOfBranch instance);
    partial void UpdateCustomerOfBranch(CustomerOfBranch instance);
    partial void DeleteCustomerOfBranch(CustomerOfBranch instance);
    partial void InsertCustomerOfBranchApproval(CustomerOfBranchApproval instance);
    partial void UpdateCustomerOfBranchApproval(CustomerOfBranchApproval instance);
    partial void DeleteCustomerOfBranchApproval(CustomerOfBranchApproval instance);
    partial void InsertBankInbox(BankInbox instance);
    partial void UpdateBankInbox(BankInbox instance);
    partial void DeleteBankInbox(BankInbox instance);
    partial void InsertCustomerInbox(CustomerInbox instance);
    partial void UpdateCustomerInbox(CustomerInbox instance);
    partial void DeleteCustomerInbox(CustomerInbox instance);
    partial void InsertNegoInvoice(NegoInvoice instance);
    partial void UpdateNegoInvoice(NegoInvoice instance);
    partial void DeleteNegoInvoice(NegoInvoice instance);
    partial void InsertNegoAffair(NegoAffair instance);
    partial void UpdateNegoAffair(NegoAffair instance);
    partial void DeleteNegoAffair(NegoAffair instance);
    partial void InsertDocumentDispatch(DocumentDispatch instance);
    partial void UpdateDocumentDispatch(DocumentDispatch instance);
    partial void DeleteDocumentDispatch(DocumentDispatch instance);
    partial void InsertDocumentProcessLog(DocumentProcessLog instance);
    partial void UpdateDocumentProcessLog(DocumentProcessLog instance);
    partial void DeleteDocumentProcessLog(DocumentProcessLog instance);
    partial void InsertGroupDepartment(GroupDepartment instance);
    partial void UpdateGroupDepartment(GroupDepartment instance);
    partial void DeleteGroupDepartment(GroupDepartment instance);
    partial void InsertFpgLcItem(FpgLcItem instance);
    partial void UpdateFpgLcItem(FpgLcItem instance);
    partial void DeleteFpgLcItem(FpgLcItem instance);
    partial void InsertExceptionLog(ExceptionLog instance);
    partial void UpdateExceptionLog(ExceptionLog instance);
    partial void DeleteExceptionLog(ExceptionLog instance);
    partial void InsertReceivedDataQueue(ReceivedDataQueue instance);
    partial void UpdateReceivedDataQueue(ReceivedDataQueue instance);
    partial void DeleteReceivedDataQueue(ReceivedDataQueue instance);
    partial void InsertDataProcessLog(DataProcessLog instance);
    partial void UpdateDataProcessLog(DataProcessLog instance);
    partial void DeleteDataProcessLog(DataProcessLog instance);
    partial void InsertNegoPrompt(NegoPrompt instance);
    partial void UpdateNegoPrompt(NegoPrompt instance);
    partial void DeleteNegoPrompt(NegoPrompt instance);
    partial void InsertNegoInvoiceDetail(NegoInvoiceDetail instance);
    partial void UpdateNegoInvoiceDetail(NegoInvoiceDetail instance);
    partial void DeleteNegoInvoiceDetail(NegoInvoiceDetail instance);
    partial void InsertNegoPromptRequestQueue(NegoPromptRequestQueue instance);
    partial void UpdateNegoPromptRequestQueue(NegoPromptRequestQueue instance);
    partial void DeleteNegoPromptRequestQueue(NegoPromptRequestQueue instance);
    partial void InsertSpecificNote(SpecificNote instance);
    partial void UpdateSpecificNote(SpecificNote instance);
    partial void DeleteSpecificNote(SpecificNote instance);
    partial void InsertFpgNegoDraft(FpgNegoDraft instance);
    partial void UpdateFpgNegoDraft(FpgNegoDraft instance);
    partial void DeleteFpgNegoDraft(FpgNegoDraft instance);
    partial void InsertFpgNegoRemittance(FpgNegoRemittance instance);
    partial void UpdateFpgNegoRemittance(FpgNegoRemittance instance);
    partial void DeleteFpgNegoRemittance(FpgNegoRemittance instance);
    partial void InsertAlertDataQueue(AlertDataQueue instance);
    partial void UpdateAlertDataQueue(AlertDataQueue instance);
    partial void DeleteAlertDataQueue(AlertDataQueue instance);
    partial void InsertFpgLcMonthlyReport(FpgLcMonthlyReport instance);
    partial void UpdateFpgLcMonthlyReport(FpgLcMonthlyReport instance);
    partial void DeleteFpgLcMonthlyReport(FpgLcMonthlyReport instance);
    partial void InsertLcPrintNotice(LcPrintNotice instance);
    partial void UpdateLcPrintNotice(LcPrintNotice instance);
    partial void DeleteLcPrintNotice(LcPrintNotice instance);
    partial void InsertFpgNegoRemittanceLog(FpgNegoRemittanceLog instance);
    partial void UpdateFpgNegoRemittanceLog(FpgNegoRemittanceLog instance);
    partial void DeleteFpgNegoRemittanceLog(FpgNegoRemittanceLog instance);
    partial void InsertCancellationRegistry(CancellationRegistry instance);
    partial void UpdateCancellationRegistry(CancellationRegistry instance);
    partial void DeleteCancellationRegistry(CancellationRegistry instance);
    partial void InsertFpgLcMonthlySummary(FpgLcMonthlySummary instance);
    partial void UpdateFpgLcMonthlySummary(FpgLcMonthlySummary instance);
    partial void DeleteFpgLcMonthlySummary(FpgLcMonthlySummary instance);
    partial void InsertBeneficiaryTransferInto(BeneficiaryTransferInto instance);
    partial void UpdateBeneficiaryTransferInto(BeneficiaryTransferInto instance);
    partial void DeleteBeneficiaryTransferInto(BeneficiaryTransferInto instance);
    partial void InsertL8600(L8600 instance);
    partial void UpdateL8600(L8600 instance);
    partial void DeleteL8600(L8600 instance);
    partial void InsertL4600(L4600 instance);
    partial void UpdateL4600(L4600 instance);
    partial void DeleteL4600(L4600 instance);
    partial void InsertL4700(L4700 instance);
    partial void UpdateL4700(L4700 instance);
    partial void DeleteL4700(L4700 instance);
    partial void InsertL1000(L1000 instance);
    partial void UpdateL1000(L1000 instance);
    partial void DeleteL1000(L1000 instance);
    partial void InsertBankingAudit(BankingAudit instance);
    partial void UpdateBankingAudit(BankingAudit instance);
    partial void DeleteBankingAudit(BankingAudit instance);
    partial void InsertNegoDraftExtension(NegoDraftExtension instance);
    partial void UpdateNegoDraftExtension(NegoDraftExtension instance);
    partial void DeleteNegoDraftExtension(NegoDraftExtension instance);
    partial void InsertReimbursement(Reimbursement instance);
    partial void UpdateReimbursement(Reimbursement instance);
    partial void DeleteReimbursement(Reimbursement instance);
    partial void InsertNegoDraftAcceptance(NegoDraftAcceptance instance);
    partial void UpdateNegoDraftAcceptance(NegoDraftAcceptance instance);
    partial void DeleteNegoDraftAcceptance(NegoDraftAcceptance instance);
    partial void InsertDefaultSpecificNotes(DefaultSpecificNotes instance);
    partial void UpdateDefaultSpecificNotes(DefaultSpecificNotes instance);
    partial void DeleteDefaultSpecificNotes(DefaultSpecificNotes instance);
    partial void InsertDisabledBranch(DisabledBranch instance);
    partial void UpdateDisabledBranch(DisabledBranch instance);
    partial void DeleteDisabledBranch(DisabledBranch instance);
    partial void InsertCustomerCreditAlert(CustomerCreditAlert instance);
    partial void UpdateCustomerCreditAlert(CustomerCreditAlert instance);
    partial void DeleteCustomerCreditAlert(CustomerCreditAlert instance);
    partial void InsertCRCGroup(CRCGroup instance);
    partial void UpdateCRCGroup(CRCGroup instance);
    partial void DeleteCRCGroup(CRCGroup instance);
    partial void InsertCRCGroupArrangement(CRCGroupArrangement instance);
    partial void UpdateCRCGroupArrangement(CRCGroupArrangement instance);
    partial void DeleteCRCGroupArrangement(CRCGroupArrangement instance);
    partial void InsertTaskDelegate(TaskDelegate instance);
    partial void UpdateTaskDelegate(TaskDelegate instance);
    partial void DeleteTaskDelegate(TaskDelegate instance);
    partial void InsertDocumentOwner(DocumentOwner instance);
    partial void UpdateDocumentOwner(DocumentOwner instance);
    partial void DeleteDocumentOwner(DocumentOwner instance);
    partial void InsertEnterpriseRelation(EnterpriseRelation instance);
    partial void UpdateEnterpriseRelation(EnterpriseRelation instance);
    partial void DeleteEnterpriseRelation(EnterpriseRelation instance);
    partial void InsertCustomerOfBranchExtension(CustomerOfBranchExtension instance);
    partial void UpdateCustomerOfBranchExtension(CustomerOfBranchExtension instance);
    partial void DeleteCustomerOfBranchExtension(CustomerOfBranchExtension instance);
    partial void InsertFpgBeneficiaryStatus(FpgBeneficiaryStatus instance);
    partial void UpdateFpgBeneficiaryStatus(FpgBeneficiaryStatus instance);
    partial void DeleteFpgBeneficiaryStatus(FpgBeneficiaryStatus instance);
    partial void InsertCreditInsuranceLoan(CreditInsuranceLoan instance);
    partial void UpdateCreditInsuranceLoan(CreditInsuranceLoan instance);
    partial void DeleteCreditInsuranceLoan(CreditInsuranceLoan instance);
    partial void InsertNegoLoanRepayment(NegoLoanRepayment instance);
    partial void UpdateNegoLoanRepayment(NegoLoanRepayment instance);
    partial void DeleteNegoLoanRepayment(NegoLoanRepayment instance);
    partial void InsertCustomerOfBranchLevel(CustomerOfBranchLevel instance);
    partial void UpdateCustomerOfBranchLevel(CustomerOfBranchLevel instance);
    partial void DeleteCustomerOfBranchLevel(CustomerOfBranchLevel instance);
    partial void InsertOrganizationStatus(OrganizationStatus instance);
    partial void UpdateOrganizationStatus(OrganizationStatus instance);
    partial void DeleteOrganizationStatus(OrganizationStatus instance);
    partial void InsertRevisionLog(RevisionLog instance);
    partial void UpdateRevisionLog(RevisionLog instance);
    partial void DeleteRevisionLog(RevisionLog instance);
    partial void InsertF0390(F0390 instance);
    partial void UpdateF0390(F0390 instance);
    partial void DeleteF0390(F0390 instance);
    partial void InsertFR062(FR062 instance);
    partial void UpdateFR062(FR062 instance);
    partial void DeleteFR062(FR062 instance);
    partial void InsertAMLComment(AMLComment instance);
    partial void UpdateAMLComment(AMLComment instance);
    partial void DeleteAMLComment(AMLComment instance);
    partial void InsertPaymentNotification(PaymentNotification instance);
    partial void UpdatePaymentNotification(PaymentNotification instance);
    partial void DeletePaymentNotification(PaymentNotification instance);
    partial void InsertNegoLoan(NegoLoan instance);
    partial void UpdateNegoLoan(NegoLoan instance);
    partial void DeleteNegoLoan(NegoLoan instance);
    partial void InsertAMLCheckQueue(AMLCheckQueue instance);
    partial void UpdateAMLCheckQueue(AMLCheckQueue instance);
    partial void DeleteAMLCheckQueue(AMLCheckQueue instance);
    partial void InsertFpgNegoRemittanceDispatch(FpgNegoRemittanceDispatch instance);
    partial void UpdateFpgNegoRemittanceDispatch(FpgNegoRemittanceDispatch instance);
    partial void DeleteFpgNegoRemittanceDispatch(FpgNegoRemittanceDispatch instance);
    partial void InsertBeneficiaryGroup(BeneficiaryGroup instance);
    partial void UpdateBeneficiaryGroup(BeneficiaryGroup instance);
    partial void DeleteBeneficiaryGroup(BeneficiaryGroup instance);
    partial void InsertBeneficiaryServiceGroup(BeneficiaryServiceGroup instance);
    partial void UpdateBeneficiaryServiceGroup(BeneficiaryServiceGroup instance);
    partial void DeleteBeneficiaryServiceGroup(BeneficiaryServiceGroup instance);
    partial void InsertServiceDataQueue(ServiceDataQueue instance);
    partial void UpdateServiceDataQueue(ServiceDataQueue instance);
    partial void DeleteServiceDataQueue(ServiceDataQueue instance);
    partial void InsertResponseDataQueue(ResponseDataQueue instance);
    partial void UpdateResponseDataQueue(ResponseDataQueue instance);
    partial void DeleteResponseDataQueue(ResponseDataQueue instance);
    partial void InsertDataPortLog(DataPortLog instance);
    partial void UpdateDataPortLog(DataPortLog instance);
    partial void DeleteDataPortLog(DataPortLog instance);
    partial void InsertOrganizationBranchSettings(OrganizationBranchSettings instance);
    partial void UpdateOrganizationBranchSettings(OrganizationBranchSettings instance);
    partial void DeleteOrganizationBranchSettings(OrganizationBranchSettings instance);
    partial void InsertNegoLC(NegoLC instance);
    partial void UpdateNegoLC(NegoLC instance);
    partial void DeleteNegoLC(NegoLC instance);
    partial void InsertCreditApplicationDocumentary(CreditApplicationDocumentary instance);
    partial void UpdateCreditApplicationDocumentary(CreditApplicationDocumentary instance);
    partial void DeleteCreditApplicationDocumentary(CreditApplicationDocumentary instance);
    partial void InsertBeneficiaryData(BeneficiaryData instance);
    partial void UpdateBeneficiaryData(BeneficiaryData instance);
    partial void DeleteBeneficiaryData(BeneficiaryData instance);
    partial void InsertOrganizationExtension(OrganizationExtension instance);
    partial void UpdateOrganizationExtension(OrganizationExtension instance);
    partial void DeleteOrganizationExtension(OrganizationExtension instance);
    partial void InsertCustomerOfBranchVersion(CustomerOfBranchVersion instance);
    partial void UpdateCustomerOfBranchVersion(CustomerOfBranchVersion instance);
    partial void DeleteCustomerOfBranchVersion(CustomerOfBranchVersion instance);
    partial void InsertLetterOfCredit(LetterOfCredit instance);
    partial void UpdateLetterOfCredit(LetterOfCredit instance);
    partial void DeleteLetterOfCredit(LetterOfCredit instance);
    partial void InsertLetterOfCreditVersion(LetterOfCreditVersion instance);
    partial void UpdateLetterOfCreditVersion(LetterOfCreditVersion instance);
    partial void DeleteLetterOfCreditVersion(LetterOfCreditVersion instance);
    partial void InsertNegoDraft(NegoDraft instance);
    partial void UpdateNegoDraft(NegoDraft instance);
    partial void DeleteNegoDraft(NegoDraft instance);
    partial void InsertAmendingLcApplication(AmendingLcApplication instance);
    partial void UpdateAmendingLcApplication(AmendingLcApplication instance);
    partial void DeleteAmendingLcApplication(AmendingLcApplication instance);
    partial void InsertOrganization(Organization instance);
    partial void UpdateOrganization(Organization instance);
    partial void DeleteOrganization(Organization instance);
    partial void InsertBankUser(BankUser instance);
    partial void UpdateBankUser(BankUser instance);
    partial void DeleteBankUser(BankUser instance);
    partial void InsertBankUserDeputy(BankUserDeputy instance);
    partial void UpdateBankUserDeputy(BankUserDeputy instance);
    partial void DeleteBankUserDeputy(BankUserDeputy instance);
    partial void InsertBankUserLogin(BankUserLogin instance);
    partial void UpdateBankUserLogin(BankUserLogin instance);
    partial void DeleteBankUserLogin(BankUserLogin instance);
    partial void InsertBankUserRole(BankUserRole instance);
    partial void UpdateBankUserRole(BankUserRole instance);
    partial void DeleteBankUserRole(BankUserRole instance);
    partial void InsertBankUserBranch(BankUserBranch instance);
    partial void UpdateBankUserBranch(BankUserBranch instance);
    partial void DeleteBankUserBranch(BankUserBranch instance);
    #endregion
		
		public LcEntityDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LcEntityDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LcEntityDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LcEntityDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AmendingLcInformation> AmendingLcInformations
		{
			get
			{
				return this.GetTable<AmendingLcInformation>();
			}
		}
		
		public System.Data.Linq.Table<AmendingLcRegistry> AmendingLcRegistries
		{
			get
			{
				return this.GetTable<AmendingLcRegistry>();
			}
		}
		
		public System.Data.Linq.Table<AttachableDocument> AttachableDocuments
		{
			get
			{
				return this.GetTable<AttachableDocument>();
			}
		}
		
		public System.Data.Linq.Table<BankCRC> BankCRCs
		{
			get
			{
				return this.GetTable<BankCRC>();
			}
		}
		
		public System.Data.Linq.Table<BankData> BankDatas
		{
			get
			{
				return this.GetTable<BankData>();
			}
		}
		
		public System.Data.Linq.Table<BankDataScope> BankDataScopes
		{
			get
			{
				return this.GetTable<BankDataScope>();
			}
		}
		
		public System.Data.Linq.Table<BusinessDataScope> BusinessDataScopes
		{
			get
			{
				return this.GetTable<BusinessDataScope>();
			}
		}
		
		public System.Data.Linq.Table<CreditCancellation> CreditCancellations
		{
			get
			{
				return this.GetTable<CreditCancellation>();
			}
		}
		
		public System.Data.Linq.Table<currency_type> currency_types
		{
			get
			{
				return this.GetTable<currency_type>();
			}
		}
		
		public System.Data.Linq.Table<DocumentaryAllowance> DocumentaryAllowances
		{
			get
			{
				return this.GetTable<DocumentaryAllowance>();
			}
		}
		
		public System.Data.Linq.Table<DocumentaryDenial> DocumentaryDenials
		{
			get
			{
				return this.GetTable<DocumentaryDenial>();
			}
		}
		
		public System.Data.Linq.Table<DocumentaryLevel> DocumentaryLevels
		{
			get
			{
				return this.GetTable<DocumentaryLevel>();
			}
		}
		
		public System.Data.Linq.Table<DocumentType> DocumentTypes
		{
			get
			{
				return this.GetTable<DocumentType>();
			}
		}
		
		public System.Data.Linq.Table<GoodsDetail> GoodsDetails
		{
			get
			{
				return this.GetTable<GoodsDetail>();
			}
		}
		
		public System.Data.Linq.Table<LcItem> LcItems
		{
			get
			{
				return this.GetTable<LcItem>();
			}
		}
		
		public System.Data.Linq.Table<LevelExpression> LevelExpressions
		{
			get
			{
				return this.GetTable<LevelExpression>();
			}
		}
		
		public System.Data.Linq.Table<MessageType> MessageTypes
		{
			get
			{
				return this.GetTable<MessageType>();
			}
		}
		
		public System.Data.Linq.Table<NegoDraftRegistry> NegoDraftRegistries
		{
			get
			{
				return this.GetTable<NegoDraftRegistry>();
			}
		}
		
		public System.Data.Linq.Table<NegoHost> NegoHosts
		{
			get
			{
				return this.GetTable<NegoHost>();
			}
		}
		
		public System.Data.Linq.Table<OpeningApplicationDocumentary> OpeningApplicationDocumentaries
		{
			get
			{
				return this.GetTable<OpeningApplicationDocumentary>();
			}
		}
		
		public System.Data.Linq.Table<Documentary> Documentary
		{
			get
			{
				return this.GetTable<Documentary>();
			}
		}
		
		public System.Data.Linq.Table<CreditCancellationInfo> CreditCancellationInfo
		{
			get
			{
				return this.GetTable<CreditCancellationInfo>();
			}
		}
		
		public System.Data.Linq.Table<CustomerOfBranch> CustomerOfBranch
		{
			get
			{
				return this.GetTable<CustomerOfBranch>();
			}
		}
		
		public System.Data.Linq.Table<CustomerOfBranchApproval> CustomerOfBranchApprovals
		{
			get
			{
				return this.GetTable<CustomerOfBranchApproval>();
			}
		}
		
		public System.Data.Linq.Table<BankInbox> BankInbox
		{
			get
			{
				return this.GetTable<BankInbox>();
			}
		}
		
		public System.Data.Linq.Table<CustomerInbox> CustomerInbox
		{
			get
			{
				return this.GetTable<CustomerInbox>();
			}
		}
		
		public System.Data.Linq.Table<NegoInvoice> NegoInvoice
		{
			get
			{
				return this.GetTable<NegoInvoice>();
			}
		}
		
		public System.Data.Linq.Table<NegoAffair> NegoAffair
		{
			get
			{
				return this.GetTable<NegoAffair>();
			}
		}
		
		public System.Data.Linq.Table<DocumentDispatch> DocumentDispatch
		{
			get
			{
				return this.GetTable<DocumentDispatch>();
			}
		}
		
		public System.Data.Linq.Table<DocumentProcessLog> DocumentProcessLog
		{
			get
			{
				return this.GetTable<DocumentProcessLog>();
			}
		}
		
		public System.Data.Linq.Table<GroupDepartment> GroupDepartment
		{
			get
			{
				return this.GetTable<GroupDepartment>();
			}
		}
		
		public System.Data.Linq.Table<FpgLcItem> FpgLcItem
		{
			get
			{
				return this.GetTable<FpgLcItem>();
			}
		}
		
		public System.Data.Linq.Table<ExceptionLog> ExceptionLog
		{
			get
			{
				return this.GetTable<ExceptionLog>();
			}
		}
		
		public System.Data.Linq.Table<ReceivedDataQueue> ReceivedDataQueue
		{
			get
			{
				return this.GetTable<ReceivedDataQueue>();
			}
		}
		
		public System.Data.Linq.Table<DataProcessLog> DataProcessLog
		{
			get
			{
				return this.GetTable<DataProcessLog>();
			}
		}
		
		public System.Data.Linq.Table<NegoPrompt> NegoPrompt
		{
			get
			{
				return this.GetTable<NegoPrompt>();
			}
		}
		
		public System.Data.Linq.Table<NegoInvoiceDetail> NegoInvoiceDetail
		{
			get
			{
				return this.GetTable<NegoInvoiceDetail>();
			}
		}
		
		public System.Data.Linq.Table<NegoPromptRequestQueue> NegoPromptRequestQueue
		{
			get
			{
				return this.GetTable<NegoPromptRequestQueue>();
			}
		}
		
		public System.Data.Linq.Table<SpecificNote> SpecificNote
		{
			get
			{
				return this.GetTable<SpecificNote>();
			}
		}
		
		public System.Data.Linq.Table<FpgNegoDraft> FpgNegoDrafts
		{
			get
			{
				return this.GetTable<FpgNegoDraft>();
			}
		}
		
		public System.Data.Linq.Table<FpgNegoRemittance> FpgNegoRemittances
		{
			get
			{
				return this.GetTable<FpgNegoRemittance>();
			}
		}
		
		public System.Data.Linq.Table<AlertDataQueue> AlertDataQueues
		{
			get
			{
				return this.GetTable<AlertDataQueue>();
			}
		}
		
		public System.Data.Linq.Table<FpgLcMonthlyReport> FpgLcMonthlyReport
		{
			get
			{
				return this.GetTable<FpgLcMonthlyReport>();
			}
		}
		
		public System.Data.Linq.Table<LcPrintNotice> LcPrintNotice
		{
			get
			{
				return this.GetTable<LcPrintNotice>();
			}
		}
		
		public System.Data.Linq.Table<FpgNegoRemittanceLog> FpgNegoRemittanceLog
		{
			get
			{
				return this.GetTable<FpgNegoRemittanceLog>();
			}
		}
		
		public System.Data.Linq.Table<CancellationRegistry> CancellationRegistry
		{
			get
			{
				return this.GetTable<CancellationRegistry>();
			}
		}
		
		public System.Data.Linq.Table<FpgLcMonthlySummary> FpgLcMonthlySummary
		{
			get
			{
				return this.GetTable<FpgLcMonthlySummary>();
			}
		}
		
		public System.Data.Linq.Table<BeneficiaryTransferInto> BeneficiaryTransferInto
		{
			get
			{
				return this.GetTable<BeneficiaryTransferInto>();
			}
		}
		
		public System.Data.Linq.Table<L8600> L8600
		{
			get
			{
				return this.GetTable<L8600>();
			}
		}
		
		public System.Data.Linq.Table<L4600> L4600
		{
			get
			{
				return this.GetTable<L4600>();
			}
		}
		
		public System.Data.Linq.Table<L4700> L4700
		{
			get
			{
				return this.GetTable<L4700>();
			}
		}
		
		public System.Data.Linq.Table<L1000> L1000
		{
			get
			{
				return this.GetTable<L1000>();
			}
		}
		
		public System.Data.Linq.Table<BankingAudit> BankingAudit
		{
			get
			{
				return this.GetTable<BankingAudit>();
			}
		}
		
		public System.Data.Linq.Table<NegoDraftExtension> NegoDraftExtension
		{
			get
			{
				return this.GetTable<NegoDraftExtension>();
			}
		}
		
		public System.Data.Linq.Table<Reimbursement> Reimbursement
		{
			get
			{
				return this.GetTable<Reimbursement>();
			}
		}
		
		public System.Data.Linq.Table<NegoDraftAcceptance> NegoDraftAcceptance
		{
			get
			{
				return this.GetTable<NegoDraftAcceptance>();
			}
		}
		
		public System.Data.Linq.Table<DefaultSpecificNotes> DefaultSpecificNotes
		{
			get
			{
				return this.GetTable<DefaultSpecificNotes>();
			}
		}
		
		public System.Data.Linq.Table<DisabledBranch> DisabledBranch
		{
			get
			{
				return this.GetTable<DisabledBranch>();
			}
		}
		
		public System.Data.Linq.Table<CustomerCreditAlert> CustomerCreditAlert
		{
			get
			{
				return this.GetTable<CustomerCreditAlert>();
			}
		}
		
		public System.Data.Linq.Table<CRCGroup> CRCGroup
		{
			get
			{
				return this.GetTable<CRCGroup>();
			}
		}
		
		public System.Data.Linq.Table<CRCGroupArrangement> CRCGroupArrangement
		{
			get
			{
				return this.GetTable<CRCGroupArrangement>();
			}
		}
		
		public System.Data.Linq.Table<TaskDelegate> TaskDelegate
		{
			get
			{
				return this.GetTable<TaskDelegate>();
			}
		}
		
		public System.Data.Linq.Table<DocumentOwner> DocumentOwner
		{
			get
			{
				return this.GetTable<DocumentOwner>();
			}
		}
		
		public System.Data.Linq.Table<EnterpriseRelation> EnterpriseRelation
		{
			get
			{
				return this.GetTable<EnterpriseRelation>();
			}
		}
		
		public System.Data.Linq.Table<CustomerOfBranchExtension> CustomerOfBranchExtensions
		{
			get
			{
				return this.GetTable<CustomerOfBranchExtension>();
			}
		}
		
		public System.Data.Linq.Table<FpgBeneficiaryStatus> FpgBeneficiaryStatus
		{
			get
			{
				return this.GetTable<FpgBeneficiaryStatus>();
			}
		}
		
		public System.Data.Linq.Table<CreditInsuranceLoan> CreditInsuranceLoans
		{
			get
			{
				return this.GetTable<CreditInsuranceLoan>();
			}
		}
		
		public System.Data.Linq.Table<NegoLoanRepayment> NegoLoanRepayments
		{
			get
			{
				return this.GetTable<NegoLoanRepayment>();
			}
		}
		
		public System.Data.Linq.Table<CustomerOfBranchLevel> CustomerOfBranchLevels
		{
			get
			{
				return this.GetTable<CustomerOfBranchLevel>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationStatus> OrganizationStatus
		{
			get
			{
				return this.GetTable<OrganizationStatus>();
			}
		}
		
		public System.Data.Linq.Table<RevisionLog> RevisionLog
		{
			get
			{
				return this.GetTable<RevisionLog>();
			}
		}
		
		public System.Data.Linq.Table<F0390> F0390
		{
			get
			{
				return this.GetTable<F0390>();
			}
		}
		
		public System.Data.Linq.Table<FR062> FR062
		{
			get
			{
				return this.GetTable<FR062>();
			}
		}
		
		public System.Data.Linq.Table<AMLComment> AMLComment
		{
			get
			{
				return this.GetTable<AMLComment>();
			}
		}
		
		public System.Data.Linq.Table<PaymentNotification> PaymentNotification
		{
			get
			{
				return this.GetTable<PaymentNotification>();
			}
		}
		
		public System.Data.Linq.Table<NegoLoan> NegoLoan
		{
			get
			{
				return this.GetTable<NegoLoan>();
			}
		}
		
		public System.Data.Linq.Table<AMLCheckQueue> AMLCheckQueue
		{
			get
			{
				return this.GetTable<AMLCheckQueue>();
			}
		}
		
		public System.Data.Linq.Table<FpgNegoRemittanceDispatch> FpgNegoRemittanceDispatch
		{
			get
			{
				return this.GetTable<FpgNegoRemittanceDispatch>();
			}
		}
		
		public System.Data.Linq.Table<BeneficiaryGroup> BeneficiaryGroup
		{
			get
			{
				return this.GetTable<BeneficiaryGroup>();
			}
		}
		
		public System.Data.Linq.Table<BeneficiaryServiceGroup> BeneficiaryServiceGroup
		{
			get
			{
				return this.GetTable<BeneficiaryServiceGroup>();
			}
		}
		
		public System.Data.Linq.Table<ServiceDataQueue> ServiceDataQueue
		{
			get
			{
				return this.GetTable<ServiceDataQueue>();
			}
		}
		
		public System.Data.Linq.Table<ResponseDataQueue> ResponseDataQueue
		{
			get
			{
				return this.GetTable<ResponseDataQueue>();
			}
		}
		
		public System.Data.Linq.Table<DataPortLog> DataPortLog
		{
			get
			{
				return this.GetTable<DataPortLog>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationBranchSettings> OrganizationBranchSettings
		{
			get
			{
				return this.GetTable<OrganizationBranchSettings>();
			}
		}
		
		public System.Data.Linq.Table<NegoLC> NegoLC
		{
			get
			{
				return this.GetTable<NegoLC>();
			}
		}
		
		public System.Data.Linq.Table<CreditApplicationDocumentary> CreditApplicationDocumentary
		{
			get
			{
				return this.GetTable<CreditApplicationDocumentary>();
			}
		}
		
		public System.Data.Linq.Table<BeneficiaryData> BeneficiaryData
		{
			get
			{
				return this.GetTable<BeneficiaryData>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationExtension> OrganizationExtension
		{
			get
			{
				return this.GetTable<OrganizationExtension>();
			}
		}
		
		public System.Data.Linq.Table<CustomerOfBranchVersion> CustomerOfBranchVersion
		{
			get
			{
				return this.GetTable<CustomerOfBranchVersion>();
			}
		}
		
		public System.Data.Linq.Table<LetterOfCredit> LetterOfCredit
		{
			get
			{
				return this.GetTable<LetterOfCredit>();
			}
		}
		
		public System.Data.Linq.Table<LetterOfCreditVersion> LetterOfCreditVersion
		{
			get
			{
				return this.GetTable<LetterOfCreditVersion>();
			}
		}
		
		public System.Data.Linq.Table<NegoDraft> NegoDraft
		{
			get
			{
				return this.GetTable<NegoDraft>();
			}
		}
		
		public System.Data.Linq.Table<AmendingLcApplication> AmendingLcApplication
		{
			get
			{
				return this.GetTable<AmendingLcApplication>();
			}
		}
		
		public System.Data.Linq.Table<Organization> Organization
		{
			get
			{
				return this.GetTable<Organization>();
			}
		}
		
		public System.Data.Linq.Table<BankUser> BankUser
		{
			get
			{
				return this.GetTable<BankUser>();
			}
		}
		
		public System.Data.Linq.Table<BankUserDeputy> BankUserDeputy
		{
			get
			{
				return this.GetTable<BankUserDeputy>();
			}
		}
		
		public System.Data.Linq.Table<BankUserLogin> BankUserLogin
		{
			get
			{
				return this.GetTable<BankUserLogin>();
			}
		}
		
		public System.Data.Linq.Table<BankUserRole> BankUserRole
		{
			get
			{
				return this.GetTable<BankUserRole>();
			}
		}
		
		public System.Data.Linq.Table<BankUserBranch> BankUserBranch
		{
			get
			{
				return this.GetTable<BankUserBranch>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AbortTransaction")]
		public int AbortTransaction([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AmendingID", DbType="Int")] System.Nullable<int> amendingID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Approver", DbType="NVarChar(16)")] string approver, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AbortionID", DbType="Int")] System.Nullable<int> abortionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), amendingID, approver, abortionID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AbortNegoApplication")]
		public int AbortNegoApplication([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DraftID", DbType="Int")] System.Nullable<int> draftID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Approver", DbType="NVarChar(16)")] string approver)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), draftID, approver);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ApproveNegoApplication")]
		public int ApproveNegoApplication([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DraftID", DbType="Int")] System.Nullable<int> draftID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Approver", DbType="NVarChar(16)")] string approver, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoanMgr", DbType="NVarChar(16)")] string loanMgr, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Memo", DbType="NVarChar(256)")] string memo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), draftID, approver, loanMgr, memo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.VerifyNegoApplication")]
		public int VerifyNegoApplication([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DraftID", DbType="Int")] System.Nullable<int> draftID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Approver", DbType="NVarChar(16)")] string approver, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApproverName", DbType="NVarChar(16)")] string approverName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Memo", DbType="NVarChar(256)")] string memo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), draftID, approver, approverName, memo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RegisterNegoApplication")]
		public int RegisterNegoApplication([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DraftID", DbType="Int")] System.Nullable<int> draftID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Approver", DbType="NVarChar(16)")] string approver, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoanMgr", DbType="NVarChar(16)")] string loanMgr, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Memo", DbType="NVarChar(256)")] string memo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), draftID, approver, loanMgr, memo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AllowNegoApplication")]
		public int AllowNegoApplication([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DraftID", DbType="Int")] System.Nullable<int> draftID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Approver", DbType="NVarChar(16)")] string approver, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoanMgr", DbType="NVarChar(16)")] string loanMgr, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Memo", DbType="NVarChar(256)")] string memo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BranchNo", DbType="NVarChar(10)")] string branchNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), draftID, approver, loanMgr, memo, branchNo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DenyNegoWhenAllowing")]
		public int DenyNegoWhenAllowing([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DraftID", DbType="Int")] System.Nullable<int> draftID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Denier", DbType="NVarChar(16)")] string denier, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Reason", DbType="NVarChar(32)")] string reason)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), draftID, denier, reason);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DenyNegoWhenVerifying")]
		public int DenyNegoWhenVerifying([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DraftID", DbType="Int")] System.Nullable<int> draftID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Denier", DbType="NVarChar(16)")] string denier, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Reason", DbType="NVarChar(32)")] string reason)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), draftID, denier, reason);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DenyNegoWhenApproving")]
		public int DenyNegoWhenApproving([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DraftID", DbType="Int")] System.Nullable<int> draftID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Denier", DbType="NVarChar(16)")] string denier, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Reason", DbType="NVarChar(32)")] string reason)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), draftID, denier, reason);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DenyNegoWhenRegistering")]
		public int DenyNegoWhenRegistering([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DraftID", DbType="Int")] System.Nullable<int> draftID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Denier", DbType="NVarChar(16)")] string denier, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Reason", DbType="NVarChar(32)")] string reason)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), draftID, denier, reason);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxAmendmentForBank")]
		public int CreateInboxAmendmentForBank([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxNegoRejection")]
		public int CreateInboxNegoRejection([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxAmendmentForBene")]
		public int CreateInboxAmendmentForBene([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxAmendmentForCRC")]
		public int CreateInboxAmendmentForCRC([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxAmendmentForCustomer")]
		public int CreateInboxAmendmentForCustomer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxAmendmentRejection")]
		public int CreateInboxAmendmentRejection([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxCancellationForBank")]
		public int CreateInboxCancellationForBank([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxCancellationForBene")]
		public int CreateInboxCancellationForBene([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxCancellationForCustomer")]
		public int CreateInboxCancellationForCustomer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxCancellationRejection")]
		public int CreateInboxCancellationRejection([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxCreditForBank")]
		public int CreateInboxCreditForBank([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxCreditForCRC")]
		public int CreateInboxCreditForCRC([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxCreditForCustomer")]
		public int CreateInboxCreditForCustomer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxCreditRejection")]
		public int CreateInboxCreditRejection([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxCustomerAppCancelled")]
		public int CreateInboxCustomerAppCancelled([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxLcExpirationForCustomer")]
		public int CreateInboxLcExpirationForCustomer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxLOANForBank")]
		public int CreateInboxLOANForBank([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxNegoForBank")]
		public int CreateInboxNegoForBank([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxNegoForCRC")]
		public int CreateInboxNegoForCRC([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxNegoForCustomer")]
		public int CreateInboxNegoForCustomer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateInboxNegoForCustomerR3801")]
		public int CreateInboxNegoForCustomerR3801([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReceiptNo", DbType="NVarChar(10)")] string receiptNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AppBank", DbType="NVarChar(10)")] string appBank, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdvBank", DbType="NVarChar(10)")] string advBank, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CRCBank", DbType="NVarChar(10)")] string cRCBank)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID, receiptNo, appBank, advBank, cRCBank);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateCustomerInboxAmendmentApp")]
		public int CreateCustomerInboxAmendmentApp([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateCustomerInboxNegoApp")]
		public int CreateCustomerInboxNegoApp([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateCustomerInboxCancellationApp")]
		public int CreateCustomerInboxCancellationApp([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateCustomerInboxCreditApp")]
		public int CreateCustomerInboxCreditApp([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateBeneficiaryInbox")]
		public int CreateBeneficiaryInbox([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TypeID", DbType="Int")] System.Nullable<int> typeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankCode", DbType="NVarChar(20)")] string bankCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MsgContent", DbType="NVarChar(256)")] string msgContent)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), typeID, bankCode, msgContent);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateLetterOfCredit")]
		public int CreateLetterOfCredit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AppID", DbType="Int")] System.Nullable<int> appID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LcNo", DbType="NVarChar(24)")] string lcNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), appID, lcNo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateCreditApplication")]
		public int CreateCreditApplication(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IssuingBank", DbType="NVarChar(10)")] string issuingBank, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AdvisingBank", DbType="NVarChar(10)")] string advisingBank, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PayableBank", DbType="NVarChar(10)")] string payableBank, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApplicantReceiptNo", DbType="NVarChar(10)")] string applicantReceiptNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneReceiptNo", DbType="NVarChar(10)")] string beneReceiptNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApplyLcNo", DbType="NVarChar(64)")] string applyLcNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AppDate", DbType="DateTime")] System.Nullable<System.DateTime> appDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AtSight", DbType="Bit")] System.Nullable<bool> atSight, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="UsanceDay", DbType="Int")] System.Nullable<int> usanceDay, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChangeMode", DbType="NVarChar(32)")] string changeMode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Seal", DbType="Bit")] System.Nullable<bool> seal, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneSeal", DbType="Bit")] System.Nullable<bool> beneSeal, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Partial", DbType="Bit")] System.Nullable<bool> partial, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="NoAfterThan", DbType="DateTime")] System.Nullable<System.DateTime> noAfterThan, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EarlyInvDate", DbType="Bit")] System.Nullable<bool> earlyInvDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LargerInvAmt", DbType="Bit")] System.Nullable<bool> largerInvAmt, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SNAdditional", DbType="NVarChar(512)")] string sNAdditional, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttachPaying", DbType="Bit")] System.Nullable<bool> attachPaying, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttachAcceptance", DbType="Bit")] System.Nullable<bool> attachAcceptance, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttachInv", DbType="Bit")] System.Nullable<bool> attachInv, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttachAdditional", DbType="NVarChar(256)")] string attachAdditional, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LcAmt", DbType="Decimal(18,0)")] System.Nullable<decimal> lcAmt, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LcExpiry", DbType="DateTime")] System.Nullable<System.DateTime> lcExpiry, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LcCurrency", DbType="NVarChar(16)")] string lcCurrency, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Goods", DbType="NVarChar(512)")] string goods, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FileName", DbType="NVarChar(64)")] string fileName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Applicant", DbType="Int")] System.Nullable<int> applicant, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Bene", DbType="Int")] System.Nullable<int> bene, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentLevel", DbType="Int")] System.Nullable<int> currentLevel, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentDate", DbType="DateTime")] System.Nullable<System.DateTime> paymentDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocID", DbType="Int")] System.Nullable<int> docID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), issuingBank, advisingBank, payableBank, applicantReceiptNo, beneReceiptNo, applyLcNo, appDate, atSight, usanceDay, changeMode, seal, beneSeal, partial, noAfterThan, earlyInvDate, largerInvAmt, sNAdditional, attachPaying, attachAcceptance, attachInv, attachAdditional, lcAmt, lcExpiry, lcCurrency, goods, fileName, applicant, bene, currentLevel, paymentDate, docID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateLcAmendmentApplication")]
		public int CreateLcAmendmentApplication(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApplyLcNo", DbType="NVarChar(64)")] string applyLcNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AppDate", DbType="DateTime")] System.Nullable<System.DateTime> appDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Seal", DbType="Bit")] System.Nullable<bool> seal, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneSeal", DbType="Bit")] System.Nullable<bool> beneSeal, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Partial", DbType="Bit")] System.Nullable<bool> partial, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="NoAfterThan", DbType="DateTime")] System.Nullable<System.DateTime> noAfterThan, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EarlyInvDate", DbType="Bit")] System.Nullable<bool> earlyInvDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LargerInvAmt", DbType="Bit")] System.Nullable<bool> largerInvAmt, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SNAdditional", DbType="NVarChar(512)")] string sNAdditional, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttachPaying", DbType="Bit")] System.Nullable<bool> attachPaying, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttachAcceptance", DbType="Bit")] System.Nullable<bool> attachAcceptance, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttachInv", DbType="Bit")] System.Nullable<bool> attachInv, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttachAdditional", DbType="NVarChar(256)")] string attachAdditional, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LcAmt", DbType="Decimal(18,0)")] System.Nullable<decimal> lcAmt, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LcExpiry", DbType="DateTime")] System.Nullable<System.DateTime> lcExpiry, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LcCurrency", DbType="NVarChar(16)")] string lcCurrency, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Goods", DbType="NVarChar(512)")] string goods, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LcNo", DbType="NVarChar(24)")] string lcNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FileName", DbType="NVarChar(64)")] string fileName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentDate", DbType="DateTime")] System.Nullable<System.DateTime> paymentDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applyLcNo, appDate, seal, beneSeal, partial, noAfterThan, earlyInvDate, largerInvAmt, sNAdditional, attachPaying, attachAcceptance, attachInv, attachAdditional, lcAmt, lcExpiry, lcCurrency, goods, lcNo, fileName, paymentDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateCreditCancellation")]
		public int CreateCreditCancellation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApplyLcNo", DbType="NVarChar(64)")] string applyLcNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AppDate", DbType="DateTime")] System.Nullable<System.DateTime> appDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LcNo", DbType="NVarChar(24)")] string lcNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FileName", DbType="NVarChar(64)")] string fileName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), applyLcNo, appDate, lcNo, fileName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ResetAppCounterSign")]
		public int ResetAppCounterSign([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankCode", DbType="NVarChar(10)")] string bankCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bankCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DisableAppCounterSign")]
		public int DisableAppCounterSign([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankCode", DbType="NVarChar(10)")] string bankCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ApplicantID", DbType="Int")] System.Nullable<int> applicantID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BeneID", DbType="Int")] System.Nullable<int> beneID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bankCode, applicantID, beneID);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AmendingLcInformation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AmendingLcInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AmendingID;
		
		private System.DateTime _AmendingDate;
		
		private string _InformationNo;
		
		private EntitySet<LetterOfCreditVersion> _LetterOfCreditVersion;
		
		private EntitySet<NegoDraft> _NegoDraft;
		
		private EntityRef<AmendingLcApplication> _AmendingLcApplication;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAmendingIDChanging(int value);
    partial void OnAmendingIDChanged();
    partial void OnAmendingDateChanging(System.DateTime value);
    partial void OnAmendingDateChanged();
    partial void OnInformationNoChanging(string value);
    partial void OnInformationNoChanged();
    #endregion
		
		public AmendingLcInformation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendingID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AmendingID
		{
			get
			{
				return this._AmendingID;
			}
			set
			{
				if ((this._AmendingID != value))
				{
					if (this._AmendingLcApplication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendingIDChanging(value);
					this.SendPropertyChanging();
					this._AmendingID = value;
					this.SendPropertyChanged("AmendingID");
					this.OnAmendingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendingDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime AmendingDate
		{
			get
			{
				return this._AmendingDate;
			}
			set
			{
				if ((this._AmendingDate != value))
				{
					this.OnAmendingDateChanging(value);
					this.SendPropertyChanging();
					this._AmendingDate = value;
					this.SendPropertyChanged("AmendingDate");
					this.OnAmendingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InformationNo", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string InformationNo
		{
			get
			{
				return this._InformationNo;
			}
			set
			{
				if ((this._InformationNo != value))
				{
					this.OnInformationNoChanging(value);
					this.SendPropertyChanging();
					this._InformationNo = value;
					this.SendPropertyChanged("InformationNo");
					this.OnInformationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AmendingLcInformation_LetterOfCreditVersion", Storage="_LetterOfCreditVersion", ThisKey="AmendingID", OtherKey="AmendingID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<LetterOfCreditVersion> LetterOfCreditVersion
		{
			get
			{
				if ((this.serializing 
							&& (this._LetterOfCreditVersion.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LetterOfCreditVersion;
			}
			set
			{
				this._LetterOfCreditVersion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AmendingLcInformation_NegoDraft", Storage="_NegoDraft", ThisKey="AmendingID", OtherKey="AmendingID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<NegoDraft> NegoDraft
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoDraft.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoDraft;
			}
			set
			{
				this._NegoDraft.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AmendingLcApplication_AmendingLcInformation", Storage="_AmendingLcApplication", ThisKey="AmendingID", OtherKey="AmendingID", IsForeignKey=true)]
		public AmendingLcApplication AmendingLcApplication
		{
			get
			{
				return this._AmendingLcApplication.Entity;
			}
			set
			{
				AmendingLcApplication previousValue = this._AmendingLcApplication.Entity;
				if (((previousValue != value) 
							|| (this._AmendingLcApplication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AmendingLcApplication.Entity = null;
						previousValue.AmendingLcInformation = null;
					}
					this._AmendingLcApplication.Entity = value;
					if ((value != null))
					{
						value.AmendingLcInformation = this;
						this._AmendingID = value.AmendingID;
					}
					else
					{
						this._AmendingID = default(int);
					}
					this.SendPropertyChanged("AmendingLcApplication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LetterOfCreditVersion(LetterOfCreditVersion entity)
		{
			this.SendPropertyChanging();
			entity.AmendingLcInformation = this;
		}
		
		private void detach_LetterOfCreditVersion(LetterOfCreditVersion entity)
		{
			this.SendPropertyChanging();
			entity.AmendingLcInformation = null;
		}
		
		private void attach_NegoDraft(NegoDraft entity)
		{
			this.SendPropertyChanging();
			entity.AmendingLcInformation = this;
		}
		
		private void detach_NegoDraft(NegoDraft entity)
		{
			this.SendPropertyChanging();
			entity.AmendingLcInformation = null;
		}
		
		private void Initialize()
		{
			this._LetterOfCreditVersion = new EntitySet<LetterOfCreditVersion>(new Action<LetterOfCreditVersion>(this.attach_LetterOfCreditVersion), new Action<LetterOfCreditVersion>(this.detach_LetterOfCreditVersion));
			this._NegoDraft = new EntitySet<NegoDraft>(new Action<NegoDraft>(this.attach_NegoDraft), new Action<NegoDraft>(this.detach_NegoDraft));
			this._AmendingLcApplication = default(EntityRef<AmendingLcApplication>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AmendingLcRegistry")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AmendingLcRegistry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RegistrationID;
		
		private System.Nullable<decimal> _匯率;
		
		private System.Nullable<decimal> _增加信用狀記帳金額;
		
		private System.Nullable<int> _延長匯票期限;
		
		private System.Nullable<decimal> _改狀費金額;
		
		private string _延長信用狀原因;
		
		private string _延長匯票期限原因;
		
		private System.Nullable<decimal> _改狀手續費;
		
		private string _沖銷原因;
		
		private string _放款作業專員;
		
		private string _作業資訊組負責人;
		
		private System.Nullable<decimal> _沖銷存入保證金金額;
		
		private string _交易憑證編號;
		
		private EntitySet<AmendingLcApplication> _AmendingLcApplication;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegistrationIDChanging(int value);
    partial void OnRegistrationIDChanged();
    partial void On匯率Changing(System.Nullable<decimal> value);
    partial void On匯率Changed();
    partial void On增加信用狀記帳金額Changing(System.Nullable<decimal> value);
    partial void On增加信用狀記帳金額Changed();
    partial void On延長匯票期限Changing(System.Nullable<int> value);
    partial void On延長匯票期限Changed();
    partial void On改狀費金額Changing(System.Nullable<decimal> value);
    partial void On改狀費金額Changed();
    partial void On延長信用狀原因Changing(string value);
    partial void On延長信用狀原因Changed();
    partial void On延長匯票期限原因Changing(string value);
    partial void On延長匯票期限原因Changed();
    partial void On改狀手續費Changing(System.Nullable<decimal> value);
    partial void On改狀手續費Changed();
    partial void On沖銷原因Changing(string value);
    partial void On沖銷原因Changed();
    partial void On放款作業專員Changing(string value);
    partial void On放款作業專員Changed();
    partial void On作業資訊組負責人Changing(string value);
    partial void On作業資訊組負責人Changed();
    partial void On沖銷存入保證金金額Changing(System.Nullable<decimal> value);
    partial void On沖銷存入保證金金額Changed();
    partial void On交易憑證編號Changing(string value);
    partial void On交易憑證編號Changed();
    #endregion
		
		public AmendingLcRegistry()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RegistrationID
		{
			get
			{
				return this._RegistrationID;
			}
			set
			{
				if ((this._RegistrationID != value))
				{
					this.OnRegistrationIDChanging(value);
					this.SendPropertyChanging();
					this._RegistrationID = value;
					this.SendPropertyChanged("RegistrationID");
					this.OnRegistrationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_匯率", DbType="Decimal(18,3)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<decimal> 匯率
		{
			get
			{
				return this._匯率;
			}
			set
			{
				if ((this._匯率 != value))
				{
					this.On匯率Changing(value);
					this.SendPropertyChanging();
					this._匯率 = value;
					this.SendPropertyChanged("匯率");
					this.On匯率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_增加信用狀記帳金額", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<decimal> 增加信用狀記帳金額
		{
			get
			{
				return this._增加信用狀記帳金額;
			}
			set
			{
				if ((this._增加信用狀記帳金額 != value))
				{
					this.On增加信用狀記帳金額Changing(value);
					this.SendPropertyChanging();
					this._增加信用狀記帳金額 = value;
					this.SendPropertyChanged("增加信用狀記帳金額");
					this.On增加信用狀記帳金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_延長匯票期限", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> 延長匯票期限
		{
			get
			{
				return this._延長匯票期限;
			}
			set
			{
				if ((this._延長匯票期限 != value))
				{
					this.On延長匯票期限Changing(value);
					this.SendPropertyChanging();
					this._延長匯票期限 = value;
					this.SendPropertyChanged("延長匯票期限");
					this.On延長匯票期限Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_改狀費金額", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> 改狀費金額
		{
			get
			{
				return this._改狀費金額;
			}
			set
			{
				if ((this._改狀費金額 != value))
				{
					this.On改狀費金額Changing(value);
					this.SendPropertyChanging();
					this._改狀費金額 = value;
					this.SendPropertyChanged("改狀費金額");
					this.On改狀費金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_延長信用狀原因", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string 延長信用狀原因
		{
			get
			{
				return this._延長信用狀原因;
			}
			set
			{
				if ((this._延長信用狀原因 != value))
				{
					this.On延長信用狀原因Changing(value);
					this.SendPropertyChanging();
					this._延長信用狀原因 = value;
					this.SendPropertyChanged("延長信用狀原因");
					this.On延長信用狀原因Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_延長匯票期限原因", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string 延長匯票期限原因
		{
			get
			{
				return this._延長匯票期限原因;
			}
			set
			{
				if ((this._延長匯票期限原因 != value))
				{
					this.On延長匯票期限原因Changing(value);
					this.SendPropertyChanging();
					this._延長匯票期限原因 = value;
					this.SendPropertyChanged("延長匯票期限原因");
					this.On延長匯票期限原因Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_改狀手續費", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<decimal> 改狀手續費
		{
			get
			{
				return this._改狀手續費;
			}
			set
			{
				if ((this._改狀手續費 != value))
				{
					this.On改狀手續費Changing(value);
					this.SendPropertyChanging();
					this._改狀手續費 = value;
					this.SendPropertyChanged("改狀手續費");
					this.On改狀手續費Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_沖銷原因", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string 沖銷原因
		{
			get
			{
				return this._沖銷原因;
			}
			set
			{
				if ((this._沖銷原因 != value))
				{
					this.On沖銷原因Changing(value);
					this.SendPropertyChanging();
					this._沖銷原因 = value;
					this.SendPropertyChanged("沖銷原因");
					this.On沖銷原因Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_放款作業專員", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string 放款作業專員
		{
			get
			{
				return this._放款作業專員;
			}
			set
			{
				if ((this._放款作業專員 != value))
				{
					this.On放款作業專員Changing(value);
					this.SendPropertyChanging();
					this._放款作業專員 = value;
					this.SendPropertyChanged("放款作業專員");
					this.On放款作業專員Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_作業資訊組負責人", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string 作業資訊組負責人
		{
			get
			{
				return this._作業資訊組負責人;
			}
			set
			{
				if ((this._作業資訊組負責人 != value))
				{
					this.On作業資訊組負責人Changing(value);
					this.SendPropertyChanging();
					this._作業資訊組負責人 = value;
					this.SendPropertyChanged("作業資訊組負責人");
					this.On作業資訊組負責人Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_沖銷存入保證金金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<decimal> 沖銷存入保證金金額
		{
			get
			{
				return this._沖銷存入保證金金額;
			}
			set
			{
				if ((this._沖銷存入保證金金額 != value))
				{
					this.On沖銷存入保證金金額Changing(value);
					this.SendPropertyChanging();
					this._沖銷存入保證金金額 = value;
					this.SendPropertyChanged("沖銷存入保證金金額");
					this.On沖銷存入保證金金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_交易憑證編號", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string 交易憑證編號
		{
			get
			{
				return this._交易憑證編號;
			}
			set
			{
				if ((this._交易憑證編號 != value))
				{
					this.On交易憑證編號Changing(value);
					this.SendPropertyChanging();
					this._交易憑證編號 = value;
					this.SendPropertyChanged("交易憑證編號");
					this.On交易憑證編號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AmendingLcRegistry_AmendingLcApplication", Storage="_AmendingLcApplication", ThisKey="RegistrationID", OtherKey="RegistrationID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<AmendingLcApplication> AmendingLcApplication
		{
			get
			{
				if ((this.serializing 
							&& (this._AmendingLcApplication.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AmendingLcApplication;
			}
			set
			{
				this._AmendingLcApplication.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AmendingLcApplication(AmendingLcApplication entity)
		{
			this.SendPropertyChanging();
			entity.AmendingLcRegistry = this;
		}
		
		private void detach_AmendingLcApplication(AmendingLcApplication entity)
		{
			this.SendPropertyChanging();
			entity.AmendingLcRegistry = null;
		}
		
		private void Initialize()
		{
			this._AmendingLcApplication = new EntitySet<AmendingLcApplication>(new Action<AmendingLcApplication>(this.attach_AmendingLcApplication), new Action<AmendingLcApplication>(this.detach_AmendingLcApplication));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttachableDocument")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AttachableDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttachmentID;
		
		private System.Nullable<bool> _匯票付款申請書;
		
		private System.Nullable<bool> _匯票承兌申請書;
		
		private System.Nullable<bool> _統一發票;
		
		private string _其他;
		
		private System.Nullable<bool> _電子發票證明聯;
		
		private EntitySet<CreditApplicationDocumentary> _CreditApplicationDocumentary;
		
		private EntitySet<LetterOfCreditVersion> _LetterOfCreditVersion;
		
		private EntitySet<AmendingLcApplication> _AmendingLcApplication;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachmentIDChanging(int value);
    partial void OnAttachmentIDChanged();
    partial void On匯票付款申請書Changing(System.Nullable<bool> value);
    partial void On匯票付款申請書Changed();
    partial void On匯票承兌申請書Changing(System.Nullable<bool> value);
    partial void On匯票承兌申請書Changed();
    partial void On統一發票Changing(System.Nullable<bool> value);
    partial void On統一發票Changed();
    partial void On其他Changing(string value);
    partial void On其他Changed();
    partial void On電子發票證明聯Changing(System.Nullable<bool> value);
    partial void On電子發票證明聯Changed();
    #endregion
		
		public AttachableDocument()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AttachmentID
		{
			get
			{
				return this._AttachmentID;
			}
			set
			{
				if ((this._AttachmentID != value))
				{
					this.OnAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._AttachmentID = value;
					this.SendPropertyChanged("AttachmentID");
					this.OnAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_匯票付款申請書", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<bool> 匯票付款申請書
		{
			get
			{
				return this._匯票付款申請書;
			}
			set
			{
				if ((this._匯票付款申請書 != value))
				{
					this.On匯票付款申請書Changing(value);
					this.SendPropertyChanging();
					this._匯票付款申請書 = value;
					this.SendPropertyChanged("匯票付款申請書");
					this.On匯票付款申請書Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_匯票承兌申請書", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> 匯票承兌申請書
		{
			get
			{
				return this._匯票承兌申請書;
			}
			set
			{
				if ((this._匯票承兌申請書 != value))
				{
					this.On匯票承兌申請書Changing(value);
					this.SendPropertyChanging();
					this._匯票承兌申請書 = value;
					this.SendPropertyChanged("匯票承兌申請書");
					this.On匯票承兌申請書Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_統一發票", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> 統一發票
		{
			get
			{
				return this._統一發票;
			}
			set
			{
				if ((this._統一發票 != value))
				{
					this.On統一發票Changing(value);
					this.SendPropertyChanging();
					this._統一發票 = value;
					this.SendPropertyChanged("統一發票");
					this.On統一發票Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_其他", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string 其他
		{
			get
			{
				return this._其他;
			}
			set
			{
				if ((this._其他 != value))
				{
					this.On其他Changing(value);
					this.SendPropertyChanging();
					this._其他 = value;
					this.SendPropertyChanged("其他");
					this.On其他Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_電子發票證明聯", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> 電子發票證明聯
		{
			get
			{
				return this._電子發票證明聯;
			}
			set
			{
				if ((this._電子發票證明聯 != value))
				{
					this.On電子發票證明聯Changing(value);
					this.SendPropertyChanging();
					this._電子發票證明聯 = value;
					this.SendPropertyChanged("電子發票證明聯");
					this.On電子發票證明聯Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttachableDocument_CreditApplicationDocumentary", Storage="_CreditApplicationDocumentary", ThisKey="AttachmentID", OtherKey="AttachmentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<CreditApplicationDocumentary> CreditApplicationDocumentary
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditApplicationDocumentary.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CreditApplicationDocumentary;
			}
			set
			{
				this._CreditApplicationDocumentary.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttachableDocument_LetterOfCreditVersion", Storage="_LetterOfCreditVersion", ThisKey="AttachmentID", OtherKey="AttachmentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<LetterOfCreditVersion> LetterOfCreditVersion
		{
			get
			{
				if ((this.serializing 
							&& (this._LetterOfCreditVersion.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LetterOfCreditVersion;
			}
			set
			{
				this._LetterOfCreditVersion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttachableDocument_AmendingLcApplication", Storage="_AmendingLcApplication", ThisKey="AttachmentID", OtherKey="AttachmentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<AmendingLcApplication> AmendingLcApplication
		{
			get
			{
				if ((this.serializing 
							&& (this._AmendingLcApplication.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AmendingLcApplication;
			}
			set
			{
				this._AmendingLcApplication.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.AttachableDocument = this;
		}
		
		private void detach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.AttachableDocument = null;
		}
		
		private void attach_LetterOfCreditVersion(LetterOfCreditVersion entity)
		{
			this.SendPropertyChanging();
			entity.AttachableDocument = this;
		}
		
		private void detach_LetterOfCreditVersion(LetterOfCreditVersion entity)
		{
			this.SendPropertyChanging();
			entity.AttachableDocument = null;
		}
		
		private void attach_AmendingLcApplication(AmendingLcApplication entity)
		{
			this.SendPropertyChanging();
			entity.AttachableDocument = this;
		}
		
		private void detach_AmendingLcApplication(AmendingLcApplication entity)
		{
			this.SendPropertyChanging();
			entity.AttachableDocument = null;
		}
		
		private void Initialize()
		{
			this._CreditApplicationDocumentary = new EntitySet<CreditApplicationDocumentary>(new Action<CreditApplicationDocumentary>(this.attach_CreditApplicationDocumentary), new Action<CreditApplicationDocumentary>(this.detach_CreditApplicationDocumentary));
			this._LetterOfCreditVersion = new EntitySet<LetterOfCreditVersion>(new Action<LetterOfCreditVersion>(this.attach_LetterOfCreditVersion), new Action<LetterOfCreditVersion>(this.detach_LetterOfCreditVersion));
			this._AmendingLcApplication = new EntitySet<AmendingLcApplication>(new Action<AmendingLcApplication>(this.attach_AmendingLcApplication), new Action<AmendingLcApplication>(this.detach_AmendingLcApplication));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankCRC")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BankCRC
	{
		
		private string _BankCode;
		
		private string _CRCName;
		
		public BankCRC()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					this._BankCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRCName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CRCName
		{
			get
			{
				return this._CRCName;
			}
			set
			{
				if ((this._CRCName != value))
				{
					this._CRCName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankData")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BankData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BankCode;
		
		private string _BranchName;
		
		private string _Address;
		
		private string _Phone;
		
		private string _CRC_Branch;
		
		private System.Nullable<int> _BranchType;
		
		private EntitySet<CustomerOfBranch> _CustomerOfBranch;
		
		private EntitySet<BankInbox> _BankInbox;
		
		private EntitySet<BeneficiaryTransferInto> _BeneficiaryTransferInto;
		
		private EntitySet<NegoDraftExtension> _NegotiatedDraft;
		
		private EntitySet<NegoDraftExtension> _DraftByLcBranch;
		
		private EntityRef<DisabledBranch> _DisabledBranch;
		
		private EntityRef<CRCGroup> _CRCGroup;
		
		private EntitySet<CRCGroupArrangement> _CRCGroupArrangement;
		
		private EntitySet<OrganizationBranchSettings> _OrganizationBranchSettings;
		
		private EntitySet<NegoLC> _NegoLC;
		
		private EntitySet<NegoLC> _NegoLC1;
		
		private EntitySet<CreditApplicationDocumentary> _CreditApplicationDocumentary;
		
		private EntitySet<CreditApplicationDocumentary> _CreditApplicationDocumentary1;
		
		private EntitySet<BeneficiaryData> _BeneficiaryData;
		
		private EntitySet<LetterOfCredit> _LetterOfCredit;
		
		private EntitySet<BankUserBranch> _BankUserBranch;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCRC_BranchChanging(string value);
    partial void OnCRC_BranchChanged();
    partial void OnBranchTypeChanging(System.Nullable<int> value);
    partial void OnBranchTypeChanged();
    #endregion
		
		public BankData()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRC_Branch", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CRC_Branch
		{
			get
			{
				return this._CRC_Branch;
			}
			set
			{
				if ((this._CRC_Branch != value))
				{
					this.OnCRC_BranchChanging(value);
					this.SendPropertyChanging();
					this._CRC_Branch = value;
					this.SendPropertyChanged("CRC_Branch");
					this.OnCRC_BranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchType", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> BranchType
		{
			get
			{
				return this._BranchType;
			}
			set
			{
				if ((this._BranchType != value))
				{
					this.OnBranchTypeChanging(value);
					this.SendPropertyChanging();
					this._BranchType = value;
					this.SendPropertyChanged("BranchType");
					this.OnBranchTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_CustomerOfBranch", Storage="_CustomerOfBranch", ThisKey="BankCode", OtherKey="BankCode")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<CustomerOfBranch> CustomerOfBranch
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerOfBranch.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomerOfBranch;
			}
			set
			{
				this._CustomerOfBranch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_BankInbox", Storage="_BankInbox", ThisKey="BankCode", OtherKey="BankCode")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<BankInbox> BankInbox
		{
			get
			{
				if ((this.serializing 
							&& (this._BankInbox.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BankInbox;
			}
			set
			{
				this._BankInbox.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_BeneficiaryTransferInto", Storage="_BeneficiaryTransferInto", ThisKey="BankCode", OtherKey="BankCode")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<BeneficiaryTransferInto> BeneficiaryTransferInto
		{
			get
			{
				if ((this.serializing 
							&& (this._BeneficiaryTransferInto.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BeneficiaryTransferInto;
			}
			set
			{
				this._BeneficiaryTransferInto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_NegoDraftExtension", Storage="_NegotiatedDraft", ThisKey="BankCode", OtherKey="NegoBranch")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<NegoDraftExtension> NegotiatedDraft
		{
			get
			{
				if ((this.serializing 
							&& (this._NegotiatedDraft.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegotiatedDraft;
			}
			set
			{
				this._NegotiatedDraft.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_NegoDraftExtension1", Storage="_DraftByLcBranch", ThisKey="BankCode", OtherKey="LcBranch")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<NegoDraftExtension> DraftByLcBranch
		{
			get
			{
				if ((this.serializing 
							&& (this._DraftByLcBranch.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DraftByLcBranch;
			}
			set
			{
				this._DraftByLcBranch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_DisabledBranch", Storage="_DisabledBranch", ThisKey="BankCode", OtherKey="BankCode", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public DisabledBranch DisabledBranch
		{
			get
			{
				if ((this.serializing 
							&& (this._DisabledBranch.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._DisabledBranch.Entity;
			}
			set
			{
				DisabledBranch previousValue = this._DisabledBranch.Entity;
				if (((previousValue != value) 
							|| (this._DisabledBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisabledBranch.Entity = null;
						previousValue.BankData = null;
					}
					this._DisabledBranch.Entity = value;
					if ((value != null))
					{
						value.BankData = this;
					}
					this.SendPropertyChanged("DisabledBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_CRCGroup", Storage="_CRCGroup", ThisKey="BankCode", OtherKey="CRCBranch", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public CRCGroup CRCGroup
		{
			get
			{
				if ((this.serializing 
							&& (this._CRCGroup.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._CRCGroup.Entity;
			}
			set
			{
				CRCGroup previousValue = this._CRCGroup.Entity;
				if (((previousValue != value) 
							|| (this._CRCGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRCGroup.Entity = null;
						previousValue.BankData = null;
					}
					this._CRCGroup.Entity = value;
					if ((value != null))
					{
						value.BankData = this;
					}
					this.SendPropertyChanged("CRCGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_CRCGroupArrangement", Storage="_CRCGroupArrangement", ThisKey="BankCode", OtherKey="BankCode")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<CRCGroupArrangement> CRCGroupArrangement
		{
			get
			{
				if ((this.serializing 
							&& (this._CRCGroupArrangement.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRCGroupArrangement;
			}
			set
			{
				this._CRCGroupArrangement.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_OrganizationBranchSettings", Storage="_OrganizationBranchSettings", ThisKey="BankCode", OtherKey="BankCode")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<OrganizationBranchSettings> OrganizationBranchSettings
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationBranchSettings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OrganizationBranchSettings;
			}
			set
			{
				this._OrganizationBranchSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_NegoLC", Storage="_NegoLC", ThisKey="BankCode", OtherKey="AdvisingBank")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<NegoLC> NegoLC
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoLC.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoLC;
			}
			set
			{
				this._NegoLC.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_NegoLC1", Storage="_NegoLC1", ThisKey="BankCode", OtherKey="PayableBank")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<NegoLC> NegoLC1
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoLC1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoLC1;
			}
			set
			{
				this._NegoLC1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_CreditApplicationDocumentary", Storage="_CreditApplicationDocumentary", ThisKey="BankCode", OtherKey="付款行")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<CreditApplicationDocumentary> CreditApplicationDocumentary
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditApplicationDocumentary.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CreditApplicationDocumentary;
			}
			set
			{
				this._CreditApplicationDocumentary.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_CreditApplicationDocumentary1", Storage="_CreditApplicationDocumentary1", ThisKey="BankCode", OtherKey="通知行")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<CreditApplicationDocumentary> CreditApplicationDocumentary1
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditApplicationDocumentary1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CreditApplicationDocumentary1;
			}
			set
			{
				this._CreditApplicationDocumentary1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_BeneficiaryData", Storage="_BeneficiaryData", ThisKey="BankCode", OtherKey="NegoCenter")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<BeneficiaryData> BeneficiaryData
		{
			get
			{
				if ((this.serializing 
							&& (this._BeneficiaryData.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BeneficiaryData;
			}
			set
			{
				this._BeneficiaryData.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_LetterOfCredit", Storage="_LetterOfCredit", ThisKey="BankCode", OtherKey="NotifyingBank")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<LetterOfCredit> LetterOfCredit
		{
			get
			{
				if ((this.serializing 
							&& (this._LetterOfCredit.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LetterOfCredit;
			}
			set
			{
				this._LetterOfCredit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_BankUserBranch", Storage="_BankUserBranch", ThisKey="BankCode", OtherKey="BRANCH_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<BankUserBranch> BankUserBranch
		{
			get
			{
				if ((this.serializing 
							&& (this._BankUserBranch.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BankUserBranch;
			}
			set
			{
				this._BankUserBranch.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerOfBranch(CustomerOfBranch entity)
		{
			this.SendPropertyChanging();
			entity.BankData = this;
		}
		
		private void detach_CustomerOfBranch(CustomerOfBranch entity)
		{
			this.SendPropertyChanging();
			entity.BankData = null;
		}
		
		private void attach_BankInbox(BankInbox entity)
		{
			this.SendPropertyChanging();
			entity.BankData = this;
		}
		
		private void detach_BankInbox(BankInbox entity)
		{
			this.SendPropertyChanging();
			entity.BankData = null;
		}
		
		private void attach_BeneficiaryTransferInto(BeneficiaryTransferInto entity)
		{
			this.SendPropertyChanging();
			entity.BankData = this;
		}
		
		private void detach_BeneficiaryTransferInto(BeneficiaryTransferInto entity)
		{
			this.SendPropertyChanging();
			entity.BankData = null;
		}
		
		private void attach_NegotiatedDraft(NegoDraftExtension entity)
		{
			this.SendPropertyChanging();
			entity.NegotiationBranch = this;
		}
		
		private void detach_NegotiatedDraft(NegoDraftExtension entity)
		{
			this.SendPropertyChanging();
			entity.NegotiationBranch = null;
		}
		
		private void attach_DraftByLcBranch(NegoDraftExtension entity)
		{
			this.SendPropertyChanging();
			entity.IssuingLcBranch = this;
		}
		
		private void detach_DraftByLcBranch(NegoDraftExtension entity)
		{
			this.SendPropertyChanging();
			entity.IssuingLcBranch = null;
		}
		
		private void attach_CRCGroupArrangement(CRCGroupArrangement entity)
		{
			this.SendPropertyChanging();
			entity.BankData = this;
		}
		
		private void detach_CRCGroupArrangement(CRCGroupArrangement entity)
		{
			this.SendPropertyChanging();
			entity.BankData = null;
		}
		
		private void attach_OrganizationBranchSettings(OrganizationBranchSettings entity)
		{
			this.SendPropertyChanging();
			entity.BankData = this;
		}
		
		private void detach_OrganizationBranchSettings(OrganizationBranchSettings entity)
		{
			this.SendPropertyChanging();
			entity.BankData = null;
		}
		
		private void attach_NegoLC(NegoLC entity)
		{
			this.SendPropertyChanging();
			entity.AdvisingBankData = this;
		}
		
		private void detach_NegoLC(NegoLC entity)
		{
			this.SendPropertyChanging();
			entity.AdvisingBankData = null;
		}
		
		private void attach_NegoLC1(NegoLC entity)
		{
			this.SendPropertyChanging();
			entity.PayableBankData = this;
		}
		
		private void detach_NegoLC1(NegoLC entity)
		{
			this.SendPropertyChanging();
			entity.PayableBankData = null;
		}
		
		private void attach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.PayableBank = this;
		}
		
		private void detach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.PayableBank = null;
		}
		
		private void attach_CreditApplicationDocumentary1(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.AdvisingBank = this;
		}
		
		private void detach_CreditApplicationDocumentary1(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.AdvisingBank = null;
		}
		
		private void attach_BeneficiaryData(BeneficiaryData entity)
		{
			this.SendPropertyChanging();
			entity.BankData = this;
		}
		
		private void detach_BeneficiaryData(BeneficiaryData entity)
		{
			this.SendPropertyChanging();
			entity.BankData = null;
		}
		
		private void attach_LetterOfCredit(LetterOfCredit entity)
		{
			this.SendPropertyChanging();
			entity.BankData = this;
		}
		
		private void detach_LetterOfCredit(LetterOfCredit entity)
		{
			this.SendPropertyChanging();
			entity.BankData = null;
		}
		
		private void attach_BankUserBranch(BankUserBranch entity)
		{
			this.SendPropertyChanging();
			entity.BankData = this;
		}
		
		private void detach_BankUserBranch(BankUserBranch entity)
		{
			this.SendPropertyChanging();
			entity.BankData = null;
		}
		
		private void Initialize()
		{
			this._CustomerOfBranch = new EntitySet<CustomerOfBranch>(new Action<CustomerOfBranch>(this.attach_CustomerOfBranch), new Action<CustomerOfBranch>(this.detach_CustomerOfBranch));
			this._BankInbox = new EntitySet<BankInbox>(new Action<BankInbox>(this.attach_BankInbox), new Action<BankInbox>(this.detach_BankInbox));
			this._BeneficiaryTransferInto = new EntitySet<BeneficiaryTransferInto>(new Action<BeneficiaryTransferInto>(this.attach_BeneficiaryTransferInto), new Action<BeneficiaryTransferInto>(this.detach_BeneficiaryTransferInto));
			this._NegotiatedDraft = new EntitySet<NegoDraftExtension>(new Action<NegoDraftExtension>(this.attach_NegotiatedDraft), new Action<NegoDraftExtension>(this.detach_NegotiatedDraft));
			this._DraftByLcBranch = new EntitySet<NegoDraftExtension>(new Action<NegoDraftExtension>(this.attach_DraftByLcBranch), new Action<NegoDraftExtension>(this.detach_DraftByLcBranch));
			this._DisabledBranch = default(EntityRef<DisabledBranch>);
			this._CRCGroup = default(EntityRef<CRCGroup>);
			this._CRCGroupArrangement = new EntitySet<CRCGroupArrangement>(new Action<CRCGroupArrangement>(this.attach_CRCGroupArrangement), new Action<CRCGroupArrangement>(this.detach_CRCGroupArrangement));
			this._OrganizationBranchSettings = new EntitySet<OrganizationBranchSettings>(new Action<OrganizationBranchSettings>(this.attach_OrganizationBranchSettings), new Action<OrganizationBranchSettings>(this.detach_OrganizationBranchSettings));
			this._NegoLC = new EntitySet<NegoLC>(new Action<NegoLC>(this.attach_NegoLC), new Action<NegoLC>(this.detach_NegoLC));
			this._NegoLC1 = new EntitySet<NegoLC>(new Action<NegoLC>(this.attach_NegoLC1), new Action<NegoLC>(this.detach_NegoLC1));
			this._CreditApplicationDocumentary = new EntitySet<CreditApplicationDocumentary>(new Action<CreditApplicationDocumentary>(this.attach_CreditApplicationDocumentary), new Action<CreditApplicationDocumentary>(this.detach_CreditApplicationDocumentary));
			this._CreditApplicationDocumentary1 = new EntitySet<CreditApplicationDocumentary>(new Action<CreditApplicationDocumentary>(this.attach_CreditApplicationDocumentary1), new Action<CreditApplicationDocumentary>(this.detach_CreditApplicationDocumentary1));
			this._BeneficiaryData = new EntitySet<BeneficiaryData>(new Action<BeneficiaryData>(this.attach_BeneficiaryData), new Action<BeneficiaryData>(this.detach_BeneficiaryData));
			this._LetterOfCredit = new EntitySet<LetterOfCredit>(new Action<LetterOfCredit>(this.attach_LetterOfCredit), new Action<LetterOfCredit>(this.detach_LetterOfCredit));
			this._BankUserBranch = new EntitySet<BankUserBranch>(new Action<BankUserBranch>(this.attach_BankUserBranch), new Action<BankUserBranch>(this.detach_BankUserBranch));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankDataScope")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BankDataScope : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LevelID;
		
		private EntityRef<LevelExpression> _LevelExpression;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLevelIDChanging(int value);
    partial void OnLevelIDChanged();
    #endregion
		
		public BankDataScope()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					if (this._LevelExpression.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_BankDataScope", Storage="_LevelExpression", ThisKey="LevelID", OtherKey="LevelID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LevelExpression LevelExpression
		{
			get
			{
				return this._LevelExpression.Entity;
			}
			set
			{
				LevelExpression previousValue = this._LevelExpression.Entity;
				if (((previousValue != value) 
							|| (this._LevelExpression.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LevelExpression.Entity = null;
						previousValue.BankDataScope = null;
					}
					this._LevelExpression.Entity = value;
					if ((value != null))
					{
						value.BankDataScope = this;
						this._LevelID = value.LevelID;
					}
					else
					{
						this._LevelID = default(int);
					}
					this.SendPropertyChanged("LevelExpression");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._LevelExpression = default(EntityRef<LevelExpression>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessDataScope")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BusinessDataScope : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LevelID;
		
		private EntityRef<LevelExpression> _LevelExpression;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLevelIDChanging(int value);
    partial void OnLevelIDChanged();
    #endregion
		
		public BusinessDataScope()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					if (this._LevelExpression.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_BusinessDataScope", Storage="_LevelExpression", ThisKey="LevelID", OtherKey="LevelID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LevelExpression LevelExpression
		{
			get
			{
				return this._LevelExpression.Entity;
			}
			set
			{
				LevelExpression previousValue = this._LevelExpression.Entity;
				if (((previousValue != value) 
							|| (this._LevelExpression.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LevelExpression.Entity = null;
						previousValue.BusinessDataScope = null;
					}
					this._LevelExpression.Entity = value;
					if ((value != null))
					{
						value.BusinessDataScope = this;
						this._LevelID = value.LevelID;
					}
					else
					{
						this._LevelID = default(int);
					}
					this.SendPropertyChanged("LevelExpression");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._LevelExpression = default(EntityRef<LevelExpression>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CreditCancellation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CreditCancellation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CancellationID;
		
		private System.Nullable<int> _RegistrationID;
		
		private string _註銷申請號碼;
		
		private int _LcID;
		
		private System.Nullable<System.DateTime> _申請日期;
		
		private System.Nullable<char> _status;
		
		private string _SysDocID;
		
		private string _FileName;
		
		private EntityRef<CreditCancellationInfo> _CreditCancellationInfo;
		
		private EntityRef<Documentary> _Documentary;
		
		private EntityRef<CancellationRegistry> _CancellationRegistry;
		
		private EntityRef<LetterOfCredit> _LetterOfCredit;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCancellationIDChanging(int value);
    partial void OnCancellationIDChanged();
    partial void OnRegistrationIDChanging(System.Nullable<int> value);
    partial void OnRegistrationIDChanged();
    partial void On註銷申請號碼Changing(string value);
    partial void On註銷申請號碼Changed();
    partial void OnLcIDChanging(int value);
    partial void OnLcIDChanged();
    partial void On申請日期Changing(System.Nullable<System.DateTime> value);
    partial void On申請日期Changed();
    partial void OnstatusChanging(System.Nullable<char> value);
    partial void OnstatusChanged();
    partial void OnSysDocIDChanging(string value);
    partial void OnSysDocIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public CreditCancellation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancellationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CancellationID
		{
			get
			{
				return this._CancellationID;
			}
			set
			{
				if ((this._CancellationID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCancellationIDChanging(value);
					this.SendPropertyChanging();
					this._CancellationID = value;
					this.SendPropertyChanged("CancellationID");
					this.OnCancellationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> RegistrationID
		{
			get
			{
				return this._RegistrationID;
			}
			set
			{
				if ((this._RegistrationID != value))
				{
					if (this._CancellationRegistry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegistrationIDChanging(value);
					this.SendPropertyChanging();
					this._RegistrationID = value;
					this.SendPropertyChanged("RegistrationID");
					this.OnRegistrationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_註銷申請號碼", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string 註銷申請號碼
		{
			get
			{
				return this._註銷申請號碼;
			}
			set
			{
				if ((this._註銷申請號碼 != value))
				{
					this.On註銷申請號碼Changing(value);
					this.SendPropertyChanging();
					this._註銷申請號碼 = value;
					this.SendPropertyChanged("註銷申請號碼");
					this.On註銷申請號碼Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LcID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int LcID
		{
			get
			{
				return this._LcID;
			}
			set
			{
				if ((this._LcID != value))
				{
					if (this._LetterOfCredit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLcIDChanging(value);
					this.SendPropertyChanging();
					this._LcID = value;
					this.SendPropertyChanged("LcID");
					this.OnLcIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_申請日期", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> 申請日期
		{
			get
			{
				return this._申請日期;
			}
			set
			{
				if ((this._申請日期 != value))
				{
					this.On申請日期Changing(value);
					this.SendPropertyChanging();
					this._申請日期 = value;
					this.SendPropertyChanged("申請日期");
					this.On申請日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Char(1)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<char> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysDocID", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string SysDocID
		{
			get
			{
				return this._SysDocID;
			}
			set
			{
				if ((this._SysDocID != value))
				{
					this.OnSysDocIDChanging(value);
					this.SendPropertyChanging();
					this._SysDocID = value;
					this.SendPropertyChanged("SysDocID");
					this.OnSysDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditCancellation_CreditCancellationInfo", Storage="_CreditCancellationInfo", ThisKey="CancellationID", OtherKey="CancellationID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public CreditCancellationInfo CreditCancellationInfo
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditCancellationInfo.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._CreditCancellationInfo.Entity;
			}
			set
			{
				CreditCancellationInfo previousValue = this._CreditCancellationInfo.Entity;
				if (((previousValue != value) 
							|| (this._CreditCancellationInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CreditCancellationInfo.Entity = null;
						previousValue.CreditCancellation = null;
					}
					this._CreditCancellationInfo.Entity = value;
					if ((value != null))
					{
						value.CreditCancellation = this;
					}
					this.SendPropertyChanged("CreditCancellationInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_CreditCancellation", Storage="_Documentary", ThisKey="CancellationID", OtherKey="DocID", IsForeignKey=true)]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.CreditCancellation = null;
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.CreditCancellation = this;
						this._CancellationID = value.DocID;
					}
					else
					{
						this._CancellationID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CancellationRegistry_CreditCancellation", Storage="_CancellationRegistry", ThisKey="RegistrationID", OtherKey="RegistrationID", IsForeignKey=true)]
		public CancellationRegistry CancellationRegistry
		{
			get
			{
				return this._CancellationRegistry.Entity;
			}
			set
			{
				CancellationRegistry previousValue = this._CancellationRegistry.Entity;
				if (((previousValue != value) 
							|| (this._CancellationRegistry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CancellationRegistry.Entity = null;
						previousValue.CreditCancellation.Remove(this);
					}
					this._CancellationRegistry.Entity = value;
					if ((value != null))
					{
						value.CreditCancellation.Add(this);
						this._RegistrationID = value.RegistrationID;
					}
					else
					{
						this._RegistrationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CancellationRegistry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LetterOfCredit_CreditCancellation", Storage="_LetterOfCredit", ThisKey="LcID", OtherKey="LcID", IsForeignKey=true)]
		public LetterOfCredit LetterOfCredit
		{
			get
			{
				return this._LetterOfCredit.Entity;
			}
			set
			{
				LetterOfCredit previousValue = this._LetterOfCredit.Entity;
				if (((previousValue != value) 
							|| (this._LetterOfCredit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LetterOfCredit.Entity = null;
						previousValue.CreditCancellation.Remove(this);
					}
					this._LetterOfCredit.Entity = value;
					if ((value != null))
					{
						value.CreditCancellation.Add(this);
						this._LcID = value.LcID;
					}
					else
					{
						this._LcID = default(int);
					}
					this.SendPropertyChanged("LetterOfCredit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CreditCancellationInfo = default(EntityRef<CreditCancellationInfo>);
			this._Documentary = default(EntityRef<Documentary>);
			this._CancellationRegistry = default(EntityRef<CancellationRegistry>);
			this._LetterOfCredit = default(EntityRef<LetterOfCredit>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.currency_type")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class currency_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _currency_id;
		
		private string _currency_name;
		
		private string _apprev_name;
		
		private EntitySet<LcItem> _LcItems;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncurrency_idChanging(int value);
    partial void Oncurrency_idChanged();
    partial void Oncurrency_nameChanging(string value);
    partial void Oncurrency_nameChanged();
    partial void Onapprev_nameChanging(string value);
    partial void Onapprev_nameChanged();
    #endregion
		
		public currency_type()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int currency_id
		{
			get
			{
				return this._currency_id;
			}
			set
			{
				if ((this._currency_id != value))
				{
					this.Oncurrency_idChanging(value);
					this.SendPropertyChanging();
					this._currency_id = value;
					this.SendPropertyChanged("currency_id");
					this.Oncurrency_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency_name", DbType="NVarChar(8)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string currency_name
		{
			get
			{
				return this._currency_name;
			}
			set
			{
				if ((this._currency_name != value))
				{
					this.Oncurrency_nameChanging(value);
					this.SendPropertyChanging();
					this._currency_name = value;
					this.SendPropertyChanged("currency_name");
					this.Oncurrency_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apprev_name", DbType="NVarChar(6)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string apprev_name
		{
			get
			{
				return this._apprev_name;
			}
			set
			{
				if ((this._apprev_name != value))
				{
					this.Onapprev_nameChanging(value);
					this.SendPropertyChanging();
					this._apprev_name = value;
					this.SendPropertyChanged("apprev_name");
					this.Onapprev_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="currency_type_LcItem", Storage="_LcItems", ThisKey="currency_id", OtherKey="幣別")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<LcItem> LcItems
		{
			get
			{
				if ((this.serializing 
							&& (this._LcItems.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LcItems;
			}
			set
			{
				this._LcItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LcItems(LcItem entity)
		{
			this.SendPropertyChanging();
			entity.currency_type = this;
		}
		
		private void detach_LcItems(LcItem entity)
		{
			this.SendPropertyChanging();
			entity.currency_type = null;
		}
		
		private void Initialize()
		{
			this._LcItems = new EntitySet<LcItem>(new Action<LcItem>(this.attach_LcItems), new Action<LcItem>(this.detach_LcItems));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentaryAllowance")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentaryAllowance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private string _Approver;
		
		private System.DateTime _ApprovalDate;
		
		private string _Memo;
		
		private EntityRef<Documentary> _Documentary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnApproverChanging(string value);
    partial void OnApproverChanged();
    partial void OnApprovalDateChanging(System.DateTime value);
    partial void OnApprovalDateChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    #endregion
		
		public DocumentaryAllowance()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approver", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Approver
		{
			get
			{
				return this._Approver;
			}
			set
			{
				if ((this._Approver != value))
				{
					this.OnApproverChanging(value);
					this.SendPropertyChanging();
					this._Approver = value;
					this.SendPropertyChanged("Approver");
					this.OnApproverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime ApprovalDate
		{
			get
			{
				return this._ApprovalDate;
			}
			set
			{
				if ((this._ApprovalDate != value))
				{
					this.OnApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDate = value;
					this.SendPropertyChanged("ApprovalDate");
					this.OnApprovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_DocumentaryAllowance", Storage="_Documentary", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.DocumentaryAllowance.Remove(this);
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.DocumentaryAllowance.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Documentary = default(EntityRef<Documentary>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentaryDenial")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentaryDenial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private string _Denier;
		
		private string _Reason;
		
		private System.DateTime _DenialDate;
		
		private EntityRef<Documentary> _Documentary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnDenierChanging(string value);
    partial void OnDenierChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnDenialDateChanging(System.DateTime value);
    partial void OnDenialDateChanged();
    #endregion
		
		public DocumentaryDenial()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denier", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Denier
		{
			get
			{
				return this._Denier;
			}
			set
			{
				if ((this._Denier != value))
				{
					this.OnDenierChanging(value);
					this.SendPropertyChanging();
					this._Denier = value;
					this.SendPropertyChanged("Denier");
					this.OnDenierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DenialDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime DenialDate
		{
			get
			{
				return this._DenialDate;
			}
			set
			{
				if ((this._DenialDate != value))
				{
					this.OnDenialDateChanging(value);
					this.SendPropertyChanging();
					this._DenialDate = value;
					this.SendPropertyChanged("DenialDate");
					this.OnDenialDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_DocumentaryDenial", Storage="_Documentary", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.DocumentaryDenial.Remove(this);
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.DocumentaryDenial.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Documentary = default(EntityRef<Documentary>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentaryLevel")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentaryLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private System.Nullable<int> _DocLevel;
		
		private System.DateTime _LevelDate;
		
		private EntityRef<LevelExpression> _LevelExpression;
		
		private EntityRef<Documentary> _Documentary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnDocLevelChanging(System.Nullable<int> value);
    partial void OnDocLevelChanged();
    partial void OnLevelDateChanging(System.DateTime value);
    partial void OnLevelDateChanged();
    #endregion
		
		public DocumentaryLevel()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocLevel", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> DocLevel
		{
			get
			{
				return this._DocLevel;
			}
			set
			{
				if ((this._DocLevel != value))
				{
					if (this._LevelExpression.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocLevelChanging(value);
					this.SendPropertyChanging();
					this._DocLevel = value;
					this.SendPropertyChanged("DocLevel");
					this.OnDocLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime LevelDate
		{
			get
			{
				return this._LevelDate;
			}
			set
			{
				if ((this._LevelDate != value))
				{
					this.OnLevelDateChanging(value);
					this.SendPropertyChanging();
					this._LevelDate = value;
					this.SendPropertyChanged("LevelDate");
					this.OnLevelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_DocumentaryLevel", Storage="_LevelExpression", ThisKey="DocLevel", OtherKey="LevelID", IsForeignKey=true)]
		public LevelExpression LevelExpression
		{
			get
			{
				return this._LevelExpression.Entity;
			}
			set
			{
				LevelExpression previousValue = this._LevelExpression.Entity;
				if (((previousValue != value) 
							|| (this._LevelExpression.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LevelExpression.Entity = null;
						previousValue.DocumentaryLevels.Remove(this);
					}
					this._LevelExpression.Entity = value;
					if ((value != null))
					{
						value.DocumentaryLevels.Add(this);
						this._DocLevel = value.LevelID;
					}
					else
					{
						this._DocLevel = default(Nullable<int>);
					}
					this.SendPropertyChanged("LevelExpression");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_DocumentaryLevel", Storage="_Documentary", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.DocumentaryLevel.Remove(this);
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.DocumentaryLevel.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._LevelExpression = default(EntityRef<LevelExpression>);
			this._Documentary = default(EntityRef<Documentary>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private string _TypeName;
		
		private EntitySet<Documentary> _Documentary;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public DocumentType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_Documentary", Storage="_Documentary", ThisKey="TypeID", OtherKey="DocType")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<Documentary> Documentary
		{
			get
			{
				if ((this.serializing 
							&& (this._Documentary.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Documentary;
			}
			set
			{
				this._Documentary.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Documentary(Documentary entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_Documentary(Documentary entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
		
		private void Initialize()
		{
			this._Documentary = new EntitySet<Documentary>(new Action<Documentary>(this.attach_Documentary), new Action<Documentary>(this.detach_Documentary));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GoodsDetail")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GoodsDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private int _sno;
		
		private string _ProductName;
		
		private string _ProductSize;
		
		private string _UnitPrice;
		
		private string _Quantity;
		
		private string _Amount;
		
		private string _Remark;
		
		private EntityRef<LcItem> _LcItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnsnoChanging(int value);
    partial void OnsnoChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnProductSizeChanging(string value);
    partial void OnProductSizeChanged();
    partial void OnUnitPriceChanging(string value);
    partial void OnUnitPriceChanged();
    partial void OnQuantityChanging(string value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public GoodsDetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._LcItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sno", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int sno
		{
			get
			{
				return this._sno;
			}
			set
			{
				if ((this._sno != value))
				{
					this.OnsnoChanging(value);
					this.SendPropertyChanging();
					this._sno = value;
					this.SendPropertyChanged("sno");
					this.OnsnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSize", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ProductSize
		{
			get
			{
				return this._ProductSize;
			}
			set
			{
				if ((this._ProductSize != value))
				{
					this.OnProductSizeChanging(value);
					this.SendPropertyChanging();
					this._ProductSize = value;
					this.SendPropertyChanged("ProductSize");
					this.OnProductSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(40)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LcItem_GoodsDetail", Storage="_LcItem", ThisKey="ItemID", OtherKey="ItemID", IsForeignKey=true)]
		public LcItem LcItem
		{
			get
			{
				return this._LcItem.Entity;
			}
			set
			{
				LcItem previousValue = this._LcItem.Entity;
				if (((previousValue != value) 
							|| (this._LcItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LcItem.Entity = null;
						previousValue.GoodsDetails.Remove(this);
					}
					this._LcItem.Entity = value;
					if ((value != null))
					{
						value.GoodsDetails.Add(this);
						this._ItemID = value.ItemID;
					}
					else
					{
						this._ItemID = default(int);
					}
					this.SendPropertyChanged("LcItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._LcItem = default(EntityRef<LcItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LcItems")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LcItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private System.Nullable<decimal> _開狀金額;
		
		private System.Nullable<System.DateTime> _有效期限;
		
		private int _幣別;
		
		private string _Goods;
		
		private int _定日付款;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private string _PaymentTerms;
		
		private EntitySet<GoodsDetail> _GoodsDetails;
		
		private EntitySet<CreditApplicationDocumentary> _CreditApplicationDocumentary;
		
		private EntitySet<LetterOfCreditVersion> _LetterOfCreditVersion;
		
		private EntitySet<AmendingLcApplication> _AmendingLcApplication;
		
		private EntityRef<currency_type> _currency_type;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void On開狀金額Changing(System.Nullable<decimal> value);
    partial void On開狀金額Changed();
    partial void On有效期限Changing(System.Nullable<System.DateTime> value);
    partial void On有效期限Changed();
    partial void On幣別Changing(int value);
    partial void On幣別Changed();
    partial void OnGoodsChanging(string value);
    partial void OnGoodsChanged();
    partial void On定日付款Changing(int value);
    partial void On定日付款Changed();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    partial void OnPaymentTermsChanging(string value);
    partial void OnPaymentTermsChanged();
    #endregion
		
		public LcItem()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_開狀金額", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<decimal> 開狀金額
		{
			get
			{
				return this._開狀金額;
			}
			set
			{
				if ((this._開狀金額 != value))
				{
					this.On開狀金額Changing(value);
					this.SendPropertyChanging();
					this._開狀金額 = value;
					this.SendPropertyChanged("開狀金額");
					this.On開狀金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_有效期限", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> 有效期限
		{
			get
			{
				return this._有效期限;
			}
			set
			{
				if ((this._有效期限 != value))
				{
					this.On有效期限Changing(value);
					this.SendPropertyChanging();
					this._有效期限 = value;
					this.SendPropertyChanged("有效期限");
					this.On有效期限Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_幣別", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int 幣別
		{
			get
			{
				return this._幣別;
			}
			set
			{
				if ((this._幣別 != value))
				{
					if (this._currency_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.On幣別Changing(value);
					this.SendPropertyChanging();
					this._幣別 = value;
					this.SendPropertyChanged("幣別");
					this.On幣別Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goods", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Goods
		{
			get
			{
				return this._Goods;
			}
			set
			{
				if ((this._Goods != value))
				{
					this.OnGoodsChanging(value);
					this.SendPropertyChanging();
					this._Goods = value;
					this.SendPropertyChanged("Goods");
					this.OnGoodsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_定日付款", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int 定日付款
		{
			get
			{
				return this._定日付款;
			}
			set
			{
				if ((this._定日付款 != value))
				{
					this.On定日付款Changing(value);
					this.SendPropertyChanging();
					this._定日付款 = value;
					this.SendPropertyChanged("定日付款");
					this.On定日付款Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTerms", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string PaymentTerms
		{
			get
			{
				return this._PaymentTerms;
			}
			set
			{
				if ((this._PaymentTerms != value))
				{
					this.OnPaymentTermsChanging(value);
					this.SendPropertyChanging();
					this._PaymentTerms = value;
					this.SendPropertyChanged("PaymentTerms");
					this.OnPaymentTermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LcItem_GoodsDetail", Storage="_GoodsDetails", ThisKey="ItemID", OtherKey="ItemID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<GoodsDetail> GoodsDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._GoodsDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._GoodsDetails;
			}
			set
			{
				this._GoodsDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LcItem_CreditApplicationDocumentary", Storage="_CreditApplicationDocumentary", ThisKey="ItemID", OtherKey="ItemID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<CreditApplicationDocumentary> CreditApplicationDocumentary
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditApplicationDocumentary.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CreditApplicationDocumentary;
			}
			set
			{
				this._CreditApplicationDocumentary.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LcItem_LetterOfCreditVersion", Storage="_LetterOfCreditVersion", ThisKey="ItemID", OtherKey="ItemID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<LetterOfCreditVersion> LetterOfCreditVersion
		{
			get
			{
				if ((this.serializing 
							&& (this._LetterOfCreditVersion.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LetterOfCreditVersion;
			}
			set
			{
				this._LetterOfCreditVersion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LcItem_AmendingLcApplication", Storage="_AmendingLcApplication", ThisKey="ItemID", OtherKey="ItemID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<AmendingLcApplication> AmendingLcApplication
		{
			get
			{
				if ((this.serializing 
							&& (this._AmendingLcApplication.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AmendingLcApplication;
			}
			set
			{
				this._AmendingLcApplication.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="currency_type_LcItem", Storage="_currency_type", ThisKey="幣別", OtherKey="currency_id", IsForeignKey=true)]
		public currency_type currency_type
		{
			get
			{
				return this._currency_type.Entity;
			}
			set
			{
				currency_type previousValue = this._currency_type.Entity;
				if (((previousValue != value) 
							|| (this._currency_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._currency_type.Entity = null;
						previousValue.LcItems.Remove(this);
					}
					this._currency_type.Entity = value;
					if ((value != null))
					{
						value.LcItems.Add(this);
						this._幣別 = value.currency_id;
					}
					else
					{
						this._幣別 = default(int);
					}
					this.SendPropertyChanged("currency_type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GoodsDetails(GoodsDetail entity)
		{
			this.SendPropertyChanging();
			entity.LcItem = this;
		}
		
		private void detach_GoodsDetails(GoodsDetail entity)
		{
			this.SendPropertyChanging();
			entity.LcItem = null;
		}
		
		private void attach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.LcItem = this;
		}
		
		private void detach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.LcItem = null;
		}
		
		private void attach_LetterOfCreditVersion(LetterOfCreditVersion entity)
		{
			this.SendPropertyChanging();
			entity.LcItem = this;
		}
		
		private void detach_LetterOfCreditVersion(LetterOfCreditVersion entity)
		{
			this.SendPropertyChanging();
			entity.LcItem = null;
		}
		
		private void attach_AmendingLcApplication(AmendingLcApplication entity)
		{
			this.SendPropertyChanging();
			entity.LcItem = this;
		}
		
		private void detach_AmendingLcApplication(AmendingLcApplication entity)
		{
			this.SendPropertyChanging();
			entity.LcItem = null;
		}
		
		private void Initialize()
		{
			this._GoodsDetails = new EntitySet<GoodsDetail>(new Action<GoodsDetail>(this.attach_GoodsDetails), new Action<GoodsDetail>(this.detach_GoodsDetails));
			this._CreditApplicationDocumentary = new EntitySet<CreditApplicationDocumentary>(new Action<CreditApplicationDocumentary>(this.attach_CreditApplicationDocumentary), new Action<CreditApplicationDocumentary>(this.detach_CreditApplicationDocumentary));
			this._LetterOfCreditVersion = new EntitySet<LetterOfCreditVersion>(new Action<LetterOfCreditVersion>(this.attach_LetterOfCreditVersion), new Action<LetterOfCreditVersion>(this.detach_LetterOfCreditVersion));
			this._AmendingLcApplication = new EntitySet<AmendingLcApplication>(new Action<AmendingLcApplication>(this.attach_AmendingLcApplication), new Action<AmendingLcApplication>(this.detach_AmendingLcApplication));
			this._currency_type = default(EntityRef<currency_type>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LevelExpression")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LevelExpression : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LevelID;
		
		private string _Expression;
		
		private string _Description;
		
		private string _BusinessExpression;
		
		private EntityRef<BankDataScope> _BankDataScope;
		
		private EntityRef<BusinessDataScope> _BusinessDataScope;
		
		private EntitySet<DocumentaryLevel> _DocumentaryLevels;
		
		private EntitySet<Documentary> _Documentary;
		
		private EntitySet<CustomerOfBranch> _CustomerOfBranch;
		
		private EntitySet<CustomerOfBranchLevel> _CustomerOfBranchLevels;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLevelIDChanging(int value);
    partial void OnLevelIDChanged();
    partial void OnExpressionChanging(string value);
    partial void OnExpressionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnBusinessExpressionChanging(string value);
    partial void OnBusinessExpressionChanged();
    #endregion
		
		public LevelExpression()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expression", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Expression
		{
			get
			{
				return this._Expression;
			}
			set
			{
				if ((this._Expression != value))
				{
					this.OnExpressionChanging(value);
					this.SendPropertyChanging();
					this._Expression = value;
					this.SendPropertyChanged("Expression");
					this.OnExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessExpression", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string BusinessExpression
		{
			get
			{
				return this._BusinessExpression;
			}
			set
			{
				if ((this._BusinessExpression != value))
				{
					this.OnBusinessExpressionChanging(value);
					this.SendPropertyChanging();
					this._BusinessExpression = value;
					this.SendPropertyChanged("BusinessExpression");
					this.OnBusinessExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_BankDataScope", Storage="_BankDataScope", ThisKey="LevelID", OtherKey="LevelID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public BankDataScope BankDataScope
		{
			get
			{
				if ((this.serializing 
							&& (this._BankDataScope.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._BankDataScope.Entity;
			}
			set
			{
				BankDataScope previousValue = this._BankDataScope.Entity;
				if (((previousValue != value) 
							|| (this._BankDataScope.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankDataScope.Entity = null;
						previousValue.LevelExpression = null;
					}
					this._BankDataScope.Entity = value;
					if ((value != null))
					{
						value.LevelExpression = this;
					}
					this.SendPropertyChanged("BankDataScope");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_BusinessDataScope", Storage="_BusinessDataScope", ThisKey="LevelID", OtherKey="LevelID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public BusinessDataScope BusinessDataScope
		{
			get
			{
				if ((this.serializing 
							&& (this._BusinessDataScope.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._BusinessDataScope.Entity;
			}
			set
			{
				BusinessDataScope previousValue = this._BusinessDataScope.Entity;
				if (((previousValue != value) 
							|| (this._BusinessDataScope.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessDataScope.Entity = null;
						previousValue.LevelExpression = null;
					}
					this._BusinessDataScope.Entity = value;
					if ((value != null))
					{
						value.LevelExpression = this;
					}
					this.SendPropertyChanged("BusinessDataScope");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_DocumentaryLevel", Storage="_DocumentaryLevels", ThisKey="LevelID", OtherKey="DocLevel")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<DocumentaryLevel> DocumentaryLevels
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentaryLevels.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentaryLevels;
			}
			set
			{
				this._DocumentaryLevels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_Documentary", Storage="_Documentary", ThisKey="LevelID", OtherKey="CurrentLevel")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<Documentary> Documentary
		{
			get
			{
				if ((this.serializing 
							&& (this._Documentary.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Documentary;
			}
			set
			{
				this._Documentary.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_CustomerOfBranch", Storage="_CustomerOfBranch", ThisKey="LevelID", OtherKey="CurrentLevel")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<CustomerOfBranch> CustomerOfBranch
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerOfBranch.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomerOfBranch;
			}
			set
			{
				this._CustomerOfBranch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_CustomerOfBranchLevel", Storage="_CustomerOfBranchLevels", ThisKey="LevelID", OtherKey="LevelID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<CustomerOfBranchLevel> CustomerOfBranchLevels
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerOfBranchLevels.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomerOfBranchLevels;
			}
			set
			{
				this._CustomerOfBranchLevels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentaryLevels(DocumentaryLevel entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = this;
		}
		
		private void detach_DocumentaryLevels(DocumentaryLevel entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = null;
		}
		
		private void attach_Documentary(Documentary entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = this;
		}
		
		private void detach_Documentary(Documentary entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = null;
		}
		
		private void attach_CustomerOfBranch(CustomerOfBranch entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = this;
		}
		
		private void detach_CustomerOfBranch(CustomerOfBranch entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = null;
		}
		
		private void attach_CustomerOfBranchLevels(CustomerOfBranchLevel entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = this;
		}
		
		private void detach_CustomerOfBranchLevels(CustomerOfBranchLevel entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = null;
		}
		
		private void Initialize()
		{
			this._BankDataScope = default(EntityRef<BankDataScope>);
			this._BusinessDataScope = default(EntityRef<BusinessDataScope>);
			this._DocumentaryLevels = new EntitySet<DocumentaryLevel>(new Action<DocumentaryLevel>(this.attach_DocumentaryLevels), new Action<DocumentaryLevel>(this.detach_DocumentaryLevels));
			this._Documentary = new EntitySet<Documentary>(new Action<Documentary>(this.attach_Documentary), new Action<Documentary>(this.detach_Documentary));
			this._CustomerOfBranch = new EntitySet<CustomerOfBranch>(new Action<CustomerOfBranch>(this.attach_CustomerOfBranch), new Action<CustomerOfBranch>(this.detach_CustomerOfBranch));
			this._CustomerOfBranchLevels = new EntitySet<CustomerOfBranchLevel>(new Action<CustomerOfBranchLevel>(this.attach_CustomerOfBranchLevels), new Action<CustomerOfBranchLevel>(this.detach_CustomerOfBranchLevels));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MessageType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MessageType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private string _Subject;
		
		private string _MessageProcessor;
		
		private string _MailProcessor;
		
		private string _MessageControl;
		
		private string _MailControl;
		
		private EntitySet<BankInbox> _BankInbox;
		
		private EntitySet<CustomerInbox> _CustomerInbox;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnMessageProcessorChanging(string value);
    partial void OnMessageProcessorChanged();
    partial void OnMailProcessorChanging(string value);
    partial void OnMailProcessorChanged();
    partial void OnMessageControlChanging(string value);
    partial void OnMessageControlChanged();
    partial void OnMailControlChanging(string value);
    partial void OnMailControlChanged();
    #endregion
		
		public MessageType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageProcessor", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string MessageProcessor
		{
			get
			{
				return this._MessageProcessor;
			}
			set
			{
				if ((this._MessageProcessor != value))
				{
					this.OnMessageProcessorChanging(value);
					this.SendPropertyChanging();
					this._MessageProcessor = value;
					this.SendPropertyChanged("MessageProcessor");
					this.OnMessageProcessorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailProcessor", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string MailProcessor
		{
			get
			{
				return this._MailProcessor;
			}
			set
			{
				if ((this._MailProcessor != value))
				{
					this.OnMailProcessorChanging(value);
					this.SendPropertyChanging();
					this._MailProcessor = value;
					this.SendPropertyChanged("MailProcessor");
					this.OnMailProcessorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageControl", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string MessageControl
		{
			get
			{
				return this._MessageControl;
			}
			set
			{
				if ((this._MessageControl != value))
				{
					this.OnMessageControlChanging(value);
					this.SendPropertyChanging();
					this._MessageControl = value;
					this.SendPropertyChanged("MessageControl");
					this.OnMessageControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailControl", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string MailControl
		{
			get
			{
				return this._MailControl;
			}
			set
			{
				if ((this._MailControl != value))
				{
					this.OnMailControlChanging(value);
					this.SendPropertyChanging();
					this._MailControl = value;
					this.SendPropertyChanged("MailControl");
					this.OnMailControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageType_BankInbox", Storage="_BankInbox", ThisKey="TypeID", OtherKey="TypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<BankInbox> BankInbox
		{
			get
			{
				if ((this.serializing 
							&& (this._BankInbox.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BankInbox;
			}
			set
			{
				this._BankInbox.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageType_CustomerInbox", Storage="_CustomerInbox", ThisKey="TypeID", OtherKey="TypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<CustomerInbox> CustomerInbox
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerInbox.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomerInbox;
			}
			set
			{
				this._CustomerInbox.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BankInbox(BankInbox entity)
		{
			this.SendPropertyChanging();
			entity.MessageType = this;
		}
		
		private void detach_BankInbox(BankInbox entity)
		{
			this.SendPropertyChanging();
			entity.MessageType = null;
		}
		
		private void attach_CustomerInbox(CustomerInbox entity)
		{
			this.SendPropertyChanging();
			entity.MessageType = this;
		}
		
		private void detach_CustomerInbox(CustomerInbox entity)
		{
			this.SendPropertyChanging();
			entity.MessageType = null;
		}
		
		private void Initialize()
		{
			this._BankInbox = new EntitySet<BankInbox>(new Action<BankInbox>(this.attach_BankInbox), new Action<BankInbox>(this.detach_BankInbox));
			this._CustomerInbox = new EntitySet<CustomerInbox>(new Action<CustomerInbox>(this.attach_CustomerInbox), new Action<CustomerInbox>(this.detach_CustomerInbox));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NegoDraftRegistry")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NegoDraftRegistry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RegisterID;
		
		private string _沖銷原因;
		
		private System.Nullable<decimal> _沖銷信用狀金額;
		
		private System.Nullable<decimal> _匯率;
		
		private string _支號;
		
		private System.Nullable<decimal> _押匯手續費率;
		
		private System.Nullable<decimal> _押匯手續費金額;
		
		private System.Nullable<decimal> _沖銷存入保證金金額;
		
		private string _撥款方式;
		
		private string _撥款帳號科目;
		
		private string _原押匯行序號;
		
		private string _利率種類;
		
		private System.Nullable<decimal> _掛牌利率;
		
		private string _利率型態;
		
		private System.Nullable<decimal> _加減碼;
		
		private string _利率別;
		
		private System.Nullable<long> _GTXNO;
		
		private System.Nullable<decimal> _承兌手續費率;
		
		private System.Nullable<decimal> _承兌手續費金額;
		
		private string _現轉別;
		
		private System.Nullable<decimal> _票繳金額;
		
		private string _支票號碼;
		
		private string _會計科目;
		
		private string _會計子目;
		
		private string _用途別;
		
		private string _融資業務分類;
		
		private string _政府專案補助貸款分類;
		
		private System.Nullable<decimal> _使用存入保證金金額;
		
		private System.Nullable<bool> _十足擔保記號;
		
		private System.Nullable<decimal> _信保成數;
		
		private string _信保種類;
		
		private string _申請種類;
		
		private string _放款作業專員;
		
		private string _作業資訊組負責人;
		
		private System.Nullable<System.DateTime> _送保到期日;
		
		private EntitySet<NegoDraft> _NegoDraft;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegisterIDChanging(int value);
    partial void OnRegisterIDChanged();
    partial void On沖銷原因Changing(string value);
    partial void On沖銷原因Changed();
    partial void On沖銷信用狀金額Changing(System.Nullable<decimal> value);
    partial void On沖銷信用狀金額Changed();
    partial void On匯率Changing(System.Nullable<decimal> value);
    partial void On匯率Changed();
    partial void On支號Changing(string value);
    partial void On支號Changed();
    partial void On押匯手續費率Changing(System.Nullable<decimal> value);
    partial void On押匯手續費率Changed();
    partial void On押匯手續費金額Changing(System.Nullable<decimal> value);
    partial void On押匯手續費金額Changed();
    partial void On沖銷存入保證金金額Changing(System.Nullable<decimal> value);
    partial void On沖銷存入保證金金額Changed();
    partial void On撥款方式Changing(string value);
    partial void On撥款方式Changed();
    partial void On撥款帳號科目Changing(string value);
    partial void On撥款帳號科目Changed();
    partial void On原押匯行序號Changing(string value);
    partial void On原押匯行序號Changed();
    partial void On利率種類Changing(string value);
    partial void On利率種類Changed();
    partial void On掛牌利率Changing(System.Nullable<decimal> value);
    partial void On掛牌利率Changed();
    partial void On利率型態Changing(string value);
    partial void On利率型態Changed();
    partial void On加減碼Changing(System.Nullable<decimal> value);
    partial void On加減碼Changed();
    partial void On利率別Changing(string value);
    partial void On利率別Changed();
    partial void OnGTXNOChanging(System.Nullable<long> value);
    partial void OnGTXNOChanged();
    partial void On承兌手續費率Changing(System.Nullable<decimal> value);
    partial void On承兌手續費率Changed();
    partial void On承兌手續費金額Changing(System.Nullable<decimal> value);
    partial void On承兌手續費金額Changed();
    partial void On現轉別Changing(string value);
    partial void On現轉別Changed();
    partial void On票繳金額Changing(System.Nullable<decimal> value);
    partial void On票繳金額Changed();
    partial void On支票號碼Changing(string value);
    partial void On支票號碼Changed();
    partial void On會計科目Changing(string value);
    partial void On會計科目Changed();
    partial void On會計子目Changing(string value);
    partial void On會計子目Changed();
    partial void On用途別Changing(string value);
    partial void On用途別Changed();
    partial void On融資業務分類Changing(string value);
    partial void On融資業務分類Changed();
    partial void On政府專案補助貸款分類Changing(string value);
    partial void On政府專案補助貸款分類Changed();
    partial void On使用存入保證金金額Changing(System.Nullable<decimal> value);
    partial void On使用存入保證金金額Changed();
    partial void On十足擔保記號Changing(System.Nullable<bool> value);
    partial void On十足擔保記號Changed();
    partial void On信保成數Changing(System.Nullable<decimal> value);
    partial void On信保成數Changed();
    partial void On信保種類Changing(string value);
    partial void On信保種類Changed();
    partial void On申請種類Changing(string value);
    partial void On申請種類Changed();
    partial void On放款作業專員Changing(string value);
    partial void On放款作業專員Changed();
    partial void On作業資訊組負責人Changing(string value);
    partial void On作業資訊組負責人Changed();
    partial void On送保到期日Changing(System.Nullable<System.DateTime> value);
    partial void On送保到期日Changed();
    #endregion
		
		public NegoDraftRegistry()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RegisterID
		{
			get
			{
				return this._RegisterID;
			}
			set
			{
				if ((this._RegisterID != value))
				{
					this.OnRegisterIDChanging(value);
					this.SendPropertyChanging();
					this._RegisterID = value;
					this.SendPropertyChanged("RegisterID");
					this.OnRegisterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_沖銷原因", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string 沖銷原因
		{
			get
			{
				return this._沖銷原因;
			}
			set
			{
				if ((this._沖銷原因 != value))
				{
					this.On沖銷原因Changing(value);
					this.SendPropertyChanging();
					this._沖銷原因 = value;
					this.SendPropertyChanged("沖銷原因");
					this.On沖銷原因Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_沖銷信用狀金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<decimal> 沖銷信用狀金額
		{
			get
			{
				return this._沖銷信用狀金額;
			}
			set
			{
				if ((this._沖銷信用狀金額 != value))
				{
					this.On沖銷信用狀金額Changing(value);
					this.SendPropertyChanging();
					this._沖銷信用狀金額 = value;
					this.SendPropertyChanged("沖銷信用狀金額");
					this.On沖銷信用狀金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_匯率", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<decimal> 匯率
		{
			get
			{
				return this._匯率;
			}
			set
			{
				if ((this._匯率 != value))
				{
					this.On匯率Changing(value);
					this.SendPropertyChanging();
					this._匯率 = value;
					this.SendPropertyChanged("匯率");
					this.On匯率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_支號", DbType="NVarChar(8)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string 支號
		{
			get
			{
				return this._支號;
			}
			set
			{
				if ((this._支號 != value))
				{
					this.On支號Changing(value);
					this.SendPropertyChanging();
					this._支號 = value;
					this.SendPropertyChanged("支號");
					this.On支號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_押匯手續費率", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<decimal> 押匯手續費率
		{
			get
			{
				return this._押匯手續費率;
			}
			set
			{
				if ((this._押匯手續費率 != value))
				{
					this.On押匯手續費率Changing(value);
					this.SendPropertyChanging();
					this._押匯手續費率 = value;
					this.SendPropertyChanged("押匯手續費率");
					this.On押匯手續費率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_押匯手續費金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<decimal> 押匯手續費金額
		{
			get
			{
				return this._押匯手續費金額;
			}
			set
			{
				if ((this._押匯手續費金額 != value))
				{
					this.On押匯手續費金額Changing(value);
					this.SendPropertyChanging();
					this._押匯手續費金額 = value;
					this.SendPropertyChanged("押匯手續費金額");
					this.On押匯手續費金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_沖銷存入保證金金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<decimal> 沖銷存入保證金金額
		{
			get
			{
				return this._沖銷存入保證金金額;
			}
			set
			{
				if ((this._沖銷存入保證金金額 != value))
				{
					this.On沖銷存入保證金金額Changing(value);
					this.SendPropertyChanging();
					this._沖銷存入保證金金額 = value;
					this.SendPropertyChanged("沖銷存入保證金金額");
					this.On沖銷存入保證金金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_撥款方式", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string 撥款方式
		{
			get
			{
				return this._撥款方式;
			}
			set
			{
				if ((this._撥款方式 != value))
				{
					this.On撥款方式Changing(value);
					this.SendPropertyChanging();
					this._撥款方式 = value;
					this.SendPropertyChanged("撥款方式");
					this.On撥款方式Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_撥款帳號科目", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string 撥款帳號科目
		{
			get
			{
				return this._撥款帳號科目;
			}
			set
			{
				if ((this._撥款帳號科目 != value))
				{
					this.On撥款帳號科目Changing(value);
					this.SendPropertyChanging();
					this._撥款帳號科目 = value;
					this.SendPropertyChanged("撥款帳號科目");
					this.On撥款帳號科目Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_原押匯行序號", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string 原押匯行序號
		{
			get
			{
				return this._原押匯行序號;
			}
			set
			{
				if ((this._原押匯行序號 != value))
				{
					this.On原押匯行序號Changing(value);
					this.SendPropertyChanging();
					this._原押匯行序號 = value;
					this.SendPropertyChanged("原押匯行序號");
					this.On原押匯行序號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_利率種類", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string 利率種類
		{
			get
			{
				return this._利率種類;
			}
			set
			{
				if ((this._利率種類 != value))
				{
					this.On利率種類Changing(value);
					this.SendPropertyChanging();
					this._利率種類 = value;
					this.SendPropertyChanged("利率種類");
					this.On利率種類Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_掛牌利率", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<decimal> 掛牌利率
		{
			get
			{
				return this._掛牌利率;
			}
			set
			{
				if ((this._掛牌利率 != value))
				{
					this.On掛牌利率Changing(value);
					this.SendPropertyChanging();
					this._掛牌利率 = value;
					this.SendPropertyChanged("掛牌利率");
					this.On掛牌利率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_利率型態", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string 利率型態
		{
			get
			{
				return this._利率型態;
			}
			set
			{
				if ((this._利率型態 != value))
				{
					this.On利率型態Changing(value);
					this.SendPropertyChanging();
					this._利率型態 = value;
					this.SendPropertyChanged("利率型態");
					this.On利率型態Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_加減碼", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<decimal> 加減碼
		{
			get
			{
				return this._加減碼;
			}
			set
			{
				if ((this._加減碼 != value))
				{
					this.On加減碼Changing(value);
					this.SendPropertyChanging();
					this._加減碼 = value;
					this.SendPropertyChanged("加減碼");
					this.On加減碼Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_利率別", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string 利率別
		{
			get
			{
				return this._利率別;
			}
			set
			{
				if ((this._利率別 != value))
				{
					this.On利率別Changing(value);
					this.SendPropertyChanging();
					this._利率別 = value;
					this.SendPropertyChanged("利率別");
					this.On利率別Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GTXNO", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<long> GTXNO
		{
			get
			{
				return this._GTXNO;
			}
			set
			{
				if ((this._GTXNO != value))
				{
					this.OnGTXNOChanging(value);
					this.SendPropertyChanging();
					this._GTXNO = value;
					this.SendPropertyChanged("GTXNO");
					this.OnGTXNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_承兌手續費率", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<decimal> 承兌手續費率
		{
			get
			{
				return this._承兌手續費率;
			}
			set
			{
				if ((this._承兌手續費率 != value))
				{
					this.On承兌手續費率Changing(value);
					this.SendPropertyChanging();
					this._承兌手續費率 = value;
					this.SendPropertyChanged("承兌手續費率");
					this.On承兌手續費率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_承兌手續費金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<decimal> 承兌手續費金額
		{
			get
			{
				return this._承兌手續費金額;
			}
			set
			{
				if ((this._承兌手續費金額 != value))
				{
					this.On承兌手續費金額Changing(value);
					this.SendPropertyChanging();
					this._承兌手續費金額 = value;
					this.SendPropertyChanged("承兌手續費金額");
					this.On承兌手續費金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_現轉別", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string 現轉別
		{
			get
			{
				return this._現轉別;
			}
			set
			{
				if ((this._現轉別 != value))
				{
					this.On現轉別Changing(value);
					this.SendPropertyChanging();
					this._現轉別 = value;
					this.SendPropertyChanged("現轉別");
					this.On現轉別Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_票繳金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<decimal> 票繳金額
		{
			get
			{
				return this._票繳金額;
			}
			set
			{
				if ((this._票繳金額 != value))
				{
					this.On票繳金額Changing(value);
					this.SendPropertyChanging();
					this._票繳金額 = value;
					this.SendPropertyChanged("票繳金額");
					this.On票繳金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_支票號碼", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string 支票號碼
		{
			get
			{
				return this._支票號碼;
			}
			set
			{
				if ((this._支票號碼 != value))
				{
					this.On支票號碼Changing(value);
					this.SendPropertyChanging();
					this._支票號碼 = value;
					this.SendPropertyChanged("支票號碼");
					this.On支票號碼Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_會計科目", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string 會計科目
		{
			get
			{
				return this._會計科目;
			}
			set
			{
				if ((this._會計科目 != value))
				{
					this.On會計科目Changing(value);
					this.SendPropertyChanging();
					this._會計科目 = value;
					this.SendPropertyChanged("會計科目");
					this.On會計科目Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_會計子目", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string 會計子目
		{
			get
			{
				return this._會計子目;
			}
			set
			{
				if ((this._會計子目 != value))
				{
					this.On會計子目Changing(value);
					this.SendPropertyChanging();
					this._會計子目 = value;
					this.SendPropertyChanged("會計子目");
					this.On會計子目Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_用途別", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public string 用途別
		{
			get
			{
				return this._用途別;
			}
			set
			{
				if ((this._用途別 != value))
				{
					this.On用途別Changing(value);
					this.SendPropertyChanging();
					this._用途別 = value;
					this.SendPropertyChanged("用途別");
					this.On用途別Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_融資業務分類", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public string 融資業務分類
		{
			get
			{
				return this._融資業務分類;
			}
			set
			{
				if ((this._融資業務分類 != value))
				{
					this.On融資業務分類Changing(value);
					this.SendPropertyChanging();
					this._融資業務分類 = value;
					this.SendPropertyChanged("融資業務分類");
					this.On融資業務分類Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_政府專案補助貸款分類", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public string 政府專案補助貸款分類
		{
			get
			{
				return this._政府專案補助貸款分類;
			}
			set
			{
				if ((this._政府專案補助貸款分類 != value))
				{
					this.On政府專案補助貸款分類Changing(value);
					this.SendPropertyChanging();
					this._政府專案補助貸款分類 = value;
					this.SendPropertyChanged("政府專案補助貸款分類");
					this.On政府專案補助貸款分類Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_使用存入保證金金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<decimal> 使用存入保證金金額
		{
			get
			{
				return this._使用存入保證金金額;
			}
			set
			{
				if ((this._使用存入保證金金額 != value))
				{
					this.On使用存入保證金金額Changing(value);
					this.SendPropertyChanging();
					this._使用存入保證金金額 = value;
					this.SendPropertyChanged("使用存入保證金金額");
					this.On使用存入保證金金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_十足擔保記號", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public System.Nullable<bool> 十足擔保記號
		{
			get
			{
				return this._十足擔保記號;
			}
			set
			{
				if ((this._十足擔保記號 != value))
				{
					this.On十足擔保記號Changing(value);
					this.SendPropertyChanging();
					this._十足擔保記號 = value;
					this.SendPropertyChanged("十足擔保記號");
					this.On十足擔保記號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_信保成數", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public System.Nullable<decimal> 信保成數
		{
			get
			{
				return this._信保成數;
			}
			set
			{
				if ((this._信保成數 != value))
				{
					this.On信保成數Changing(value);
					this.SendPropertyChanging();
					this._信保成數 = value;
					this.SendPropertyChanged("信保成數");
					this.On信保成數Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_信保種類", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public string 信保種類
		{
			get
			{
				return this._信保種類;
			}
			set
			{
				if ((this._信保種類 != value))
				{
					this.On信保種類Changing(value);
					this.SendPropertyChanging();
					this._信保種類 = value;
					this.SendPropertyChanged("信保種類");
					this.On信保種類Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_申請種類", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public string 申請種類
		{
			get
			{
				return this._申請種類;
			}
			set
			{
				if ((this._申請種類 != value))
				{
					this.On申請種類Changing(value);
					this.SendPropertyChanging();
					this._申請種類 = value;
					this.SendPropertyChanged("申請種類");
					this.On申請種類Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_放款作業專員", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public string 放款作業專員
		{
			get
			{
				return this._放款作業專員;
			}
			set
			{
				if ((this._放款作業專員 != value))
				{
					this.On放款作業專員Changing(value);
					this.SendPropertyChanging();
					this._放款作業專員 = value;
					this.SendPropertyChanged("放款作業專員");
					this.On放款作業專員Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_作業資訊組負責人", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public string 作業資訊組負責人
		{
			get
			{
				return this._作業資訊組負責人;
			}
			set
			{
				if ((this._作業資訊組負責人 != value))
				{
					this.On作業資訊組負責人Changing(value);
					this.SendPropertyChanging();
					this._作業資訊組負責人 = value;
					this.SendPropertyChanged("作業資訊組負責人");
					this.On作業資訊組負責人Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_送保到期日", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35)]
		public System.Nullable<System.DateTime> 送保到期日
		{
			get
			{
				return this._送保到期日;
			}
			set
			{
				if ((this._送保到期日 != value))
				{
					this.On送保到期日Changing(value);
					this.SendPropertyChanging();
					this._送保到期日 = value;
					this.SendPropertyChanged("送保到期日");
					this.On送保到期日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoDraftRegistry_NegoDraft", Storage="_NegoDraft", ThisKey="RegisterID", OtherKey="RegisterID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36, EmitDefaultValue=false)]
		public EntitySet<NegoDraft> NegoDraft
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoDraft.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoDraft;
			}
			set
			{
				this._NegoDraft.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NegoDraft(NegoDraft entity)
		{
			this.SendPropertyChanging();
			entity.NegoDraftRegistry = this;
		}
		
		private void detach_NegoDraft(NegoDraft entity)
		{
			this.SendPropertyChanging();
			entity.NegoDraftRegistry = null;
		}
		
		private void Initialize()
		{
			this._NegoDraft = new EntitySet<NegoDraft>(new Action<NegoDraft>(this.attach_NegoDraft), new Action<NegoDraft>(this.detach_NegoDraft));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NegoHost")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NegoHost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HostID;
		
		private string _HostUrl;
		
		private System.Nullable<int> _Status;
		
		private EntitySet<NegoPrompt> _NegoPrompt;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnHostUrlChanging(string value);
    partial void OnHostUrlChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public NegoHost()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostUrl", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string HostUrl
		{
			get
			{
				return this._HostUrl;
			}
			set
			{
				if ((this._HostUrl != value))
				{
					this.OnHostUrlChanging(value);
					this.SendPropertyChanging();
					this._HostUrl = value;
					this.SendPropertyChanged("HostUrl");
					this.OnHostUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoHost_NegoPrompt", Storage="_NegoPrompt", ThisKey="HostID", OtherKey="HostID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<NegoPrompt> NegoPrompt
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoPrompt.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoPrompt;
			}
			set
			{
				this._NegoPrompt.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NegoPrompt(NegoPrompt entity)
		{
			this.SendPropertyChanging();
			entity.NegoHost = this;
		}
		
		private void detach_NegoPrompt(NegoPrompt entity)
		{
			this.SendPropertyChanging();
			entity.NegoHost = null;
		}
		
		private void Initialize()
		{
			this._NegoPrompt = new EntitySet<NegoPrompt>(new Action<NegoPrompt>(this.attach_NegoPrompt), new Action<NegoPrompt>(this.detach_NegoPrompt));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OpeningApplicationDocumentary")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OpeningApplicationDocumentary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OpeningID;
		
		private string _實績行;
		
		private System.Nullable<int> _CompanyID;
		
		private string _帳號;
		
		private System.Nullable<System.DateTime> _開狀日期;
		
		private System.Nullable<decimal> _開狀匯率;
		
		private System.Nullable<decimal> _記帳金額;
		
		private System.Nullable<bool> _零星天數計收;
		
		private System.Nullable<decimal> _手續費率;
		
		private System.Nullable<decimal> _承兌費率;
		
		private System.Nullable<decimal> _票繳金額;
		
		private string _貸放負責人編號;
		
		private System.Nullable<bool> _十足擔保記號;
		
		private string _掛帳行;
		
		private System.Nullable<bool> _企業戶;
		
		private string _支號;
		
		private string _會計子目;
		
		private string _信用狀種類;
		
		private string _記帳幣別;
		
		private System.Nullable<int> _匯票期限;
		
		private System.Nullable<decimal> _手續費金額;
		
		private string _支票號碼;
		
		private string _發票人帳號;
		
		private string _貸放主管編號;
		
		private string _銷帳編號;
		
		private string _付款人;
		
		private string _支票付款行;
		
		private long _交易流水號;
		
		private string _放款作業專員;
		
		private string _作業資訊組負責人;
		
		private string _交易憑證編號;
		
		private EntitySet<CreditApplicationDocumentary> _CreditApplicationDocumentary;
		
		private EntityRef<Organization> _Organization;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOpeningIDChanging(int value);
    partial void OnOpeningIDChanged();
    partial void On實績行Changing(string value);
    partial void On實績行Changed();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void On帳號Changing(string value);
    partial void On帳號Changed();
    partial void On開狀日期Changing(System.Nullable<System.DateTime> value);
    partial void On開狀日期Changed();
    partial void On開狀匯率Changing(System.Nullable<decimal> value);
    partial void On開狀匯率Changed();
    partial void On記帳金額Changing(System.Nullable<decimal> value);
    partial void On記帳金額Changed();
    partial void On零星天數計收Changing(System.Nullable<bool> value);
    partial void On零星天數計收Changed();
    partial void On手續費率Changing(System.Nullable<decimal> value);
    partial void On手續費率Changed();
    partial void On承兌費率Changing(System.Nullable<decimal> value);
    partial void On承兌費率Changed();
    partial void On票繳金額Changing(System.Nullable<decimal> value);
    partial void On票繳金額Changed();
    partial void On貸放負責人編號Changing(string value);
    partial void On貸放負責人編號Changed();
    partial void On十足擔保記號Changing(System.Nullable<bool> value);
    partial void On十足擔保記號Changed();
    partial void On掛帳行Changing(string value);
    partial void On掛帳行Changed();
    partial void On企業戶Changing(System.Nullable<bool> value);
    partial void On企業戶Changed();
    partial void On支號Changing(string value);
    partial void On支號Changed();
    partial void On會計子目Changing(string value);
    partial void On會計子目Changed();
    partial void On信用狀種類Changing(string value);
    partial void On信用狀種類Changed();
    partial void On記帳幣別Changing(string value);
    partial void On記帳幣別Changed();
    partial void On匯票期限Changing(System.Nullable<int> value);
    partial void On匯票期限Changed();
    partial void On手續費金額Changing(System.Nullable<decimal> value);
    partial void On手續費金額Changed();
    partial void On支票號碼Changing(string value);
    partial void On支票號碼Changed();
    partial void On發票人帳號Changing(string value);
    partial void On發票人帳號Changed();
    partial void On貸放主管編號Changing(string value);
    partial void On貸放主管編號Changed();
    partial void On銷帳編號Changing(string value);
    partial void On銷帳編號Changed();
    partial void On付款人Changing(string value);
    partial void On付款人Changed();
    partial void On支票付款行Changing(string value);
    partial void On支票付款行Changed();
    partial void On交易流水號Changing(long value);
    partial void On交易流水號Changed();
    partial void On放款作業專員Changing(string value);
    partial void On放款作業專員Changed();
    partial void On作業資訊組負責人Changing(string value);
    partial void On作業資訊組負責人Changed();
    partial void On交易憑證編號Changing(string value);
    partial void On交易憑證編號Changed();
    #endregion
		
		public OpeningApplicationDocumentary()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpeningID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int OpeningID
		{
			get
			{
				return this._OpeningID;
			}
			set
			{
				if ((this._OpeningID != value))
				{
					this.OnOpeningIDChanging(value);
					this.SendPropertyChanging();
					this._OpeningID = value;
					this.SendPropertyChanged("OpeningID");
					this.OnOpeningIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_實績行", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string 實績行
		{
			get
			{
				return this._實績行;
			}
			set
			{
				if ((this._實績行 != value))
				{
					this.On實績行Changing(value);
					this.SendPropertyChanging();
					this._實績行 = value;
					this.SendPropertyChanged("實績行");
					this.On實績行Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_帳號", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string 帳號
		{
			get
			{
				return this._帳號;
			}
			set
			{
				if ((this._帳號 != value))
				{
					this.On帳號Changing(value);
					this.SendPropertyChanging();
					this._帳號 = value;
					this.SendPropertyChanged("帳號");
					this.On帳號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_開狀日期", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> 開狀日期
		{
			get
			{
				return this._開狀日期;
			}
			set
			{
				if ((this._開狀日期 != value))
				{
					this.On開狀日期Changing(value);
					this.SendPropertyChanging();
					this._開狀日期 = value;
					this.SendPropertyChanged("開狀日期");
					this.On開狀日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_開狀匯率", DbType="Decimal(18,3)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<decimal> 開狀匯率
		{
			get
			{
				return this._開狀匯率;
			}
			set
			{
				if ((this._開狀匯率 != value))
				{
					this.On開狀匯率Changing(value);
					this.SendPropertyChanging();
					this._開狀匯率 = value;
					this.SendPropertyChanged("開狀匯率");
					this.On開狀匯率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_記帳金額", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<decimal> 記帳金額
		{
			get
			{
				return this._記帳金額;
			}
			set
			{
				if ((this._記帳金額 != value))
				{
					this.On記帳金額Changing(value);
					this.SendPropertyChanging();
					this._記帳金額 = value;
					this.SendPropertyChanged("記帳金額");
					this.On記帳金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_零星天數計收", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> 零星天數計收
		{
			get
			{
				return this._零星天數計收;
			}
			set
			{
				if ((this._零星天數計收 != value))
				{
					this.On零星天數計收Changing(value);
					this.SendPropertyChanging();
					this._零星天數計收 = value;
					this.SendPropertyChanged("零星天數計收");
					this.On零星天數計收Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_手續費率", DbType="Decimal(18,3)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<decimal> 手續費率
		{
			get
			{
				return this._手續費率;
			}
			set
			{
				if ((this._手續費率 != value))
				{
					this.On手續費率Changing(value);
					this.SendPropertyChanging();
					this._手續費率 = value;
					this.SendPropertyChanged("手續費率");
					this.On手續費率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_承兌費率", DbType="Decimal(18,3)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<decimal> 承兌費率
		{
			get
			{
				return this._承兌費率;
			}
			set
			{
				if ((this._承兌費率 != value))
				{
					this.On承兌費率Changing(value);
					this.SendPropertyChanging();
					this._承兌費率 = value;
					this.SendPropertyChanged("承兌費率");
					this.On承兌費率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_票繳金額", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<decimal> 票繳金額
		{
			get
			{
				return this._票繳金額;
			}
			set
			{
				if ((this._票繳金額 != value))
				{
					this.On票繳金額Changing(value);
					this.SendPropertyChanging();
					this._票繳金額 = value;
					this.SendPropertyChanged("票繳金額");
					this.On票繳金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貸放負責人編號", DbType="NVarChar(12)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string 貸放負責人編號
		{
			get
			{
				return this._貸放負責人編號;
			}
			set
			{
				if ((this._貸放負責人編號 != value))
				{
					this.On貸放負責人編號Changing(value);
					this.SendPropertyChanging();
					this._貸放負責人編號 = value;
					this.SendPropertyChanged("貸放負責人編號");
					this.On貸放負責人編號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_十足擔保記號", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<bool> 十足擔保記號
		{
			get
			{
				return this._十足擔保記號;
			}
			set
			{
				if ((this._十足擔保記號 != value))
				{
					this.On十足擔保記號Changing(value);
					this.SendPropertyChanging();
					this._十足擔保記號 = value;
					this.SendPropertyChanged("十足擔保記號");
					this.On十足擔保記號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_掛帳行", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string 掛帳行
		{
			get
			{
				return this._掛帳行;
			}
			set
			{
				if ((this._掛帳行 != value))
				{
					this.On掛帳行Changing(value);
					this.SendPropertyChanging();
					this._掛帳行 = value;
					this.SendPropertyChanged("掛帳行");
					this.On掛帳行Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_企業戶", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<bool> 企業戶
		{
			get
			{
				return this._企業戶;
			}
			set
			{
				if ((this._企業戶 != value))
				{
					this.On企業戶Changing(value);
					this.SendPropertyChanging();
					this._企業戶 = value;
					this.SendPropertyChanged("企業戶");
					this.On企業戶Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_支號", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string 支號
		{
			get
			{
				return this._支號;
			}
			set
			{
				if ((this._支號 != value))
				{
					this.On支號Changing(value);
					this.SendPropertyChanging();
					this._支號 = value;
					this.SendPropertyChanged("支號");
					this.On支號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_會計子目", DbType="NVarChar(8)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string 會計子目
		{
			get
			{
				return this._會計子目;
			}
			set
			{
				if ((this._會計子目 != value))
				{
					this.On會計子目Changing(value);
					this.SendPropertyChanging();
					this._會計子目 = value;
					this.SendPropertyChanged("會計子目");
					this.On會計子目Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_信用狀種類", DbType="NVarChar(12)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string 信用狀種類
		{
			get
			{
				return this._信用狀種類;
			}
			set
			{
				if ((this._信用狀種類 != value))
				{
					this.On信用狀種類Changing(value);
					this.SendPropertyChanging();
					this._信用狀種類 = value;
					this.SendPropertyChanged("信用狀種類");
					this.On信用狀種類Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_記帳幣別", DbType="NVarChar(8)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string 記帳幣別
		{
			get
			{
				return this._記帳幣別;
			}
			set
			{
				if ((this._記帳幣別 != value))
				{
					this.On記帳幣別Changing(value);
					this.SendPropertyChanging();
					this._記帳幣別 = value;
					this.SendPropertyChanged("記帳幣別");
					this.On記帳幣別Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_匯票期限", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> 匯票期限
		{
			get
			{
				return this._匯票期限;
			}
			set
			{
				if ((this._匯票期限 != value))
				{
					this.On匯票期限Changing(value);
					this.SendPropertyChanging();
					this._匯票期限 = value;
					this.SendPropertyChanged("匯票期限");
					this.On匯票期限Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_手續費金額", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<decimal> 手續費金額
		{
			get
			{
				return this._手續費金額;
			}
			set
			{
				if ((this._手續費金額 != value))
				{
					this.On手續費金額Changing(value);
					this.SendPropertyChanging();
					this._手續費金額 = value;
					this.SendPropertyChanged("手續費金額");
					this.On手續費金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_支票號碼", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string 支票號碼
		{
			get
			{
				return this._支票號碼;
			}
			set
			{
				if ((this._支票號碼 != value))
				{
					this.On支票號碼Changing(value);
					this.SendPropertyChanging();
					this._支票號碼 = value;
					this.SendPropertyChanged("支票號碼");
					this.On支票號碼Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_發票人帳號", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string 發票人帳號
		{
			get
			{
				return this._發票人帳號;
			}
			set
			{
				if ((this._發票人帳號 != value))
				{
					this.On發票人帳號Changing(value);
					this.SendPropertyChanging();
					this._發票人帳號 = value;
					this.SendPropertyChanged("發票人帳號");
					this.On發票人帳號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貸放主管編號", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string 貸放主管編號
		{
			get
			{
				return this._貸放主管編號;
			}
			set
			{
				if ((this._貸放主管編號 != value))
				{
					this.On貸放主管編號Changing(value);
					this.SendPropertyChanging();
					this._貸放主管編號 = value;
					this.SendPropertyChanged("貸放主管編號");
					this.On貸放主管編號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_銷帳編號", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public string 銷帳編號
		{
			get
			{
				return this._銷帳編號;
			}
			set
			{
				if ((this._銷帳編號 != value))
				{
					this.On銷帳編號Changing(value);
					this.SendPropertyChanging();
					this._銷帳編號 = value;
					this.SendPropertyChanged("銷帳編號");
					this.On銷帳編號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_付款人", DbType="NVarChar(12)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public string 付款人
		{
			get
			{
				return this._付款人;
			}
			set
			{
				if ((this._付款人 != value))
				{
					this.On付款人Changing(value);
					this.SendPropertyChanging();
					this._付款人 = value;
					this.SendPropertyChanged("付款人");
					this.On付款人Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_支票付款行", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public string 支票付款行
		{
			get
			{
				return this._支票付款行;
			}
			set
			{
				if ((this._支票付款行 != value))
				{
					this.On支票付款行Changing(value);
					this.SendPropertyChanging();
					this._支票付款行 = value;
					this.SendPropertyChanged("支票付款行");
					this.On支票付款行Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_交易流水號", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public long 交易流水號
		{
			get
			{
				return this._交易流水號;
			}
			set
			{
				if ((this._交易流水號 != value))
				{
					this.On交易流水號Changing(value);
					this.SendPropertyChanging();
					this._交易流水號 = value;
					this.SendPropertyChanged("交易流水號");
					this.On交易流水號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_放款作業專員", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public string 放款作業專員
		{
			get
			{
				return this._放款作業專員;
			}
			set
			{
				if ((this._放款作業專員 != value))
				{
					this.On放款作業專員Changing(value);
					this.SendPropertyChanging();
					this._放款作業專員 = value;
					this.SendPropertyChanged("放款作業專員");
					this.On放款作業專員Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_作業資訊組負責人", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public string 作業資訊組負責人
		{
			get
			{
				return this._作業資訊組負責人;
			}
			set
			{
				if ((this._作業資訊組負責人 != value))
				{
					this.On作業資訊組負責人Changing(value);
					this.SendPropertyChanging();
					this._作業資訊組負責人 = value;
					this.SendPropertyChanged("作業資訊組負責人");
					this.On作業資訊組負責人Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_交易憑證編號", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public string 交易憑證編號
		{
			get
			{
				return this._交易憑證編號;
			}
			set
			{
				if ((this._交易憑證編號 != value))
				{
					this.On交易憑證編號Changing(value);
					this.SendPropertyChanging();
					this._交易憑證編號 = value;
					this.SendPropertyChanged("交易憑證編號");
					this.On交易憑證編號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OpeningApplicationDocumentary_CreditApplicationDocumentary", Storage="_CreditApplicationDocumentary", ThisKey="OpeningID", OtherKey="OpeningID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public EntitySet<CreditApplicationDocumentary> CreditApplicationDocumentary
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditApplicationDocumentary.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CreditApplicationDocumentary;
			}
			set
			{
				this._CreditApplicationDocumentary.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OpeningApplicationDocumentary", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.OpeningApplicationDocumentary.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.OpeningApplicationDocumentary.Add(this);
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.OpeningApplicationDocumentary = this;
		}
		
		private void detach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.OpeningApplicationDocumentary = null;
		}
		
		private void Initialize()
		{
			this._CreditApplicationDocumentary = new EntitySet<CreditApplicationDocumentary>(new Action<CreditApplicationDocumentary>(this.attach_CreditApplicationDocumentary), new Action<CreditApplicationDocumentary>(this.detach_CreditApplicationDocumentary));
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Documentary")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Documentary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private System.Nullable<int> _DocType;
		
		private System.Nullable<System.DateTime> _DocDate;
		
		private System.Nullable<int> _CurrentLevel;
		
		private string _SysDocID;
		
		private string _AttachedFile;
		
		private System.Nullable<System.DateTime> _DesiredDate;
		
		private EntityRef<CreditCancellation> _CreditCancellation;
		
		private EntitySet<DocumentaryAllowance> _DocumentaryAllowance;
		
		private EntitySet<DocumentaryDenial> _DocumentaryDenial;
		
		private EntitySet<DocumentaryLevel> _DocumentaryLevel;
		
		private EntitySet<BankInbox> _BankInbox;
		
		private EntitySet<CustomerInbox> _CustomerInbox;
		
		private EntityRef<DocumentDispatch> _DocumentDispatch;
		
		private EntitySet<DocumentProcessLog> _DocumentProcessLog;
		
		private EntityRef<LcPrintNotice> _LcPrintNotice;
		
		private EntityRef<BankingAudit> _BankingAudit;
		
		private EntityRef<Reimbursement> _Reimbursement;
		
		private EntityRef<NegoDraftAcceptance> _NegoDraftAcceptance;
		
		private EntitySet<CustomerCreditAlert> _CustomerCreditAlert;
		
		private EntityRef<DocumentOwner> _DocumentOwner;
		
		private EntityRef<NegoLoanRepayment> _NegoLoanRepayment;
		
		private EntityRef<AMLCheckQueue> _AMLCheckQueue;
		
		private EntityRef<CreditApplicationDocumentary> _CreditApplicationDocumentary;
		
		private EntityRef<NegoDraft> _NegoDraft;
		
		private EntityRef<AmendingLcApplication> _AmendingLcApplication;
		
		private EntityRef<DocumentType> _DocumentType;
		
		private EntityRef<LevelExpression> _LevelExpression;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnDocTypeChanging(System.Nullable<int> value);
    partial void OnDocTypeChanged();
    partial void OnDocDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDocDateChanged();
    partial void OnCurrentLevelChanging(System.Nullable<int> value);
    partial void OnCurrentLevelChanged();
    partial void OnSysDocIDChanging(string value);
    partial void OnSysDocIDChanged();
    partial void OnAttachedFileChanging(string value);
    partial void OnAttachedFileChanged();
    partial void OnDesiredDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDesiredDateChanged();
    #endregion
		
		public Documentary()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocType", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> DocType
		{
			get
			{
				return this._DocType;
			}
			set
			{
				if ((this._DocType != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocTypeChanging(value);
					this.SendPropertyChanging();
					this._DocType = value;
					this.SendPropertyChanged("DocType");
					this.OnDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> DocDate
		{
			get
			{
				return this._DocDate;
			}
			set
			{
				if ((this._DocDate != value))
				{
					this.OnDocDateChanging(value);
					this.SendPropertyChanging();
					this._DocDate = value;
					this.SendPropertyChanged("DocDate");
					this.OnDocDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentLevel", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> CurrentLevel
		{
			get
			{
				return this._CurrentLevel;
			}
			set
			{
				if ((this._CurrentLevel != value))
				{
					if (this._LevelExpression.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentLevelChanging(value);
					this.SendPropertyChanging();
					this._CurrentLevel = value;
					this.SendPropertyChanged("CurrentLevel");
					this.OnCurrentLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysDocID", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string SysDocID
		{
			get
			{
				return this._SysDocID;
			}
			set
			{
				if ((this._SysDocID != value))
				{
					this.OnSysDocIDChanging(value);
					this.SendPropertyChanging();
					this._SysDocID = value;
					this.SendPropertyChanged("SysDocID");
					this.OnSysDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachedFile", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string AttachedFile
		{
			get
			{
				return this._AttachedFile;
			}
			set
			{
				if ((this._AttachedFile != value))
				{
					this.OnAttachedFileChanging(value);
					this.SendPropertyChanging();
					this._AttachedFile = value;
					this.SendPropertyChanged("AttachedFile");
					this.OnAttachedFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesiredDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> DesiredDate
		{
			get
			{
				return this._DesiredDate;
			}
			set
			{
				if ((this._DesiredDate != value))
				{
					this.OnDesiredDateChanging(value);
					this.SendPropertyChanging();
					this._DesiredDate = value;
					this.SendPropertyChanged("DesiredDate");
					this.OnDesiredDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_CreditCancellation", Storage="_CreditCancellation", ThisKey="DocID", OtherKey="CancellationID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public CreditCancellation CreditCancellation
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditCancellation.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._CreditCancellation.Entity;
			}
			set
			{
				CreditCancellation previousValue = this._CreditCancellation.Entity;
				if (((previousValue != value) 
							|| (this._CreditCancellation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CreditCancellation.Entity = null;
						previousValue.Documentary = null;
					}
					this._CreditCancellation.Entity = value;
					if ((value != null))
					{
						value.Documentary = this;
					}
					this.SendPropertyChanged("CreditCancellation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_DocumentaryAllowance", Storage="_DocumentaryAllowance", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<DocumentaryAllowance> DocumentaryAllowance
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentaryAllowance.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentaryAllowance;
			}
			set
			{
				this._DocumentaryAllowance.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_DocumentaryDenial", Storage="_DocumentaryDenial", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<DocumentaryDenial> DocumentaryDenial
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentaryDenial.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentaryDenial;
			}
			set
			{
				this._DocumentaryDenial.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_DocumentaryLevel", Storage="_DocumentaryLevel", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<DocumentaryLevel> DocumentaryLevel
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentaryLevel.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentaryLevel;
			}
			set
			{
				this._DocumentaryLevel.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_BankInbox", Storage="_BankInbox", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<BankInbox> BankInbox
		{
			get
			{
				if ((this.serializing 
							&& (this._BankInbox.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BankInbox;
			}
			set
			{
				this._BankInbox.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_CustomerInbox", Storage="_CustomerInbox", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<CustomerInbox> CustomerInbox
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerInbox.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomerInbox;
			}
			set
			{
				this._CustomerInbox.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_DocumentDispatch", Storage="_DocumentDispatch", ThisKey="DocID", OtherKey="DocID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public DocumentDispatch DocumentDispatch
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentDispatch.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._DocumentDispatch.Entity;
			}
			set
			{
				DocumentDispatch previousValue = this._DocumentDispatch.Entity;
				if (((previousValue != value) 
							|| (this._DocumentDispatch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentDispatch.Entity = null;
						previousValue.Documentary = null;
					}
					this._DocumentDispatch.Entity = value;
					if ((value != null))
					{
						value.Documentary = this;
					}
					this.SendPropertyChanged("DocumentDispatch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_DocumentProcessLog", Storage="_DocumentProcessLog", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<DocumentProcessLog> DocumentProcessLog
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentProcessLog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentProcessLog;
			}
			set
			{
				this._DocumentProcessLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_LcPrintNotice", Storage="_LcPrintNotice", ThisKey="DocID", OtherKey="NoticeID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public LcPrintNotice LcPrintNotice
		{
			get
			{
				if ((this.serializing 
							&& (this._LcPrintNotice.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._LcPrintNotice.Entity;
			}
			set
			{
				LcPrintNotice previousValue = this._LcPrintNotice.Entity;
				if (((previousValue != value) 
							|| (this._LcPrintNotice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LcPrintNotice.Entity = null;
						previousValue.Documentary = null;
					}
					this._LcPrintNotice.Entity = value;
					if ((value != null))
					{
						value.Documentary = this;
					}
					this.SendPropertyChanged("LcPrintNotice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_BankingAudit", Storage="_BankingAudit", ThisKey="DocID", OtherKey="DocID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public BankingAudit BankingAudit
		{
			get
			{
				if ((this.serializing 
							&& (this._BankingAudit.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._BankingAudit.Entity;
			}
			set
			{
				BankingAudit previousValue = this._BankingAudit.Entity;
				if (((previousValue != value) 
							|| (this._BankingAudit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankingAudit.Entity = null;
						previousValue.Documentary = null;
					}
					this._BankingAudit.Entity = value;
					if ((value != null))
					{
						value.Documentary = this;
					}
					this.SendPropertyChanged("BankingAudit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_Reimbursement", Storage="_Reimbursement", ThisKey="DocID", OtherKey="ReimID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public Reimbursement Reimbursement
		{
			get
			{
				if ((this.serializing 
							&& (this._Reimbursement.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Reimbursement.Entity;
			}
			set
			{
				Reimbursement previousValue = this._Reimbursement.Entity;
				if (((previousValue != value) 
							|| (this._Reimbursement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reimbursement.Entity = null;
						previousValue.Documentary = null;
					}
					this._Reimbursement.Entity = value;
					if ((value != null))
					{
						value.Documentary = this;
					}
					this.SendPropertyChanged("Reimbursement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_NegoDraftAcceptance", Storage="_NegoDraftAcceptance", ThisKey="DocID", OtherKey="AcceptanceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public NegoDraftAcceptance NegoDraftAcceptance
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoDraftAcceptance.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._NegoDraftAcceptance.Entity;
			}
			set
			{
				NegoDraftAcceptance previousValue = this._NegoDraftAcceptance.Entity;
				if (((previousValue != value) 
							|| (this._NegoDraftAcceptance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoDraftAcceptance.Entity = null;
						previousValue.Documentary = null;
					}
					this._NegoDraftAcceptance.Entity = value;
					if ((value != null))
					{
						value.Documentary = this;
					}
					this.SendPropertyChanged("NegoDraftAcceptance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_CustomerCreditAlert", Storage="_CustomerCreditAlert", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<CustomerCreditAlert> CustomerCreditAlert
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerCreditAlert.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomerCreditAlert;
			}
			set
			{
				this._CustomerCreditAlert.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_DocumentOwner", Storage="_DocumentOwner", ThisKey="DocID", OtherKey="DocID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public DocumentOwner DocumentOwner
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentOwner.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._DocumentOwner.Entity;
			}
			set
			{
				DocumentOwner previousValue = this._DocumentOwner.Entity;
				if (((previousValue != value) 
							|| (this._DocumentOwner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentOwner.Entity = null;
						previousValue.Documentary = null;
					}
					this._DocumentOwner.Entity = value;
					if ((value != null))
					{
						value.Documentary = this;
					}
					this.SendPropertyChanged("DocumentOwner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_NegoLoanRepayment", Storage="_NegoLoanRepayment", ThisKey="DocID", OtherKey="RepaymentID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public NegoLoanRepayment NegoLoanRepayment
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoLoanRepayment.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._NegoLoanRepayment.Entity;
			}
			set
			{
				NegoLoanRepayment previousValue = this._NegoLoanRepayment.Entity;
				if (((previousValue != value) 
							|| (this._NegoLoanRepayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoLoanRepayment.Entity = null;
						previousValue.Documentary = null;
					}
					this._NegoLoanRepayment.Entity = value;
					if ((value != null))
					{
						value.Documentary = this;
					}
					this.SendPropertyChanged("NegoLoanRepayment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_AMLCheckQueue", Storage="_AMLCheckQueue", ThisKey="DocID", OtherKey="DocID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public AMLCheckQueue AMLCheckQueue
		{
			get
			{
				if ((this.serializing 
							&& (this._AMLCheckQueue.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._AMLCheckQueue.Entity;
			}
			set
			{
				AMLCheckQueue previousValue = this._AMLCheckQueue.Entity;
				if (((previousValue != value) 
							|| (this._AMLCheckQueue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AMLCheckQueue.Entity = null;
						previousValue.Documentary = null;
					}
					this._AMLCheckQueue.Entity = value;
					if ((value != null))
					{
						value.Documentary = this;
					}
					this.SendPropertyChanged("AMLCheckQueue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_CreditApplicationDocumentary", Storage="_CreditApplicationDocumentary", ThisKey="DocID", OtherKey="AppID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public CreditApplicationDocumentary CreditApplicationDocumentary
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditApplicationDocumentary.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._CreditApplicationDocumentary.Entity;
			}
			set
			{
				CreditApplicationDocumentary previousValue = this._CreditApplicationDocumentary.Entity;
				if (((previousValue != value) 
							|| (this._CreditApplicationDocumentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CreditApplicationDocumentary.Entity = null;
						previousValue.Documentary = null;
					}
					this._CreditApplicationDocumentary.Entity = value;
					if ((value != null))
					{
						value.Documentary = this;
					}
					this.SendPropertyChanged("CreditApplicationDocumentary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_NegoDraft", Storage="_NegoDraft", ThisKey="DocID", OtherKey="DraftID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public NegoDraft NegoDraft
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoDraft.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._NegoDraft.Entity;
			}
			set
			{
				NegoDraft previousValue = this._NegoDraft.Entity;
				if (((previousValue != value) 
							|| (this._NegoDraft.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoDraft.Entity = null;
						previousValue.Documentary = null;
					}
					this._NegoDraft.Entity = value;
					if ((value != null))
					{
						value.Documentary = this;
					}
					this.SendPropertyChanged("NegoDraft");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_AmendingLcApplication", Storage="_AmendingLcApplication", ThisKey="DocID", OtherKey="AmendingID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public AmendingLcApplication AmendingLcApplication
		{
			get
			{
				if ((this.serializing 
							&& (this._AmendingLcApplication.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._AmendingLcApplication.Entity;
			}
			set
			{
				AmendingLcApplication previousValue = this._AmendingLcApplication.Entity;
				if (((previousValue != value) 
							|| (this._AmendingLcApplication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AmendingLcApplication.Entity = null;
						previousValue.Documentary = null;
					}
					this._AmendingLcApplication.Entity = value;
					if ((value != null))
					{
						value.Documentary = this;
					}
					this.SendPropertyChanged("AmendingLcApplication");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_Documentary", Storage="_DocumentType", ThisKey="DocType", OtherKey="TypeID", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.Documentary.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.Documentary.Add(this);
						this._DocType = value.TypeID;
					}
					else
					{
						this._DocType = default(Nullable<int>);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_Documentary", Storage="_LevelExpression", ThisKey="CurrentLevel", OtherKey="LevelID", IsForeignKey=true)]
		public LevelExpression LevelExpression
		{
			get
			{
				return this._LevelExpression.Entity;
			}
			set
			{
				LevelExpression previousValue = this._LevelExpression.Entity;
				if (((previousValue != value) 
							|| (this._LevelExpression.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LevelExpression.Entity = null;
						previousValue.Documentary.Remove(this);
					}
					this._LevelExpression.Entity = value;
					if ((value != null))
					{
						value.Documentary.Add(this);
						this._CurrentLevel = value.LevelID;
					}
					else
					{
						this._CurrentLevel = default(Nullable<int>);
					}
					this.SendPropertyChanged("LevelExpression");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentaryAllowance(DocumentaryAllowance entity)
		{
			this.SendPropertyChanging();
			entity.Documentary = this;
		}
		
		private void detach_DocumentaryAllowance(DocumentaryAllowance entity)
		{
			this.SendPropertyChanging();
			entity.Documentary = null;
		}
		
		private void attach_DocumentaryDenial(DocumentaryDenial entity)
		{
			this.SendPropertyChanging();
			entity.Documentary = this;
		}
		
		private void detach_DocumentaryDenial(DocumentaryDenial entity)
		{
			this.SendPropertyChanging();
			entity.Documentary = null;
		}
		
		private void attach_DocumentaryLevel(DocumentaryLevel entity)
		{
			this.SendPropertyChanging();
			entity.Documentary = this;
		}
		
		private void detach_DocumentaryLevel(DocumentaryLevel entity)
		{
			this.SendPropertyChanging();
			entity.Documentary = null;
		}
		
		private void attach_BankInbox(BankInbox entity)
		{
			this.SendPropertyChanging();
			entity.Documentary = this;
		}
		
		private void detach_BankInbox(BankInbox entity)
		{
			this.SendPropertyChanging();
			entity.Documentary = null;
		}
		
		private void attach_CustomerInbox(CustomerInbox entity)
		{
			this.SendPropertyChanging();
			entity.Documentary = this;
		}
		
		private void detach_CustomerInbox(CustomerInbox entity)
		{
			this.SendPropertyChanging();
			entity.Documentary = null;
		}
		
		private void attach_DocumentProcessLog(DocumentProcessLog entity)
		{
			this.SendPropertyChanging();
			entity.Documentary = this;
		}
		
		private void detach_DocumentProcessLog(DocumentProcessLog entity)
		{
			this.SendPropertyChanging();
			entity.Documentary = null;
		}
		
		private void attach_CustomerCreditAlert(CustomerCreditAlert entity)
		{
			this.SendPropertyChanging();
			entity.Documentary = this;
		}
		
		private void detach_CustomerCreditAlert(CustomerCreditAlert entity)
		{
			this.SendPropertyChanging();
			entity.Documentary = null;
		}
		
		private void Initialize()
		{
			this._CreditCancellation = default(EntityRef<CreditCancellation>);
			this._DocumentaryAllowance = new EntitySet<DocumentaryAllowance>(new Action<DocumentaryAllowance>(this.attach_DocumentaryAllowance), new Action<DocumentaryAllowance>(this.detach_DocumentaryAllowance));
			this._DocumentaryDenial = new EntitySet<DocumentaryDenial>(new Action<DocumentaryDenial>(this.attach_DocumentaryDenial), new Action<DocumentaryDenial>(this.detach_DocumentaryDenial));
			this._DocumentaryLevel = new EntitySet<DocumentaryLevel>(new Action<DocumentaryLevel>(this.attach_DocumentaryLevel), new Action<DocumentaryLevel>(this.detach_DocumentaryLevel));
			this._BankInbox = new EntitySet<BankInbox>(new Action<BankInbox>(this.attach_BankInbox), new Action<BankInbox>(this.detach_BankInbox));
			this._CustomerInbox = new EntitySet<CustomerInbox>(new Action<CustomerInbox>(this.attach_CustomerInbox), new Action<CustomerInbox>(this.detach_CustomerInbox));
			this._DocumentDispatch = default(EntityRef<DocumentDispatch>);
			this._DocumentProcessLog = new EntitySet<DocumentProcessLog>(new Action<DocumentProcessLog>(this.attach_DocumentProcessLog), new Action<DocumentProcessLog>(this.detach_DocumentProcessLog));
			this._LcPrintNotice = default(EntityRef<LcPrintNotice>);
			this._BankingAudit = default(EntityRef<BankingAudit>);
			this._Reimbursement = default(EntityRef<Reimbursement>);
			this._NegoDraftAcceptance = default(EntityRef<NegoDraftAcceptance>);
			this._CustomerCreditAlert = new EntitySet<CustomerCreditAlert>(new Action<CustomerCreditAlert>(this.attach_CustomerCreditAlert), new Action<CustomerCreditAlert>(this.detach_CustomerCreditAlert));
			this._DocumentOwner = default(EntityRef<DocumentOwner>);
			this._NegoLoanRepayment = default(EntityRef<NegoLoanRepayment>);
			this._AMLCheckQueue = default(EntityRef<AMLCheckQueue>);
			this._CreditApplicationDocumentary = default(EntityRef<CreditApplicationDocumentary>);
			this._NegoDraft = default(EntityRef<NegoDraft>);
			this._AmendingLcApplication = default(EntityRef<AmendingLcApplication>);
			this._DocumentType = default(EntityRef<DocumentType>);
			this._LevelExpression = default(EntityRef<LevelExpression>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CreditCancellationInfo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CreditCancellationInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CancellationID;
		
		private System.Nullable<System.DateTime> _CancellationDate;
		
		private EntityRef<CreditCancellation> _CreditCancellation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCancellationIDChanging(int value);
    partial void OnCancellationIDChanged();
    partial void OnCancellationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCancellationDateChanged();
    #endregion
		
		public CreditCancellationInfo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancellationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CancellationID
		{
			get
			{
				return this._CancellationID;
			}
			set
			{
				if ((this._CancellationID != value))
				{
					if (this._CreditCancellation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCancellationIDChanging(value);
					this.SendPropertyChanging();
					this._CancellationID = value;
					this.SendPropertyChanged("CancellationID");
					this.OnCancellationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancellationDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> CancellationDate
		{
			get
			{
				return this._CancellationDate;
			}
			set
			{
				if ((this._CancellationDate != value))
				{
					this.OnCancellationDateChanging(value);
					this.SendPropertyChanging();
					this._CancellationDate = value;
					this.SendPropertyChanged("CancellationDate");
					this.OnCancellationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditCancellation_CreditCancellationInfo", Storage="_CreditCancellation", ThisKey="CancellationID", OtherKey="CancellationID", IsForeignKey=true)]
		public CreditCancellation CreditCancellation
		{
			get
			{
				return this._CreditCancellation.Entity;
			}
			set
			{
				CreditCancellation previousValue = this._CreditCancellation.Entity;
				if (((previousValue != value) 
							|| (this._CreditCancellation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CreditCancellation.Entity = null;
						previousValue.CreditCancellationInfo = null;
					}
					this._CreditCancellation.Entity = value;
					if ((value != null))
					{
						value.CreditCancellationInfo = this;
						this._CancellationID = value.CancellationID;
					}
					else
					{
						this._CancellationID = default(int);
					}
					this.SendPropertyChanged("CreditCancellation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CreditCancellation = default(EntityRef<CreditCancellation>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerOfBranch")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomerOfBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BankCode;
		
		private int _CompanyID;
		
		private string _PayableAccount;
		
		private string _Addr;
		
		private string _Phone;
		
		private string _ContactEmail;
		
		private string _Undertaker;
		
		private string _CompanyName;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<int> _CurrentVersion;
		
		private System.Nullable<int> _CurrentLevel;
		
		private System.Nullable<int> _PostponeMonths;
		
		private System.Nullable<int> _UsanceLimitedDays;
		
		private EntityRef<CustomerOfBranchExtension> _CustomerOfBranchExtension;
		
		private EntitySet<CustomerOfBranchLevel> _CustomerOfBranchLevels;
		
		private EntitySet<NegoLC> _NegoLC;
		
		private EntitySet<CreditApplicationDocumentary> _CreditApplicationDocumentary;
		
		private EntityRef<BankData> _BankData;
		
		private EntityRef<LevelExpression> _LevelExpression;
		
		private EntityRef<CustomerOfBranchVersion> _CustomerOfBranchVersion;
		
		private EntityRef<Organization> _Organization;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnPayableAccountChanging(string value);
    partial void OnPayableAccountChanged();
    partial void OnAddrChanging(string value);
    partial void OnAddrChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnUndertakerChanging(string value);
    partial void OnUndertakerChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnCurrentVersionChanging(System.Nullable<int> value);
    partial void OnCurrentVersionChanged();
    partial void OnCurrentLevelChanging(System.Nullable<int> value);
    partial void OnCurrentLevelChanged();
    partial void OnPostponeMonthsChanging(System.Nullable<int> value);
    partial void OnPostponeMonthsChanged();
    partial void OnUsanceLimitedDaysChanging(System.Nullable<int> value);
    partial void OnUsanceLimitedDaysChanged();
    #endregion
		
		public CustomerOfBranch()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					if (this._BankData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayableAccount", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string PayableAccount
		{
			get
			{
				return this._PayableAccount;
			}
			set
			{
				if ((this._PayableAccount != value))
				{
					this.OnPayableAccountChanging(value);
					this.SendPropertyChanging();
					this._PayableAccount = value;
					this.SendPropertyChanged("PayableAccount");
					this.OnPayableAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Addr
		{
			get
			{
				return this._Addr;
			}
			set
			{
				if ((this._Addr != value))
				{
					this.OnAddrChanging(value);
					this.SendPropertyChanging();
					this._Addr = value;
					this.SendPropertyChanged("Addr");
					this.OnAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Undertaker", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Undertaker
		{
			get
			{
				return this._Undertaker;
			}
			set
			{
				if ((this._Undertaker != value))
				{
					this.OnUndertakerChanging(value);
					this.SendPropertyChanging();
					this._Undertaker = value;
					this.SendPropertyChanged("Undertaker");
					this.OnUndertakerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentVersion", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> CurrentVersion
		{
			get
			{
				return this._CurrentVersion;
			}
			set
			{
				if ((this._CurrentVersion != value))
				{
					if (this._CustomerOfBranchVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._CurrentVersion = value;
					this.SendPropertyChanged("CurrentVersion");
					this.OnCurrentVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentLevel", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> CurrentLevel
		{
			get
			{
				return this._CurrentLevel;
			}
			set
			{
				if ((this._CurrentLevel != value))
				{
					if (this._LevelExpression.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentLevelChanging(value);
					this.SendPropertyChanging();
					this._CurrentLevel = value;
					this.SendPropertyChanged("CurrentLevel");
					this.OnCurrentLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostponeMonths", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> PostponeMonths
		{
			get
			{
				return this._PostponeMonths;
			}
			set
			{
				if ((this._PostponeMonths != value))
				{
					this.OnPostponeMonthsChanging(value);
					this.SendPropertyChanging();
					this._PostponeMonths = value;
					this.SendPropertyChanged("PostponeMonths");
					this.OnPostponeMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsanceLimitedDays", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<int> UsanceLimitedDays
		{
			get
			{
				return this._UsanceLimitedDays;
			}
			set
			{
				if ((this._UsanceLimitedDays != value))
				{
					this.OnUsanceLimitedDaysChanging(value);
					this.SendPropertyChanging();
					this._UsanceLimitedDays = value;
					this.SendPropertyChanged("UsanceLimitedDays");
					this.OnUsanceLimitedDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranch_CustomerOfBranchExtension", Storage="_CustomerOfBranchExtension", ThisKey="BankCode,CompanyID", OtherKey="BankCode,CompanyID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public CustomerOfBranchExtension CustomerOfBranchExtension
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerOfBranchExtension.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._CustomerOfBranchExtension.Entity;
			}
			set
			{
				CustomerOfBranchExtension previousValue = this._CustomerOfBranchExtension.Entity;
				if (((previousValue != value) 
							|| (this._CustomerOfBranchExtension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerOfBranchExtension.Entity = null;
						previousValue.CustomerOfBranch = null;
					}
					this._CustomerOfBranchExtension.Entity = value;
					if ((value != null))
					{
						value.CustomerOfBranch = this;
					}
					this.SendPropertyChanged("CustomerOfBranchExtension");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranch_CustomerOfBranchLevel", Storage="_CustomerOfBranchLevels", ThisKey="BankCode,CompanyID", OtherKey="BankCode,CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<CustomerOfBranchLevel> CustomerOfBranchLevel
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerOfBranchLevels.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomerOfBranchLevels;
			}
			set
			{
				this._CustomerOfBranchLevels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranch_NegoLC", Storage="_NegoLC", ThisKey="BankCode,CompanyID", OtherKey="IssuingBank,CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<NegoLC> NegoLC
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoLC.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoLC;
			}
			set
			{
				this._NegoLC.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranch_CreditApplicationDocumentary", Storage="_CreditApplicationDocumentary", ThisKey="BankCode,CompanyID", OtherKey="開狀行,申請人")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<CreditApplicationDocumentary> CreditApplicationDocumentary
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditApplicationDocumentary.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CreditApplicationDocumentary;
			}
			set
			{
				this._CreditApplicationDocumentary.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_CustomerOfBranch", Storage="_BankData", ThisKey="BankCode", OtherKey="BankCode", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BankData BankData
		{
			get
			{
				return this._BankData.Entity;
			}
			set
			{
				BankData previousValue = this._BankData.Entity;
				if (((previousValue != value) 
							|| (this._BankData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankData.Entity = null;
						previousValue.CustomerOfBranch.Remove(this);
					}
					this._BankData.Entity = value;
					if ((value != null))
					{
						value.CustomerOfBranch.Add(this);
						this._BankCode = value.BankCode;
					}
					else
					{
						this._BankCode = default(string);
					}
					this.SendPropertyChanged("BankData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_CustomerOfBranch", Storage="_LevelExpression", ThisKey="CurrentLevel", OtherKey="LevelID", IsForeignKey=true)]
		public LevelExpression LevelExpression
		{
			get
			{
				return this._LevelExpression.Entity;
			}
			set
			{
				LevelExpression previousValue = this._LevelExpression.Entity;
				if (((previousValue != value) 
							|| (this._LevelExpression.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LevelExpression.Entity = null;
						previousValue.CustomerOfBranch.Remove(this);
					}
					this._LevelExpression.Entity = value;
					if ((value != null))
					{
						value.CustomerOfBranch.Add(this);
						this._CurrentLevel = value.LevelID;
					}
					else
					{
						this._CurrentLevel = default(Nullable<int>);
					}
					this.SendPropertyChanged("LevelExpression");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_CustomerOfBranch", Storage="_CustomerOfBranchVersion", ThisKey="CurrentVersion", OtherKey="VersionID", IsForeignKey=true)]
		public CustomerOfBranchVersion CustomerOfBranchVersion
		{
			get
			{
				return this._CustomerOfBranchVersion.Entity;
			}
			set
			{
				CustomerOfBranchVersion previousValue = this._CustomerOfBranchVersion.Entity;
				if (((previousValue != value) 
							|| (this._CustomerOfBranchVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerOfBranchVersion.Entity = null;
						previousValue.CustomerOfBranch.Remove(this);
					}
					this._CustomerOfBranchVersion.Entity = value;
					if ((value != null))
					{
						value.CustomerOfBranch.Add(this);
						this._CurrentVersion = value.VersionID;
					}
					else
					{
						this._CurrentVersion = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerOfBranchVersion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_CustomerOfBranch", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.CustomerOfBranch.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.CustomerOfBranch.Add(this);
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerOfBranchLevels(CustomerOfBranchLevel entity)
		{
			this.SendPropertyChanging();
			entity.CustomerOfBranch = this;
		}
		
		private void detach_CustomerOfBranchLevels(CustomerOfBranchLevel entity)
		{
			this.SendPropertyChanging();
			entity.CustomerOfBranch = null;
		}
		
		private void attach_NegoLC(NegoLC entity)
		{
			this.SendPropertyChanging();
			entity.CustomerOfBranch = this;
		}
		
		private void detach_NegoLC(NegoLC entity)
		{
			this.SendPropertyChanging();
			entity.CustomerOfBranch = null;
		}
		
		private void attach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.CustomerOfBranch = this;
		}
		
		private void detach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.CustomerOfBranch = null;
		}
		
		private void Initialize()
		{
			this._CustomerOfBranchExtension = default(EntityRef<CustomerOfBranchExtension>);
			this._CustomerOfBranchLevels = new EntitySet<CustomerOfBranchLevel>(new Action<CustomerOfBranchLevel>(this.attach_CustomerOfBranchLevels), new Action<CustomerOfBranchLevel>(this.detach_CustomerOfBranchLevels));
			this._NegoLC = new EntitySet<NegoLC>(new Action<NegoLC>(this.attach_NegoLC), new Action<NegoLC>(this.detach_NegoLC));
			this._CreditApplicationDocumentary = new EntitySet<CreditApplicationDocumentary>(new Action<CreditApplicationDocumentary>(this.attach_CreditApplicationDocumentary), new Action<CreditApplicationDocumentary>(this.detach_CreditApplicationDocumentary));
			this._BankData = default(EntityRef<BankData>);
			this._LevelExpression = default(EntityRef<LevelExpression>);
			this._CustomerOfBranchVersion = default(EntityRef<CustomerOfBranchVersion>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerOfBranchApproval")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomerOfBranchApproval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VersionID;
		
		private string _放款作業專員;
		
		private string _授信支援主管;
		
		private System.Nullable<System.DateTime> _ApprovalDate;
		
		private EntityRef<CustomerOfBranchVersion> _CustomerOfBranchVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVersionIDChanging(int value);
    partial void OnVersionIDChanged();
    partial void On放款作業專員Changing(string value);
    partial void On放款作業專員Changed();
    partial void On授信支援主管Changing(string value);
    partial void On授信支援主管Changed();
    partial void OnApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovalDateChanged();
    #endregion
		
		public CustomerOfBranchApproval()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int VersionID
		{
			get
			{
				return this._VersionID;
			}
			set
			{
				if ((this._VersionID != value))
				{
					if (this._CustomerOfBranchVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionIDChanging(value);
					this.SendPropertyChanging();
					this._VersionID = value;
					this.SendPropertyChanged("VersionID");
					this.OnVersionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_放款作業專員", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string 放款作業專員
		{
			get
			{
				return this._放款作業專員;
			}
			set
			{
				if ((this._放款作業專員 != value))
				{
					this.On放款作業專員Changing(value);
					this.SendPropertyChanging();
					this._放款作業專員 = value;
					this.SendPropertyChanged("放款作業專員");
					this.On放款作業專員Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_授信支援主管", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string 授信支援主管
		{
			get
			{
				return this._授信支援主管;
			}
			set
			{
				if ((this._授信支援主管 != value))
				{
					this.On授信支援主管Changing(value);
					this.SendPropertyChanging();
					this._授信支援主管 = value;
					this.SendPropertyChanged("授信支援主管");
					this.On授信支援主管Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> ApprovalDate
		{
			get
			{
				return this._ApprovalDate;
			}
			set
			{
				if ((this._ApprovalDate != value))
				{
					this.OnApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDate = value;
					this.SendPropertyChanged("ApprovalDate");
					this.OnApprovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_CustomerOfBranchApproval", Storage="_CustomerOfBranchVersion", ThisKey="VersionID", OtherKey="VersionID", IsForeignKey=true)]
		public CustomerOfBranchVersion CustomerOfBranchVersion
		{
			get
			{
				return this._CustomerOfBranchVersion.Entity;
			}
			set
			{
				CustomerOfBranchVersion previousValue = this._CustomerOfBranchVersion.Entity;
				if (((previousValue != value) 
							|| (this._CustomerOfBranchVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerOfBranchVersion.Entity = null;
						previousValue.CustomerOfBranchApproval = null;
					}
					this._CustomerOfBranchVersion.Entity = value;
					if ((value != null))
					{
						value.CustomerOfBranchApproval = this;
						this._VersionID = value.VersionID;
					}
					else
					{
						this._VersionID = default(int);
					}
					this.SendPropertyChanged("CustomerOfBranchVersion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CustomerOfBranchVersion = default(EntityRef<CustomerOfBranchVersion>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankInbox")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BankInbox : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MsgID;
		
		private string _BankCode;
		
		private System.Nullable<int> _TypeID;
		
		private System.Nullable<int> _DocID;
		
		private System.Nullable<System.DateTime> _MsgDate;
		
		private string _MsgContent;
		
		private EntityRef<BankData> _BankData;
		
		private EntityRef<Documentary> _Documentary;
		
		private EntityRef<MessageType> _MessageType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMsgIDChanging(long value);
    partial void OnMsgIDChanged();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    partial void OnDocIDChanging(System.Nullable<int> value);
    partial void OnDocIDChanged();
    partial void OnMsgDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMsgDateChanged();
    partial void OnMsgContentChanging(string value);
    partial void OnMsgContentChanged();
    #endregion
		
		public BankInbox()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long MsgID
		{
			get
			{
				return this._MsgID;
			}
			set
			{
				if ((this._MsgID != value))
				{
					this.OnMsgIDChanging(value);
					this.SendPropertyChanging();
					this._MsgID = value;
					this.SendPropertyChanged("MsgID");
					this.OnMsgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					if (this._BankData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._MessageType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> MsgDate
		{
			get
			{
				return this._MsgDate;
			}
			set
			{
				if ((this._MsgDate != value))
				{
					this.OnMsgDateChanging(value);
					this.SendPropertyChanging();
					this._MsgDate = value;
					this.SendPropertyChanged("MsgDate");
					this.OnMsgDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgContent", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string MsgContent
		{
			get
			{
				return this._MsgContent;
			}
			set
			{
				if ((this._MsgContent != value))
				{
					this.OnMsgContentChanging(value);
					this.SendPropertyChanging();
					this._MsgContent = value;
					this.SendPropertyChanged("MsgContent");
					this.OnMsgContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_BankInbox", Storage="_BankData", ThisKey="BankCode", OtherKey="BankCode", IsForeignKey=true)]
		public BankData BankData
		{
			get
			{
				return this._BankData.Entity;
			}
			set
			{
				BankData previousValue = this._BankData.Entity;
				if (((previousValue != value) 
							|| (this._BankData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankData.Entity = null;
						previousValue.BankInbox.Remove(this);
					}
					this._BankData.Entity = value;
					if ((value != null))
					{
						value.BankInbox.Add(this);
						this._BankCode = value.BankCode;
					}
					else
					{
						this._BankCode = default(string);
					}
					this.SendPropertyChanged("BankData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_BankInbox", Storage="_Documentary", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.BankInbox.Remove(this);
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.BankInbox.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageType_BankInbox", Storage="_MessageType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true, DeleteRule="CASCADE")]
		public MessageType MessageType
		{
			get
			{
				return this._MessageType.Entity;
			}
			set
			{
				MessageType previousValue = this._MessageType.Entity;
				if (((previousValue != value) 
							|| (this._MessageType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MessageType.Entity = null;
						previousValue.BankInbox.Remove(this);
					}
					this._MessageType.Entity = value;
					if ((value != null))
					{
						value.BankInbox.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MessageType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BankData = default(EntityRef<BankData>);
			this._Documentary = default(EntityRef<Documentary>);
			this._MessageType = default(EntityRef<MessageType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerInbox")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomerInbox : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MsgID;
		
		private string _ReceiptNo;
		
		private System.Nullable<int> _TypeID;
		
		private int _DocID;
		
		private System.Nullable<System.DateTime> _MsgDate;
		
		private System.Nullable<int> _CompanyID;
		
		private EntityRef<Documentary> _Documentary;
		
		private EntityRef<MessageType> _MessageType;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMsgIDChanging(long value);
    partial void OnMsgIDChanged();
    partial void OnReceiptNoChanging(string value);
    partial void OnReceiptNoChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnMsgDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMsgDateChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    #endregion
		
		public CustomerInbox()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long MsgID
		{
			get
			{
				return this._MsgID;
			}
			set
			{
				if ((this._MsgID != value))
				{
					this.OnMsgIDChanging(value);
					this.SendPropertyChanging();
					this._MsgID = value;
					this.SendPropertyChanged("MsgID");
					this.OnMsgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this.OnReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNo = value;
					this.SendPropertyChanged("ReceiptNo");
					this.OnReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._MessageType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> MsgDate
		{
			get
			{
				return this._MsgDate;
			}
			set
			{
				if ((this._MsgDate != value))
				{
					this.OnMsgDateChanging(value);
					this.SendPropertyChanging();
					this._MsgDate = value;
					this.SendPropertyChanged("MsgDate");
					this.OnMsgDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_CustomerInbox", Storage="_Documentary", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.CustomerInbox.Remove(this);
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.CustomerInbox.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MessageType_CustomerInbox", Storage="_MessageType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public MessageType MessageType
		{
			get
			{
				return this._MessageType.Entity;
			}
			set
			{
				MessageType previousValue = this._MessageType.Entity;
				if (((previousValue != value) 
							|| (this._MessageType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MessageType.Entity = null;
						previousValue.CustomerInbox.Remove(this);
					}
					this._MessageType.Entity = value;
					if ((value != null))
					{
						value.CustomerInbox.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MessageType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_CustomerInbox", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.CustomerInbox.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.CustomerInbox.Add(this);
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Documentary = default(EntityRef<Documentary>);
			this._MessageType = default(EntityRef<MessageType>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NegoInvoice")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NegoInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private System.Nullable<int> _DraftID;
		
		private string _InvoiceNo;
		
		private string _LadingNo;
		
		private System.Nullable<decimal> _InvoiceAmount;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private System.Nullable<System.DateTime> _ImportDate;
		
		private string _ContractNo;
		
		private string _TaxNo;
		
		private string _InvoiceContent;
		
		private System.Nullable<short> _DownloadFlag;
		
		private string _ReceiptNo;
		
		private string _AttachedFile;
		
		private EntitySet<NegoAffair> _NegoAffair;
		
		private EntitySet<NegoInvoiceDetail> _NegoInvoiceDetail;
		
		private EntityRef<NegoDraft> _NegoDraft;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnDraftIDChanging(System.Nullable<int> value);
    partial void OnDraftIDChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnLadingNoChanging(string value);
    partial void OnLadingNoChanged();
    partial void OnInvoiceAmountChanging(System.Nullable<decimal> value);
    partial void OnInvoiceAmountChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnImportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportDateChanged();
    partial void OnContractNoChanging(string value);
    partial void OnContractNoChanged();
    partial void OnTaxNoChanging(string value);
    partial void OnTaxNoChanged();
    partial void OnInvoiceContentChanging(string value);
    partial void OnInvoiceContentChanged();
    partial void OnDownloadFlagChanging(System.Nullable<short> value);
    partial void OnDownloadFlagChanged();
    partial void OnReceiptNoChanging(string value);
    partial void OnReceiptNoChanged();
    partial void OnAttachedFileChanging(string value);
    partial void OnAttachedFileChanged();
    #endregion
		
		public NegoInvoice()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DraftID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> DraftID
		{
			get
			{
				return this._DraftID;
			}
			set
			{
				if ((this._DraftID != value))
				{
					if (this._NegoDraft.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDraftIDChanging(value);
					this.SendPropertyChanging();
					this._DraftID = value;
					this.SendPropertyChanged("DraftID");
					this.OnDraftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LadingNo", DbType="NVarChar(6)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string LadingNo
		{
			get
			{
				return this._LadingNo;
			}
			set
			{
				if ((this._LadingNo != value))
				{
					this.OnLadingNoChanging(value);
					this.SendPropertyChanging();
					this._LadingNo = value;
					this.SendPropertyChanged("LadingNo");
					this.OnLadingNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAmount", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> InvoiceAmount
		{
			get
			{
				return this._InvoiceAmount;
			}
			set
			{
				if ((this._InvoiceAmount != value))
				{
					this.OnInvoiceAmountChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAmount = value;
					this.SendPropertyChanged("InvoiceAmount");
					this.OnInvoiceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> ImportDate
		{
			get
			{
				return this._ImportDate;
			}
			set
			{
				if ((this._ImportDate != value))
				{
					this.OnImportDateChanging(value);
					this.SendPropertyChanging();
					this._ImportDate = value;
					this.SendPropertyChanged("ImportDate");
					this.OnImportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNo", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string TaxNo
		{
			get
			{
				return this._TaxNo;
			}
			set
			{
				if ((this._TaxNo != value))
				{
					this.OnTaxNoChanging(value);
					this.SendPropertyChanging();
					this._TaxNo = value;
					this.SendPropertyChanged("TaxNo");
					this.OnTaxNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceContent", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string InvoiceContent
		{
			get
			{
				return this._InvoiceContent;
			}
			set
			{
				if ((this._InvoiceContent != value))
				{
					this.OnInvoiceContentChanging(value);
					this.SendPropertyChanging();
					this._InvoiceContent = value;
					this.SendPropertyChanged("InvoiceContent");
					this.OnInvoiceContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadFlag", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<short> DownloadFlag
		{
			get
			{
				return this._DownloadFlag;
			}
			set
			{
				if ((this._DownloadFlag != value))
				{
					this.OnDownloadFlagChanging(value);
					this.SendPropertyChanging();
					this._DownloadFlag = value;
					this.SendPropertyChanged("DownloadFlag");
					this.OnDownloadFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this.OnReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNo = value;
					this.SendPropertyChanged("ReceiptNo");
					this.OnReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachedFile", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string AttachedFile
		{
			get
			{
				return this._AttachedFile;
			}
			set
			{
				if ((this._AttachedFile != value))
				{
					this.OnAttachedFileChanging(value);
					this.SendPropertyChanging();
					this._AttachedFile = value;
					this.SendPropertyChanged("AttachedFile");
					this.OnAttachedFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoInvoice_NegoAffair", Storage="_NegoAffair", ThisKey="InvoiceID", OtherKey="InvoiceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<NegoAffair> NegoAffair
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoAffair.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoAffair;
			}
			set
			{
				this._NegoAffair.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoInvoice_NegoInvoiceDetail", Storage="_NegoInvoiceDetail", ThisKey="InvoiceID", OtherKey="InvoiceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<NegoInvoiceDetail> NegoInvoiceDetail
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoInvoiceDetail.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoInvoiceDetail;
			}
			set
			{
				this._NegoInvoiceDetail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoDraft_NegoInvoice", Storage="_NegoDraft", ThisKey="DraftID", OtherKey="DraftID", IsForeignKey=true, DeleteRule="CASCADE")]
		public NegoDraft NegoDraft
		{
			get
			{
				return this._NegoDraft.Entity;
			}
			set
			{
				NegoDraft previousValue = this._NegoDraft.Entity;
				if (((previousValue != value) 
							|| (this._NegoDraft.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoDraft.Entity = null;
						previousValue.NegoInvoice.Remove(this);
					}
					this._NegoDraft.Entity = value;
					if ((value != null))
					{
						value.NegoInvoice.Add(this);
						this._DraftID = value.DraftID;
					}
					else
					{
						this._DraftID = default(Nullable<int>);
					}
					this.SendPropertyChanged("NegoDraft");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NegoAffair(NegoAffair entity)
		{
			this.SendPropertyChanging();
			entity.NegoInvoice = this;
		}
		
		private void detach_NegoAffair(NegoAffair entity)
		{
			this.SendPropertyChanging();
			entity.NegoInvoice = null;
		}
		
		private void attach_NegoInvoiceDetail(NegoInvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.NegoInvoice = this;
		}
		
		private void detach_NegoInvoiceDetail(NegoInvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.NegoInvoice = null;
		}
		
		private void Initialize()
		{
			this._NegoAffair = new EntitySet<NegoAffair>(new Action<NegoAffair>(this.attach_NegoAffair), new Action<NegoAffair>(this.detach_NegoAffair));
			this._NegoInvoiceDetail = new EntitySet<NegoInvoiceDetail>(new Action<NegoInvoiceDetail>(this.attach_NegoInvoiceDetail), new Action<NegoInvoiceDetail>(this.detach_NegoInvoiceDetail));
			this._NegoDraft = default(EntityRef<NegoDraft>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NegoAffair")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NegoAffair : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DraftID;
		
		private int _InvoiceID;
		
		private decimal _NegoAmount;
		
		private EntityRef<NegoInvoice> _NegoInvoice;
		
		private EntityRef<NegoDraft> _NegoDraft;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDraftIDChanging(int value);
    partial void OnDraftIDChanged();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnNegoAmountChanging(decimal value);
    partial void OnNegoAmountChanged();
    #endregion
		
		public NegoAffair()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DraftID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DraftID
		{
			get
			{
				return this._DraftID;
			}
			set
			{
				if ((this._DraftID != value))
				{
					if (this._NegoDraft.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDraftIDChanging(value);
					this.SendPropertyChanging();
					this._DraftID = value;
					this.SendPropertyChanged("DraftID");
					this.OnDraftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._NegoInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NegoAmount", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public decimal NegoAmount
		{
			get
			{
				return this._NegoAmount;
			}
			set
			{
				if ((this._NegoAmount != value))
				{
					this.OnNegoAmountChanging(value);
					this.SendPropertyChanging();
					this._NegoAmount = value;
					this.SendPropertyChanged("NegoAmount");
					this.OnNegoAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoInvoice_NegoAffair", Storage="_NegoInvoice", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public NegoInvoice NegoInvoice
		{
			get
			{
				return this._NegoInvoice.Entity;
			}
			set
			{
				NegoInvoice previousValue = this._NegoInvoice.Entity;
				if (((previousValue != value) 
							|| (this._NegoInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoInvoice.Entity = null;
						previousValue.NegoAffair.Remove(this);
					}
					this._NegoInvoice.Entity = value;
					if ((value != null))
					{
						value.NegoAffair.Add(this);
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("NegoInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoDraft_NegoAffair", Storage="_NegoDraft", ThisKey="DraftID", OtherKey="DraftID", IsForeignKey=true)]
		public NegoDraft NegoDraft
		{
			get
			{
				return this._NegoDraft.Entity;
			}
			set
			{
				NegoDraft previousValue = this._NegoDraft.Entity;
				if (((previousValue != value) 
							|| (this._NegoDraft.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoDraft.Entity = null;
						previousValue.NegoAffair.Remove(this);
					}
					this._NegoDraft.Entity = value;
					if ((value != null))
					{
						value.NegoAffair.Add(this);
						this._DraftID = value.DraftID;
					}
					else
					{
						this._DraftID = default(int);
					}
					this.SendPropertyChanged("NegoDraft");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._NegoInvoice = default(EntityRef<NegoInvoice>);
			this._NegoDraft = default(EntityRef<NegoDraft>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentDispatch")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentDispatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private EntityRef<Documentary> _Documentary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    #endregion
		
		public DocumentDispatch()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_DocumentDispatch", Storage="_Documentary", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.DocumentDispatch = null;
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.DocumentDispatch = this;
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Documentary = default(EntityRef<Documentary>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentProcessLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentProcessLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private System.DateTime _ProcessDate;
		
		private int _Status;
		
		private EntityRef<Documentary> _Documentary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnProcessDateChanging(System.DateTime value);
    partial void OnProcessDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public DocumentProcessLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime ProcessDate
		{
			get
			{
				return this._ProcessDate;
			}
			set
			{
				if ((this._ProcessDate != value))
				{
					this.OnProcessDateChanging(value);
					this.SendPropertyChanging();
					this._ProcessDate = value;
					this.SendPropertyChanged("ProcessDate");
					this.OnProcessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_DocumentProcessLog", Storage="_Documentary", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.DocumentProcessLog.Remove(this);
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.DocumentProcessLog.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Documentary = default(EntityRef<Documentary>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupDepartment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GroupDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupID;
		
		private string _DepartID;
		
		private string _Department;
		
		private EntitySet<FpgLcItem> _FpgLcItem;
		
		private EntityRef<BeneficiaryGroup> _BeneficiaryGroup;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnDepartIDChanging(string value);
    partial void OnDepartIDChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    #endregion
		
		public GroupDepartment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._BeneficiaryGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartID", DbType="NVarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string DepartID
		{
			get
			{
				return this._DepartID;
			}
			set
			{
				if ((this._DepartID != value))
				{
					this.OnDepartIDChanging(value);
					this.SendPropertyChanging();
					this._DepartID = value;
					this.SendPropertyChanged("DepartID");
					this.OnDepartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupDepartment_FpgLcItem", Storage="_FpgLcItem", ThisKey="GroupID,DepartID", OtherKey="GroupID,DepartID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<FpgLcItem> FpgLcItem
		{
			get
			{
				if ((this.serializing 
							&& (this._FpgLcItem.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FpgLcItem;
			}
			set
			{
				this._FpgLcItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryGroup_GroupDepartment", Storage="_BeneficiaryGroup", ThisKey="GroupID", OtherKey="GroupID", IsForeignKey=true)]
		public BeneficiaryGroup BeneficiaryGroup
		{
			get
			{
				return this._BeneficiaryGroup.Entity;
			}
			set
			{
				BeneficiaryGroup previousValue = this._BeneficiaryGroup.Entity;
				if (((previousValue != value) 
							|| (this._BeneficiaryGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BeneficiaryGroup.Entity = null;
						previousValue.GroupDepartment.Remove(this);
					}
					this._BeneficiaryGroup.Entity = value;
					if ((value != null))
					{
						value.GroupDepartment.Add(this);
						this._GroupID = value.GroupID;
					}
					else
					{
						this._GroupID = default(int);
					}
					this.SendPropertyChanged("BeneficiaryGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FpgLcItem(FpgLcItem entity)
		{
			this.SendPropertyChanging();
			entity.GroupDepartment = this;
		}
		
		private void detach_FpgLcItem(FpgLcItem entity)
		{
			this.SendPropertyChanging();
			entity.GroupDepartment = null;
		}
		
		private void Initialize()
		{
			this._FpgLcItem = new EntitySet<FpgLcItem>(new Action<FpgLcItem>(this.attach_FpgLcItem), new Action<FpgLcItem>(this.detach_FpgLcItem));
			this._BeneficiaryGroup = default(EntityRef<BeneficiaryGroup>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FpgLcItem")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FpgLcItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppID;
		
		private int _GroupID;
		
		private string _DepartID;
		
		private string _ContactName;
		
		private string _ContactPhone;
		
		private System.Nullable<bool> _AcceptEInvoice;
		
		private System.Nullable<decimal> _押匯允差比例;
		
		private System.Nullable<bool> _接受發票地址與信用狀地址不符;
		
		private System.Nullable<int> _InvoiceBeforeDays;
		
		private string _CustomerNo;
		
		private string _匯票起算基準;
		
		private EntityRef<GroupDepartment> _GroupDepartment;
		
		private EntityRef<CreditApplicationDocumentary> _CreditApplicationDocumentary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnDepartIDChanging(string value);
    partial void OnDepartIDChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnAcceptEInvoiceChanging(System.Nullable<bool> value);
    partial void OnAcceptEInvoiceChanged();
    partial void On押匯允差比例Changing(System.Nullable<decimal> value);
    partial void On押匯允差比例Changed();
    partial void On接受發票地址與信用狀地址不符Changing(System.Nullable<bool> value);
    partial void On接受發票地址與信用狀地址不符Changed();
    partial void OnInvoiceBeforeDaysChanging(System.Nullable<int> value);
    partial void OnInvoiceBeforeDaysChanged();
    partial void OnCustomerNoChanging(string value);
    partial void OnCustomerNoChanged();
    partial void On匯票起算基準Changing(string value);
    partial void On匯票起算基準Changed();
    #endregion
		
		public FpgLcItem()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AppID
		{
			get
			{
				return this._AppID;
			}
			set
			{
				if ((this._AppID != value))
				{
					if (this._CreditApplicationDocumentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppIDChanging(value);
					this.SendPropertyChanging();
					this._AppID = value;
					this.SendPropertyChanged("AppID");
					this.OnAppIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._GroupDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartID", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string DepartID
		{
			get
			{
				return this._DepartID;
			}
			set
			{
				if ((this._DepartID != value))
				{
					if (this._GroupDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartIDChanging(value);
					this.SendPropertyChanging();
					this._DepartID = value;
					this.SendPropertyChanged("DepartID");
					this.OnDepartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptEInvoice", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> AcceptEInvoice
		{
			get
			{
				return this._AcceptEInvoice;
			}
			set
			{
				if ((this._AcceptEInvoice != value))
				{
					this.OnAcceptEInvoiceChanging(value);
					this.SendPropertyChanging();
					this._AcceptEInvoice = value;
					this.SendPropertyChanged("AcceptEInvoice");
					this.OnAcceptEInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_押匯允差比例", DbType="Decimal(12,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<decimal> 押匯允差比例
		{
			get
			{
				return this._押匯允差比例;
			}
			set
			{
				if ((this._押匯允差比例 != value))
				{
					this.On押匯允差比例Changing(value);
					this.SendPropertyChanging();
					this._押匯允差比例 = value;
					this.SendPropertyChanged("押匯允差比例");
					this.On押匯允差比例Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_接受發票地址與信用狀地址不符", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> 接受發票地址與信用狀地址不符
		{
			get
			{
				return this._接受發票地址與信用狀地址不符;
			}
			set
			{
				if ((this._接受發票地址與信用狀地址不符 != value))
				{
					this.On接受發票地址與信用狀地址不符Changing(value);
					this.SendPropertyChanging();
					this._接受發票地址與信用狀地址不符 = value;
					this.SendPropertyChanged("接受發票地址與信用狀地址不符");
					this.On接受發票地址與信用狀地址不符Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceBeforeDays", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> InvoiceBeforeDays
		{
			get
			{
				return this._InvoiceBeforeDays;
			}
			set
			{
				if ((this._InvoiceBeforeDays != value))
				{
					this.OnInvoiceBeforeDaysChanging(value);
					this.SendPropertyChanging();
					this._InvoiceBeforeDays = value;
					this.SendPropertyChanged("InvoiceBeforeDays");
					this.OnInvoiceBeforeDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNo", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string CustomerNo
		{
			get
			{
				return this._CustomerNo;
			}
			set
			{
				if ((this._CustomerNo != value))
				{
					this.OnCustomerNoChanging(value);
					this.SendPropertyChanging();
					this._CustomerNo = value;
					this.SendPropertyChanged("CustomerNo");
					this.OnCustomerNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_匯票起算基準", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string 匯票起算基準
		{
			get
			{
				return this._匯票起算基準;
			}
			set
			{
				if ((this._匯票起算基準 != value))
				{
					this.On匯票起算基準Changing(value);
					this.SendPropertyChanging();
					this._匯票起算基準 = value;
					this.SendPropertyChanged("匯票起算基準");
					this.On匯票起算基準Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GroupDepartment_FpgLcItem", Storage="_GroupDepartment", ThisKey="GroupID,DepartID", OtherKey="GroupID,DepartID", IsForeignKey=true)]
		public GroupDepartment GroupDepartment
		{
			get
			{
				return this._GroupDepartment.Entity;
			}
			set
			{
				GroupDepartment previousValue = this._GroupDepartment.Entity;
				if (((previousValue != value) 
							|| (this._GroupDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GroupDepartment.Entity = null;
						previousValue.FpgLcItem.Remove(this);
					}
					this._GroupDepartment.Entity = value;
					if ((value != null))
					{
						value.FpgLcItem.Add(this);
						this._GroupID = value.GroupID;
						this._DepartID = value.DepartID;
					}
					else
					{
						this._GroupID = default(int);
						this._DepartID = default(string);
					}
					this.SendPropertyChanged("GroupDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditApplicationDocumentary_FpgLcItem", Storage="_CreditApplicationDocumentary", ThisKey="AppID", OtherKey="AppID", IsForeignKey=true)]
		public CreditApplicationDocumentary CreditApplicationDocumentary
		{
			get
			{
				return this._CreditApplicationDocumentary.Entity;
			}
			set
			{
				CreditApplicationDocumentary previousValue = this._CreditApplicationDocumentary.Entity;
				if (((previousValue != value) 
							|| (this._CreditApplicationDocumentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CreditApplicationDocumentary.Entity = null;
						previousValue.FpgLcItem = null;
					}
					this._CreditApplicationDocumentary.Entity = value;
					if ((value != null))
					{
						value.FpgLcItem = this;
						this._AppID = value.AppID;
					}
					else
					{
						this._AppID = default(int);
					}
					this.SendPropertyChanged("CreditApplicationDocumentary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._GroupDepartment = default(EntityRef<GroupDepartment>);
			this._CreditApplicationDocumentary = default(EntityRef<CreditApplicationDocumentary>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExceptionLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ExceptionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private System.Nullable<System.DateTime> _LogTime;
		
		private string _Message;
		
		private EntitySet<DataProcessLog> _DataProcessLog;
		
		private EntitySet<DataPortLog> _DataPortLog;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnLogTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLogTimeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public ExceptionLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> LogTime
		{
			get
			{
				return this._LogTime;
			}
			set
			{
				if ((this._LogTime != value))
				{
					this.OnLogTimeChanging(value);
					this.SendPropertyChanging();
					this._LogTime = value;
					this.SendPropertyChanged("LogTime");
					this.OnLogTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExceptionLog_DataProcessLog", Storage="_DataProcessLog", ThisKey="LogID", OtherKey="ExceptionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<DataProcessLog> DataProcessLog
		{
			get
			{
				if ((this.serializing 
							&& (this._DataProcessLog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DataProcessLog;
			}
			set
			{
				this._DataProcessLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExceptionLog_DataPortLog", Storage="_DataPortLog", ThisKey="LogID", OtherKey="ExceptionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<DataPortLog> DataPortLog
		{
			get
			{
				if ((this.serializing 
							&& (this._DataPortLog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DataPortLog;
			}
			set
			{
				this._DataPortLog.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DataProcessLog(DataProcessLog entity)
		{
			this.SendPropertyChanging();
			entity.ExceptionLog = this;
		}
		
		private void detach_DataProcessLog(DataProcessLog entity)
		{
			this.SendPropertyChanging();
			entity.ExceptionLog = null;
		}
		
		private void attach_DataPortLog(DataPortLog entity)
		{
			this.SendPropertyChanging();
			entity.ExceptionLog = this;
		}
		
		private void detach_DataPortLog(DataPortLog entity)
		{
			this.SendPropertyChanging();
			entity.ExceptionLog = null;
		}
		
		private void Initialize()
		{
			this._DataProcessLog = new EntitySet<DataProcessLog>(new Action<DataProcessLog>(this.attach_DataProcessLog), new Action<DataProcessLog>(this.detach_DataProcessLog));
			this._DataPortLog = new EntitySet<DataPortLog>(new Action<DataPortLog>(this.attach_DataPortLog), new Action<DataPortLog>(this.detach_DataPortLog));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceivedDataQueue")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ReceivedDataQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private EntityRef<DataPortLog> _DataPortLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    #endregion
		
		public ReceivedDataQueue()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					if (this._DataPortLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataPortLog_ReceivedDataQueue", Storage="_DataPortLog", ThisKey="LogID", OtherKey="LogID", IsForeignKey=true)]
		public DataPortLog DataPortLog
		{
			get
			{
				return this._DataPortLog.Entity;
			}
			set
			{
				DataPortLog previousValue = this._DataPortLog.Entity;
				if (((previousValue != value) 
							|| (this._DataPortLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DataPortLog.Entity = null;
						previousValue.ReceivedDataQueue = null;
					}
					this._DataPortLog.Entity = value;
					if ((value != null))
					{
						value.ReceivedDataQueue = this;
						this._LogID = value.LogID;
					}
					else
					{
						this._LogID = default(int);
					}
					this.SendPropertyChanged("DataPortLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DataPortLog = default(EntityRef<DataPortLog>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataProcessLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DataProcessLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProcID;
		
		private int _LogID;
		
		private System.DateTime _ProcessDate;
		
		private System.Nullable<int> _ExceptionID;
		
		private string _ProcessContent;
		
		private EntityRef<ExceptionLog> _ExceptionLog;
		
		private EntityRef<DataPortLog> _DataPortLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcIDChanging(int value);
    partial void OnProcIDChanged();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnProcessDateChanging(System.DateTime value);
    partial void OnProcessDateChanged();
    partial void OnExceptionIDChanging(System.Nullable<int> value);
    partial void OnExceptionIDChanged();
    partial void OnProcessContentChanging(string value);
    partial void OnProcessContentChanged();
    #endregion
		
		public DataProcessLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ProcID
		{
			get
			{
				return this._ProcID;
			}
			set
			{
				if ((this._ProcID != value))
				{
					this.OnProcIDChanging(value);
					this.SendPropertyChanging();
					this._ProcID = value;
					this.SendPropertyChanged("ProcID");
					this.OnProcIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					if (this._DataPortLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime ProcessDate
		{
			get
			{
				return this._ProcessDate;
			}
			set
			{
				if ((this._ProcessDate != value))
				{
					this.OnProcessDateChanging(value);
					this.SendPropertyChanging();
					this._ProcessDate = value;
					this.SendPropertyChanged("ProcessDate");
					this.OnProcessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> ExceptionID
		{
			get
			{
				return this._ExceptionID;
			}
			set
			{
				if ((this._ExceptionID != value))
				{
					if (this._ExceptionLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExceptionIDChanging(value);
					this.SendPropertyChanging();
					this._ExceptionID = value;
					this.SendPropertyChanged("ExceptionID");
					this.OnExceptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessContent", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ProcessContent
		{
			get
			{
				return this._ProcessContent;
			}
			set
			{
				if ((this._ProcessContent != value))
				{
					this.OnProcessContentChanging(value);
					this.SendPropertyChanging();
					this._ProcessContent = value;
					this.SendPropertyChanged("ProcessContent");
					this.OnProcessContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExceptionLog_DataProcessLog", Storage="_ExceptionLog", ThisKey="ExceptionID", OtherKey="LogID", IsForeignKey=true)]
		public ExceptionLog ExceptionLog
		{
			get
			{
				return this._ExceptionLog.Entity;
			}
			set
			{
				ExceptionLog previousValue = this._ExceptionLog.Entity;
				if (((previousValue != value) 
							|| (this._ExceptionLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExceptionLog.Entity = null;
						previousValue.DataProcessLog.Remove(this);
					}
					this._ExceptionLog.Entity = value;
					if ((value != null))
					{
						value.DataProcessLog.Add(this);
						this._ExceptionID = value.LogID;
					}
					else
					{
						this._ExceptionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExceptionLog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataPortLog_DataProcessLog", Storage="_DataPortLog", ThisKey="LogID", OtherKey="LogID", IsForeignKey=true)]
		public DataPortLog DataPortLog
		{
			get
			{
				return this._DataPortLog.Entity;
			}
			set
			{
				DataPortLog previousValue = this._DataPortLog.Entity;
				if (((previousValue != value) 
							|| (this._DataPortLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DataPortLog.Entity = null;
						previousValue.DataProcessLog.Remove(this);
					}
					this._DataPortLog.Entity = value;
					if ((value != null))
					{
						value.DataProcessLog.Add(this);
						this._LogID = value.LogID;
					}
					else
					{
						this._LogID = default(int);
					}
					this.SendPropertyChanged("DataPortLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ExceptionLog = default(EntityRef<ExceptionLog>);
			this._DataPortLog = default(EntityRef<DataPortLog>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NegoPrompt")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NegoPrompt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PromptID;
		
		private System.DateTime _ImportDate;
		
		private string _PromptContent;
		
		private System.Nullable<int> _HostID;
		
		private System.Nullable<int> _LogID;
		
		private EntitySet<NegoDraft> _NegoDraft;
		
		private EntityRef<NegoHost> _NegoHost;
		
		private EntityRef<DataPortLog> _DataPortLog;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromptIDChanging(int value);
    partial void OnPromptIDChanged();
    partial void OnImportDateChanging(System.DateTime value);
    partial void OnImportDateChanged();
    partial void OnPromptContentChanging(string value);
    partial void OnPromptContentChanged();
    partial void OnHostIDChanging(System.Nullable<int> value);
    partial void OnHostIDChanged();
    partial void OnLogIDChanging(System.Nullable<int> value);
    partial void OnLogIDChanged();
    #endregion
		
		public NegoPrompt()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromptID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PromptID
		{
			get
			{
				return this._PromptID;
			}
			set
			{
				if ((this._PromptID != value))
				{
					this.OnPromptIDChanging(value);
					this.SendPropertyChanging();
					this._PromptID = value;
					this.SendPropertyChanged("PromptID");
					this.OnPromptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime ImportDate
		{
			get
			{
				return this._ImportDate;
			}
			set
			{
				if ((this._ImportDate != value))
				{
					this.OnImportDateChanging(value);
					this.SendPropertyChanging();
					this._ImportDate = value;
					this.SendPropertyChanged("ImportDate");
					this.OnImportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromptContent", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string PromptContent
		{
			get
			{
				return this._PromptContent;
			}
			set
			{
				if ((this._PromptContent != value))
				{
					this.OnPromptContentChanging(value);
					this.SendPropertyChanging();
					this._PromptContent = value;
					this.SendPropertyChanged("PromptContent");
					this.OnPromptContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					if (this._NegoHost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					if (this._DataPortLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoPrompt_NegoDraft", Storage="_NegoDraft", ThisKey="PromptID", OtherKey="PromptID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<NegoDraft> NegoDraft
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoDraft.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoDraft;
			}
			set
			{
				this._NegoDraft.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoHost_NegoPrompt", Storage="_NegoHost", ThisKey="HostID", OtherKey="HostID", IsForeignKey=true)]
		public NegoHost NegoHost
		{
			get
			{
				return this._NegoHost.Entity;
			}
			set
			{
				NegoHost previousValue = this._NegoHost.Entity;
				if (((previousValue != value) 
							|| (this._NegoHost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoHost.Entity = null;
						previousValue.NegoPrompt.Remove(this);
					}
					this._NegoHost.Entity = value;
					if ((value != null))
					{
						value.NegoPrompt.Add(this);
						this._HostID = value.HostID;
					}
					else
					{
						this._HostID = default(Nullable<int>);
					}
					this.SendPropertyChanged("NegoHost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataPortLog_NegoPrompt", Storage="_DataPortLog", ThisKey="LogID", OtherKey="LogID", IsForeignKey=true)]
		public DataPortLog DataPortLog
		{
			get
			{
				return this._DataPortLog.Entity;
			}
			set
			{
				DataPortLog previousValue = this._DataPortLog.Entity;
				if (((previousValue != value) 
							|| (this._DataPortLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DataPortLog.Entity = null;
						previousValue.NegoPrompt.Remove(this);
					}
					this._DataPortLog.Entity = value;
					if ((value != null))
					{
						value.NegoPrompt.Add(this);
						this._LogID = value.LogID;
					}
					else
					{
						this._LogID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DataPortLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NegoDraft(NegoDraft entity)
		{
			this.SendPropertyChanging();
			entity.NegoPrompt = this;
		}
		
		private void detach_NegoDraft(NegoDraft entity)
		{
			this.SendPropertyChanging();
			entity.NegoPrompt = null;
		}
		
		private void Initialize()
		{
			this._NegoDraft = new EntitySet<NegoDraft>(new Action<NegoDraft>(this.attach_NegoDraft), new Action<NegoDraft>(this.detach_NegoDraft));
			this._NegoHost = default(EntityRef<NegoHost>);
			this._DataPortLog = default(EntityRef<DataPortLog>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NegoInvoiceDetail")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NegoInvoiceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private int _InvoiceID;
		
		private System.Nullable<short> _No;
		
		private string _Spec;
		
		private System.Nullable<decimal> _Piece;
		
		private System.Nullable<decimal> _Piece2;
		
		private string _PieceUnit;
		
		private string _PieceUnit2;
		
		private System.Nullable<decimal> _Weight;
		
		private string _WeightUnit;
		
		private System.Nullable<decimal> _UnitFreight;
		
		private System.Nullable<decimal> _UnitCost;
		
		private System.Nullable<decimal> _UnitCost2;
		
		private System.Nullable<decimal> _FreightAmount;
		
		private System.Nullable<decimal> _CostAmount;
		
		private System.Nullable<decimal> _CostAmount2;
		
		private System.Nullable<decimal> _OriginalPrice;
		
		private string _Remark;
		
		private string _RelateNumber;
		
		private System.Nullable<byte> _TaxType;
		
		private string _ItemNo;
		
		private EntityRef<NegoInvoice> _NegoInvoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnNoChanging(System.Nullable<short> value);
    partial void OnNoChanged();
    partial void OnSpecChanging(string value);
    partial void OnSpecChanged();
    partial void OnPieceChanging(System.Nullable<decimal> value);
    partial void OnPieceChanged();
    partial void OnPiece2Changing(System.Nullable<decimal> value);
    partial void OnPiece2Changed();
    partial void OnPieceUnitChanging(string value);
    partial void OnPieceUnitChanged();
    partial void OnPieceUnit2Changing(string value);
    partial void OnPieceUnit2Changed();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnWeightUnitChanging(string value);
    partial void OnWeightUnitChanged();
    partial void OnUnitFreightChanging(System.Nullable<decimal> value);
    partial void OnUnitFreightChanged();
    partial void OnUnitCostChanging(System.Nullable<decimal> value);
    partial void OnUnitCostChanged();
    partial void OnUnitCost2Changing(System.Nullable<decimal> value);
    partial void OnUnitCost2Changed();
    partial void OnFreightAmountChanging(System.Nullable<decimal> value);
    partial void OnFreightAmountChanged();
    partial void OnCostAmountChanging(System.Nullable<decimal> value);
    partial void OnCostAmountChanged();
    partial void OnCostAmount2Changing(System.Nullable<decimal> value);
    partial void OnCostAmount2Changed();
    partial void OnOriginalPriceChanging(System.Nullable<decimal> value);
    partial void OnOriginalPriceChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnRelateNumberChanging(string value);
    partial void OnRelateNumberChanged();
    partial void OnTaxTypeChanging(System.Nullable<byte> value);
    partial void OnTaxTypeChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    #endregion
		
		public NegoInvoiceDetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._NegoInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<short> No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spec", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Spec
		{
			get
			{
				return this._Spec;
			}
			set
			{
				if ((this._Spec != value))
				{
					this.OnSpecChanging(value);
					this.SendPropertyChanging();
					this._Spec = value;
					this.SendPropertyChanged("Spec");
					this.OnSpecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Piece", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> Piece
		{
			get
			{
				return this._Piece;
			}
			set
			{
				if ((this._Piece != value))
				{
					this.OnPieceChanging(value);
					this.SendPropertyChanging();
					this._Piece = value;
					this.SendPropertyChanged("Piece");
					this.OnPieceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Piece2", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<decimal> Piece2
		{
			get
			{
				return this._Piece2;
			}
			set
			{
				if ((this._Piece2 != value))
				{
					this.OnPiece2Changing(value);
					this.SendPropertyChanging();
					this._Piece2 = value;
					this.SendPropertyChanged("Piece2");
					this.OnPiece2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PieceUnit", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string PieceUnit
		{
			get
			{
				return this._PieceUnit;
			}
			set
			{
				if ((this._PieceUnit != value))
				{
					this.OnPieceUnitChanging(value);
					this.SendPropertyChanging();
					this._PieceUnit = value;
					this.SendPropertyChanged("PieceUnit");
					this.OnPieceUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PieceUnit2", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string PieceUnit2
		{
			get
			{
				return this._PieceUnit2;
			}
			set
			{
				if ((this._PieceUnit2 != value))
				{
					this.OnPieceUnit2Changing(value);
					this.SendPropertyChanging();
					this._PieceUnit2 = value;
					this.SendPropertyChanged("PieceUnit2");
					this.OnPieceUnit2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightUnit", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string WeightUnit
		{
			get
			{
				return this._WeightUnit;
			}
			set
			{
				if ((this._WeightUnit != value))
				{
					this.OnWeightUnitChanging(value);
					this.SendPropertyChanging();
					this._WeightUnit = value;
					this.SendPropertyChanged("WeightUnit");
					this.OnWeightUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitFreight", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<decimal> UnitFreight
		{
			get
			{
				return this._UnitFreight;
			}
			set
			{
				if ((this._UnitFreight != value))
				{
					this.OnUnitFreightChanging(value);
					this.SendPropertyChanging();
					this._UnitFreight = value;
					this.SendPropertyChanged("UnitFreight");
					this.OnUnitFreightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCost", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<decimal> UnitCost
		{
			get
			{
				return this._UnitCost;
			}
			set
			{
				if ((this._UnitCost != value))
				{
					this.OnUnitCostChanging(value);
					this.SendPropertyChanging();
					this._UnitCost = value;
					this.SendPropertyChanged("UnitCost");
					this.OnUnitCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCost2", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<decimal> UnitCost2
		{
			get
			{
				return this._UnitCost2;
			}
			set
			{
				if ((this._UnitCost2 != value))
				{
					this.OnUnitCost2Changing(value);
					this.SendPropertyChanging();
					this._UnitCost2 = value;
					this.SendPropertyChanged("UnitCost2");
					this.OnUnitCost2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreightAmount", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<decimal> FreightAmount
		{
			get
			{
				return this._FreightAmount;
			}
			set
			{
				if ((this._FreightAmount != value))
				{
					this.OnFreightAmountChanging(value);
					this.SendPropertyChanging();
					this._FreightAmount = value;
					this.SendPropertyChanged("FreightAmount");
					this.OnFreightAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAmount", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<decimal> CostAmount
		{
			get
			{
				return this._CostAmount;
			}
			set
			{
				if ((this._CostAmount != value))
				{
					this.OnCostAmountChanging(value);
					this.SendPropertyChanging();
					this._CostAmount = value;
					this.SendPropertyChanged("CostAmount");
					this.OnCostAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAmount2", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<decimal> CostAmount2
		{
			get
			{
				return this._CostAmount2;
			}
			set
			{
				if ((this._CostAmount2 != value))
				{
					this.OnCostAmount2Changing(value);
					this.SendPropertyChanging();
					this._CostAmount2 = value;
					this.SendPropertyChanged("CostAmount2");
					this.OnCostAmount2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalPrice", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<decimal> OriginalPrice
		{
			get
			{
				return this._OriginalPrice;
			}
			set
			{
				if ((this._OriginalPrice != value))
				{
					this.OnOriginalPriceChanging(value);
					this.SendPropertyChanging();
					this._OriginalPrice = value;
					this.SendPropertyChanged("OriginalPrice");
					this.OnOriginalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelateNumber", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string RelateNumber
		{
			get
			{
				return this._RelateNumber;
			}
			set
			{
				if ((this._RelateNumber != value))
				{
					this.OnRelateNumberChanging(value);
					this.SendPropertyChanging();
					this._RelateNumber = value;
					this.SendPropertyChanged("RelateNumber");
					this.OnRelateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxType", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<byte> TaxType
		{
			get
			{
				return this._TaxType;
			}
			set
			{
				if ((this._TaxType != value))
				{
					this.OnTaxTypeChanging(value);
					this.SendPropertyChanging();
					this._TaxType = value;
					this.SendPropertyChanged("TaxType");
					this.OnTaxTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoInvoice_NegoInvoiceDetail", Storage="_NegoInvoice", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public NegoInvoice NegoInvoice
		{
			get
			{
				return this._NegoInvoice.Entity;
			}
			set
			{
				NegoInvoice previousValue = this._NegoInvoice.Entity;
				if (((previousValue != value) 
							|| (this._NegoInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoInvoice.Entity = null;
						previousValue.NegoInvoiceDetail.Remove(this);
					}
					this._NegoInvoice.Entity = value;
					if ((value != null))
					{
						value.NegoInvoiceDetail.Add(this);
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("NegoInvoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._NegoInvoice = default(EntityRef<NegoInvoice>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NegoPromptRequestQueue")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NegoPromptRequestQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private EntityRef<DataPortLog> _DataPortLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    #endregion
		
		public NegoPromptRequestQueue()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					if (this._DataPortLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataPortLog_NegoPromptRequestQueue", Storage="_DataPortLog", ThisKey="LogID", OtherKey="LogID", IsForeignKey=true)]
		public DataPortLog DataPortLog
		{
			get
			{
				return this._DataPortLog.Entity;
			}
			set
			{
				DataPortLog previousValue = this._DataPortLog.Entity;
				if (((previousValue != value) 
							|| (this._DataPortLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DataPortLog.Entity = null;
						previousValue.NegoPromptRequestQueue = null;
					}
					this._DataPortLog.Entity = value;
					if ((value != null))
					{
						value.NegoPromptRequestQueue = this;
						this._LogID = value.LogID;
					}
					else
					{
						this._LogID = default(int);
					}
					this.SendPropertyChanged("DataPortLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DataPortLog = default(EntityRef<DataPortLog>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpecificNotes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SpecificNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NoteID;
		
		private System.Nullable<bool> _原留印鑑相符;
		
		private System.Nullable<bool> _受益人單獨蓋章;
		
		private System.Nullable<bool> _分批交貨;
		
		private System.Nullable<System.DateTime> _最後交貨日;
		
		private System.Nullable<bool> _接受發票早於開狀日;
		
		private System.Nullable<bool> _接受發票金額大於開狀金額;
		
		private string _其他;
		
		private System.Nullable<System.DateTime> _押匯起始日;
		
		private System.Nullable<System.DateTime> _押匯發票起始日;
		
		private System.Nullable<bool> _接受發票人地址與受益人地址不符;
		
		private System.Nullable<bool> _接受發票電子訊息;
		
		private System.Nullable<bool> _貨品明細以發票為準;
		
		private System.Nullable<bool> _接受發票金額大於匯票金額;
		
		private System.Nullable<bool> _以發票收執聯或扣抵聯正本押匯;
		
		private System.Nullable<bool> _發票影本可接受;
		
		private string _NonCSCTerms;
		
		private System.Nullable<bool> _IsUsanceLcInterestPayByBuyer;
		
		private System.Nullable<bool> _IsAcceptanceChargePayByBuyer;
		
		private string _SpecialMessageForCS;
		
		private System.Nullable<bool> _IsCSCTerms;
		
		private string _CSCSalesDept;
		
		private EntitySet<DefaultSpecificNotes> _DefaultSpecificNotes;
		
		private EntitySet<CreditApplicationDocumentary> _CreditApplicationDocumentary;
		
		private EntitySet<LetterOfCreditVersion> _LetterOfCreditVersion;
		
		private EntitySet<AmendingLcApplication> _AmendingLcApplication;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoteIDChanging(int value);
    partial void OnNoteIDChanged();
    partial void On原留印鑑相符Changing(System.Nullable<bool> value);
    partial void On原留印鑑相符Changed();
    partial void On受益人單獨蓋章Changing(System.Nullable<bool> value);
    partial void On受益人單獨蓋章Changed();
    partial void On分批交貨Changing(System.Nullable<bool> value);
    partial void On分批交貨Changed();
    partial void On最後交貨日Changing(System.Nullable<System.DateTime> value);
    partial void On最後交貨日Changed();
    partial void On接受發票早於開狀日Changing(System.Nullable<bool> value);
    partial void On接受發票早於開狀日Changed();
    partial void On接受發票金額大於開狀金額Changing(System.Nullable<bool> value);
    partial void On接受發票金額大於開狀金額Changed();
    partial void On其他Changing(string value);
    partial void On其他Changed();
    partial void On押匯起始日Changing(System.Nullable<System.DateTime> value);
    partial void On押匯起始日Changed();
    partial void On押匯發票起始日Changing(System.Nullable<System.DateTime> value);
    partial void On押匯發票起始日Changed();
    partial void On接受發票人地址與受益人地址不符Changing(System.Nullable<bool> value);
    partial void On接受發票人地址與受益人地址不符Changed();
    partial void On接受發票電子訊息Changing(System.Nullable<bool> value);
    partial void On接受發票電子訊息Changed();
    partial void On貨品明細以發票為準Changing(System.Nullable<bool> value);
    partial void On貨品明細以發票為準Changed();
    partial void On接受發票金額大於匯票金額Changing(System.Nullable<bool> value);
    partial void On接受發票金額大於匯票金額Changed();
    partial void On以發票收執聯或扣抵聯正本押匯Changing(System.Nullable<bool> value);
    partial void On以發票收執聯或扣抵聯正本押匯Changed();
    partial void On發票影本可接受Changing(System.Nullable<bool> value);
    partial void On發票影本可接受Changed();
    partial void OnNonCSCTermsChanging(string value);
    partial void OnNonCSCTermsChanged();
    partial void OnIsUsanceLcInterestPayByBuyerChanging(System.Nullable<bool> value);
    partial void OnIsUsanceLcInterestPayByBuyerChanged();
    partial void OnIsAcceptanceChargePayByBuyerChanging(System.Nullable<bool> value);
    partial void OnIsAcceptanceChargePayByBuyerChanged();
    partial void OnSpecialMessageForCSChanging(string value);
    partial void OnSpecialMessageForCSChanged();
    partial void OnIsCSCTermsChanging(System.Nullable<bool> value);
    partial void OnIsCSCTermsChanged();
    partial void OnCSCSalesDeptChanging(string value);
    partial void OnCSCSalesDeptChanged();
    #endregion
		
		public SpecificNote()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int NoteID
		{
			get
			{
				return this._NoteID;
			}
			set
			{
				if ((this._NoteID != value))
				{
					this.OnNoteIDChanging(value);
					this.SendPropertyChanging();
					this._NoteID = value;
					this.SendPropertyChanged("NoteID");
					this.OnNoteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_原留印鑑相符", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<bool> 原留印鑑相符
		{
			get
			{
				return this._原留印鑑相符;
			}
			set
			{
				if ((this._原留印鑑相符 != value))
				{
					this.On原留印鑑相符Changing(value);
					this.SendPropertyChanging();
					this._原留印鑑相符 = value;
					this.SendPropertyChanged("原留印鑑相符");
					this.On原留印鑑相符Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_受益人單獨蓋章", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> 受益人單獨蓋章
		{
			get
			{
				return this._受益人單獨蓋章;
			}
			set
			{
				if ((this._受益人單獨蓋章 != value))
				{
					this.On受益人單獨蓋章Changing(value);
					this.SendPropertyChanging();
					this._受益人單獨蓋章 = value;
					this.SendPropertyChanged("受益人單獨蓋章");
					this.On受益人單獨蓋章Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_分批交貨", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> 分批交貨
		{
			get
			{
				return this._分批交貨;
			}
			set
			{
				if ((this._分批交貨 != value))
				{
					this.On分批交貨Changing(value);
					this.SendPropertyChanging();
					this._分批交貨 = value;
					this.SendPropertyChanged("分批交貨");
					this.On分批交貨Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_最後交貨日", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> 最後交貨日
		{
			get
			{
				return this._最後交貨日;
			}
			set
			{
				if ((this._最後交貨日 != value))
				{
					this.On最後交貨日Changing(value);
					this.SendPropertyChanging();
					this._最後交貨日 = value;
					this.SendPropertyChanged("最後交貨日");
					this.On最後交貨日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_接受發票早於開狀日", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> 接受發票早於開狀日
		{
			get
			{
				return this._接受發票早於開狀日;
			}
			set
			{
				if ((this._接受發票早於開狀日 != value))
				{
					this.On接受發票早於開狀日Changing(value);
					this.SendPropertyChanging();
					this._接受發票早於開狀日 = value;
					this.SendPropertyChanged("接受發票早於開狀日");
					this.On接受發票早於開狀日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_接受發票金額大於開狀金額", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<bool> 接受發票金額大於開狀金額
		{
			get
			{
				return this._接受發票金額大於開狀金額;
			}
			set
			{
				if ((this._接受發票金額大於開狀金額 != value))
				{
					this.On接受發票金額大於開狀金額Changing(value);
					this.SendPropertyChanging();
					this._接受發票金額大於開狀金額 = value;
					this.SendPropertyChanged("接受發票金額大於開狀金額");
					this.On接受發票金額大於開狀金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_其他", DbType="NVarChar(1024)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string 其他
		{
			get
			{
				return this._其他;
			}
			set
			{
				if ((this._其他 != value))
				{
					this.On其他Changing(value);
					this.SendPropertyChanging();
					this._其他 = value;
					this.SendPropertyChanged("其他");
					this.On其他Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_押匯起始日", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> 押匯起始日
		{
			get
			{
				return this._押匯起始日;
			}
			set
			{
				if ((this._押匯起始日 != value))
				{
					this.On押匯起始日Changing(value);
					this.SendPropertyChanging();
					this._押匯起始日 = value;
					this.SendPropertyChanged("押匯起始日");
					this.On押匯起始日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_押匯發票起始日", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.DateTime> 押匯發票起始日
		{
			get
			{
				return this._押匯發票起始日;
			}
			set
			{
				if ((this._押匯發票起始日 != value))
				{
					this.On押匯發票起始日Changing(value);
					this.SendPropertyChanging();
					this._押匯發票起始日 = value;
					this.SendPropertyChanged("押匯發票起始日");
					this.On押匯發票起始日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_接受發票人地址與受益人地址不符", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<bool> 接受發票人地址與受益人地址不符
		{
			get
			{
				return this._接受發票人地址與受益人地址不符;
			}
			set
			{
				if ((this._接受發票人地址與受益人地址不符 != value))
				{
					this.On接受發票人地址與受益人地址不符Changing(value);
					this.SendPropertyChanging();
					this._接受發票人地址與受益人地址不符 = value;
					this.SendPropertyChanged("接受發票人地址與受益人地址不符");
					this.On接受發票人地址與受益人地址不符Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_接受發票電子訊息", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<bool> 接受發票電子訊息
		{
			get
			{
				return this._接受發票電子訊息;
			}
			set
			{
				if ((this._接受發票電子訊息 != value))
				{
					this.On接受發票電子訊息Changing(value);
					this.SendPropertyChanging();
					this._接受發票電子訊息 = value;
					this.SendPropertyChanged("接受發票電子訊息");
					this.On接受發票電子訊息Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貨品明細以發票為準", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<bool> 貨品明細以發票為準
		{
			get
			{
				return this._貨品明細以發票為準;
			}
			set
			{
				if ((this._貨品明細以發票為準 != value))
				{
					this.On貨品明細以發票為準Changing(value);
					this.SendPropertyChanging();
					this._貨品明細以發票為準 = value;
					this.SendPropertyChanged("貨品明細以發票為準");
					this.On貨品明細以發票為準Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_接受發票金額大於匯票金額", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<bool> 接受發票金額大於匯票金額
		{
			get
			{
				return this._接受發票金額大於匯票金額;
			}
			set
			{
				if ((this._接受發票金額大於匯票金額 != value))
				{
					this.On接受發票金額大於匯票金額Changing(value);
					this.SendPropertyChanging();
					this._接受發票金額大於匯票金額 = value;
					this.SendPropertyChanged("接受發票金額大於匯票金額");
					this.On接受發票金額大於匯票金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_以發票收執聯或扣抵聯正本押匯", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<bool> 以發票收執聯或扣抵聯正本押匯
		{
			get
			{
				return this._以發票收執聯或扣抵聯正本押匯;
			}
			set
			{
				if ((this._以發票收執聯或扣抵聯正本押匯 != value))
				{
					this.On以發票收執聯或扣抵聯正本押匯Changing(value);
					this.SendPropertyChanging();
					this._以發票收執聯或扣抵聯正本押匯 = value;
					this.SendPropertyChanged("以發票收執聯或扣抵聯正本押匯");
					this.On以發票收執聯或扣抵聯正本押匯Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_發票影本可接受", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<bool> 發票影本可接受
		{
			get
			{
				return this._發票影本可接受;
			}
			set
			{
				if ((this._發票影本可接受 != value))
				{
					this.On發票影本可接受Changing(value);
					this.SendPropertyChanging();
					this._發票影本可接受 = value;
					this.SendPropertyChanged("發票影本可接受");
					this.On發票影本可接受Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonCSCTerms", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string NonCSCTerms
		{
			get
			{
				return this._NonCSCTerms;
			}
			set
			{
				if ((this._NonCSCTerms != value))
				{
					this.OnNonCSCTermsChanging(value);
					this.SendPropertyChanging();
					this._NonCSCTerms = value;
					this.SendPropertyChanged("NonCSCTerms");
					this.OnNonCSCTermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsanceLcInterestPayByBuyer", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<bool> IsUsanceLcInterestPayByBuyer
		{
			get
			{
				return this._IsUsanceLcInterestPayByBuyer;
			}
			set
			{
				if ((this._IsUsanceLcInterestPayByBuyer != value))
				{
					this.OnIsUsanceLcInterestPayByBuyerChanging(value);
					this.SendPropertyChanging();
					this._IsUsanceLcInterestPayByBuyer = value;
					this.SendPropertyChanged("IsUsanceLcInterestPayByBuyer");
					this.OnIsUsanceLcInterestPayByBuyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAcceptanceChargePayByBuyer", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<bool> IsAcceptanceChargePayByBuyer
		{
			get
			{
				return this._IsAcceptanceChargePayByBuyer;
			}
			set
			{
				if ((this._IsAcceptanceChargePayByBuyer != value))
				{
					this.OnIsAcceptanceChargePayByBuyerChanging(value);
					this.SendPropertyChanging();
					this._IsAcceptanceChargePayByBuyer = value;
					this.SendPropertyChanged("IsAcceptanceChargePayByBuyer");
					this.OnIsAcceptanceChargePayByBuyerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialMessageForCS", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string SpecialMessageForCS
		{
			get
			{
				return this._SpecialMessageForCS;
			}
			set
			{
				if ((this._SpecialMessageForCS != value))
				{
					this.OnSpecialMessageForCSChanging(value);
					this.SendPropertyChanging();
					this._SpecialMessageForCS = value;
					this.SendPropertyChanged("SpecialMessageForCS");
					this.OnSpecialMessageForCSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCSCTerms", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<bool> IsCSCTerms
		{
			get
			{
				return this._IsCSCTerms;
			}
			set
			{
				if ((this._IsCSCTerms != value))
				{
					this.OnIsCSCTermsChanging(value);
					this.SendPropertyChanging();
					this._IsCSCTerms = value;
					this.SendPropertyChanged("IsCSCTerms");
					this.OnIsCSCTermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSCSalesDept", DbType="NVarChar(8)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string CSCSalesDept
		{
			get
			{
				return this._CSCSalesDept;
			}
			set
			{
				if ((this._CSCSalesDept != value))
				{
					this.OnCSCSalesDeptChanging(value);
					this.SendPropertyChanging();
					this._CSCSalesDept = value;
					this.SendPropertyChanged("CSCSalesDept");
					this.OnCSCSalesDeptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecificNote_DefaultSpecificNotes", Storage="_DefaultSpecificNotes", ThisKey="NoteID", OtherKey="NoteID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<DefaultSpecificNotes> DefaultSpecificNotes
		{
			get
			{
				if ((this.serializing 
							&& (this._DefaultSpecificNotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DefaultSpecificNotes;
			}
			set
			{
				this._DefaultSpecificNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecificNote_CreditApplicationDocumentary", Storage="_CreditApplicationDocumentary", ThisKey="NoteID", OtherKey="NoteID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<CreditApplicationDocumentary> CreditApplicationDocumentary
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditApplicationDocumentary.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CreditApplicationDocumentary;
			}
			set
			{
				this._CreditApplicationDocumentary.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecificNote_LetterOfCreditVersion", Storage="_LetterOfCreditVersion", ThisKey="NoteID", OtherKey="NoteID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<LetterOfCreditVersion> LetterOfCreditVersion
		{
			get
			{
				if ((this.serializing 
							&& (this._LetterOfCreditVersion.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LetterOfCreditVersion;
			}
			set
			{
				this._LetterOfCreditVersion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecificNote_AmendingLcApplication", Storage="_AmendingLcApplication", ThisKey="NoteID", OtherKey="NoteID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<AmendingLcApplication> AmendingLcApplication
		{
			get
			{
				if ((this.serializing 
							&& (this._AmendingLcApplication.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AmendingLcApplication;
			}
			set
			{
				this._AmendingLcApplication.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DefaultSpecificNotes(DefaultSpecificNotes entity)
		{
			this.SendPropertyChanging();
			entity.SpecificNote = this;
		}
		
		private void detach_DefaultSpecificNotes(DefaultSpecificNotes entity)
		{
			this.SendPropertyChanging();
			entity.SpecificNote = null;
		}
		
		private void attach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.SpecificNote = this;
		}
		
		private void detach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.SpecificNote = null;
		}
		
		private void attach_LetterOfCreditVersion(LetterOfCreditVersion entity)
		{
			this.SendPropertyChanging();
			entity.SpecificNote = this;
		}
		
		private void detach_LetterOfCreditVersion(LetterOfCreditVersion entity)
		{
			this.SendPropertyChanging();
			entity.SpecificNote = null;
		}
		
		private void attach_AmendingLcApplication(AmendingLcApplication entity)
		{
			this.SendPropertyChanging();
			entity.SpecificNote = this;
		}
		
		private void detach_AmendingLcApplication(AmendingLcApplication entity)
		{
			this.SendPropertyChanging();
			entity.SpecificNote = null;
		}
		
		private void Initialize()
		{
			this._DefaultSpecificNotes = new EntitySet<DefaultSpecificNotes>(new Action<DefaultSpecificNotes>(this.attach_DefaultSpecificNotes), new Action<DefaultSpecificNotes>(this.detach_DefaultSpecificNotes));
			this._CreditApplicationDocumentary = new EntitySet<CreditApplicationDocumentary>(new Action<CreditApplicationDocumentary>(this.attach_CreditApplicationDocumentary), new Action<CreditApplicationDocumentary>(this.detach_CreditApplicationDocumentary));
			this._LetterOfCreditVersion = new EntitySet<LetterOfCreditVersion>(new Action<LetterOfCreditVersion>(this.attach_LetterOfCreditVersion), new Action<LetterOfCreditVersion>(this.detach_LetterOfCreditVersion));
			this._AmendingLcApplication = new EntitySet<AmendingLcApplication>(new Action<AmendingLcApplication>(this.attach_AmendingLcApplication), new Action<AmendingLcApplication>(this.detach_AmendingLcApplication));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FpgNegoDraft")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FpgNegoDraft : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DraftID;
		
		private string _匯入銀行代碼;
		
		private string _匯入帳號;
		
		private string _營業員姓名;
		
		private string _營業員連絡電話;
		
		private string _Remark;
		
		private string _押匯提示地點;
		
		private string _匯入戶名;
		
		private string _匯入銀行名稱;
		
		private EntityRef<FpgNegoRemittance> _FpgNegoRemittance;
		
		private EntityRef<NegoDraft> _NegoDraft;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDraftIDChanging(int value);
    partial void OnDraftIDChanged();
    partial void On匯入銀行代碼Changing(string value);
    partial void On匯入銀行代碼Changed();
    partial void On匯入帳號Changing(string value);
    partial void On匯入帳號Changed();
    partial void On營業員姓名Changing(string value);
    partial void On營業員姓名Changed();
    partial void On營業員連絡電話Changing(string value);
    partial void On營業員連絡電話Changed();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void On押匯提示地點Changing(string value);
    partial void On押匯提示地點Changed();
    partial void On匯入戶名Changing(string value);
    partial void On匯入戶名Changed();
    partial void On匯入銀行名稱Changing(string value);
    partial void On匯入銀行名稱Changed();
    #endregion
		
		public FpgNegoDraft()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DraftID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DraftID
		{
			get
			{
				return this._DraftID;
			}
			set
			{
				if ((this._DraftID != value))
				{
					if (this._NegoDraft.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDraftIDChanging(value);
					this.SendPropertyChanging();
					this._DraftID = value;
					this.SendPropertyChanged("DraftID");
					this.OnDraftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_匯入銀行代碼", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string 匯入銀行代碼
		{
			get
			{
				return this._匯入銀行代碼;
			}
			set
			{
				if ((this._匯入銀行代碼 != value))
				{
					this.On匯入銀行代碼Changing(value);
					this.SendPropertyChanging();
					this._匯入銀行代碼 = value;
					this.SendPropertyChanged("匯入銀行代碼");
					this.On匯入銀行代碼Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_匯入帳號", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string 匯入帳號
		{
			get
			{
				return this._匯入帳號;
			}
			set
			{
				if ((this._匯入帳號 != value))
				{
					this.On匯入帳號Changing(value);
					this.SendPropertyChanging();
					this._匯入帳號 = value;
					this.SendPropertyChanged("匯入帳號");
					this.On匯入帳號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_營業員姓名", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string 營業員姓名
		{
			get
			{
				return this._營業員姓名;
			}
			set
			{
				if ((this._營業員姓名 != value))
				{
					this.On營業員姓名Changing(value);
					this.SendPropertyChanging();
					this._營業員姓名 = value;
					this.SendPropertyChanged("營業員姓名");
					this.On營業員姓名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_營業員連絡電話", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string 營業員連絡電話
		{
			get
			{
				return this._營業員連絡電話;
			}
			set
			{
				if ((this._營業員連絡電話 != value))
				{
					this.On營業員連絡電話Changing(value);
					this.SendPropertyChanging();
					this._營業員連絡電話 = value;
					this.SendPropertyChanged("營業員連絡電話");
					this.On營業員連絡電話Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_押匯提示地點", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string 押匯提示地點
		{
			get
			{
				return this._押匯提示地點;
			}
			set
			{
				if ((this._押匯提示地點 != value))
				{
					this.On押匯提示地點Changing(value);
					this.SendPropertyChanging();
					this._押匯提示地點 = value;
					this.SendPropertyChanged("押匯提示地點");
					this.On押匯提示地點Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_匯入戶名", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string 匯入戶名
		{
			get
			{
				return this._匯入戶名;
			}
			set
			{
				if ((this._匯入戶名 != value))
				{
					this.On匯入戶名Changing(value);
					this.SendPropertyChanging();
					this._匯入戶名 = value;
					this.SendPropertyChanged("匯入戶名");
					this.On匯入戶名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_匯入銀行名稱", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string 匯入銀行名稱
		{
			get
			{
				return this._匯入銀行名稱;
			}
			set
			{
				if ((this._匯入銀行名稱 != value))
				{
					this.On匯入銀行名稱Changing(value);
					this.SendPropertyChanging();
					this._匯入銀行名稱 = value;
					this.SendPropertyChanged("匯入銀行名稱");
					this.On匯入銀行名稱Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FpgNegoDraft_FpgNegoRemittance", Storage="_FpgNegoRemittance", ThisKey="DraftID", OtherKey="DraftID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public FpgNegoRemittance FpgNegoRemittance
		{
			get
			{
				if ((this.serializing 
							&& (this._FpgNegoRemittance.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._FpgNegoRemittance.Entity;
			}
			set
			{
				FpgNegoRemittance previousValue = this._FpgNegoRemittance.Entity;
				if (((previousValue != value) 
							|| (this._FpgNegoRemittance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FpgNegoRemittance.Entity = null;
						previousValue.FpgNegoDraft = null;
					}
					this._FpgNegoRemittance.Entity = value;
					if ((value != null))
					{
						value.FpgNegoDraft = this;
					}
					this.SendPropertyChanged("FpgNegoRemittance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoDraft_FpgNegoDraft", Storage="_NegoDraft", ThisKey="DraftID", OtherKey="DraftID", IsForeignKey=true)]
		public NegoDraft NegoDraft
		{
			get
			{
				return this._NegoDraft.Entity;
			}
			set
			{
				NegoDraft previousValue = this._NegoDraft.Entity;
				if (((previousValue != value) 
							|| (this._NegoDraft.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoDraft.Entity = null;
						previousValue.FpgNegoDraft = null;
					}
					this._NegoDraft.Entity = value;
					if ((value != null))
					{
						value.FpgNegoDraft = this;
						this._DraftID = value.DraftID;
					}
					else
					{
						this._DraftID = default(int);
					}
					this.SendPropertyChanged("NegoDraft");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._FpgNegoRemittance = default(EntityRef<FpgNegoRemittance>);
			this._NegoDraft = default(EntityRef<NegoDraft>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FpgNegoRemittance")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FpgNegoRemittance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DraftID;
		
		private System.Nullable<System.DateTime> _RemittanceDate;
		
		private System.Nullable<int> _Status;
		
		private EntitySet<FpgNegoRemittanceLog> _FpgNegoRemittanceLog;
		
		private EntityRef<FpgNegoDraft> _FpgNegoDraft;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDraftIDChanging(int value);
    partial void OnDraftIDChanged();
    partial void OnRemittanceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRemittanceDateChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public FpgNegoRemittance()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DraftID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DraftID
		{
			get
			{
				return this._DraftID;
			}
			set
			{
				if ((this._DraftID != value))
				{
					if (this._FpgNegoDraft.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDraftIDChanging(value);
					this.SendPropertyChanging();
					this._DraftID = value;
					this.SendPropertyChanged("DraftID");
					this.OnDraftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemittanceDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> RemittanceDate
		{
			get
			{
				return this._RemittanceDate;
			}
			set
			{
				if ((this._RemittanceDate != value))
				{
					this.OnRemittanceDateChanging(value);
					this.SendPropertyChanging();
					this._RemittanceDate = value;
					this.SendPropertyChanged("RemittanceDate");
					this.OnRemittanceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FpgNegoRemittance_FpgNegoRemittanceLog", Storage="_FpgNegoRemittanceLog", ThisKey="DraftID", OtherKey="DraftID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<FpgNegoRemittanceLog> FpgNegoRemittanceLog
		{
			get
			{
				if ((this.serializing 
							&& (this._FpgNegoRemittanceLog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FpgNegoRemittanceLog;
			}
			set
			{
				this._FpgNegoRemittanceLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FpgNegoDraft_FpgNegoRemittance", Storage="_FpgNegoDraft", ThisKey="DraftID", OtherKey="DraftID", IsForeignKey=true)]
		public FpgNegoDraft FpgNegoDraft
		{
			get
			{
				return this._FpgNegoDraft.Entity;
			}
			set
			{
				FpgNegoDraft previousValue = this._FpgNegoDraft.Entity;
				if (((previousValue != value) 
							|| (this._FpgNegoDraft.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FpgNegoDraft.Entity = null;
						previousValue.FpgNegoRemittance = null;
					}
					this._FpgNegoDraft.Entity = value;
					if ((value != null))
					{
						value.FpgNegoRemittance = this;
						this._DraftID = value.DraftID;
					}
					else
					{
						this._DraftID = default(int);
					}
					this.SendPropertyChanged("FpgNegoDraft");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FpgNegoRemittanceLog(FpgNegoRemittanceLog entity)
		{
			this.SendPropertyChanging();
			entity.FpgNegoRemittance = this;
		}
		
		private void detach_FpgNegoRemittanceLog(FpgNegoRemittanceLog entity)
		{
			this.SendPropertyChanging();
			entity.FpgNegoRemittance = null;
		}
		
		private void Initialize()
		{
			this._FpgNegoRemittanceLog = new EntitySet<FpgNegoRemittanceLog>(new Action<FpgNegoRemittanceLog>(this.attach_FpgNegoRemittanceLog), new Action<FpgNegoRemittanceLog>(this.detach_FpgNegoRemittanceLog));
			this._FpgNegoDraft = default(EntityRef<FpgNegoDraft>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlertDataQueue")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AlertDataQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private EntityRef<DataPortLog> _DataPortLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    #endregion
		
		public AlertDataQueue()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					if (this._DataPortLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataPortLog_AlertDataQueue", Storage="_DataPortLog", ThisKey="LogID", OtherKey="LogID", IsForeignKey=true)]
		public DataPortLog DataPortLog
		{
			get
			{
				return this._DataPortLog.Entity;
			}
			set
			{
				DataPortLog previousValue = this._DataPortLog.Entity;
				if (((previousValue != value) 
							|| (this._DataPortLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DataPortLog.Entity = null;
						previousValue.AlertDataQueue = null;
					}
					this._DataPortLog.Entity = value;
					if ((value != null))
					{
						value.AlertDataQueue = this;
						this._LogID = value.LogID;
					}
					else
					{
						this._LogID = default(int);
					}
					this.SendPropertyChanged("DataPortLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DataPortLog = default(EntityRef<DataPortLog>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FpgLcMonthlyReport")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FpgLcMonthlyReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportID;
		
		private int _Year;
		
		private int _Month;
		
		private int _Catalog;
		
		private string _BankCode;
		
		private int _ApplicantID;
		
		private int _BeneID;
		
		private string _ProductCategory;
		
		private int _RecordCount;
		
		private EntityRef<BeneficiaryData> _BeneficiaryData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIDChanging(int value);
    partial void OnReportIDChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMonthChanging(int value);
    partial void OnMonthChanged();
    partial void OnCatalogChanging(int value);
    partial void OnCatalogChanged();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnApplicantIDChanging(int value);
    partial void OnApplicantIDChanged();
    partial void OnBeneIDChanging(int value);
    partial void OnBeneIDChanged();
    partial void OnProductCategoryChanging(string value);
    partial void OnProductCategoryChanged();
    partial void OnRecordCountChanging(int value);
    partial void OnRecordCountChanged();
    #endregion
		
		public FpgLcMonthlyReport()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catalog", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Catalog
		{
			get
			{
				return this._Catalog;
			}
			set
			{
				if ((this._Catalog != value))
				{
					this.OnCatalogChanging(value);
					this.SendPropertyChanging();
					this._Catalog = value;
					this.SendPropertyChanged("Catalog");
					this.OnCatalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int ApplicantID
		{
			get
			{
				return this._ApplicantID;
			}
			set
			{
				if ((this._ApplicantID != value))
				{
					this.OnApplicantIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicantID = value;
					this.SendPropertyChanged("ApplicantID");
					this.OnApplicantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int BeneID
		{
			get
			{
				return this._BeneID;
			}
			set
			{
				if ((this._BeneID != value))
				{
					if (this._BeneficiaryData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBeneIDChanging(value);
					this.SendPropertyChanging();
					this._BeneID = value;
					this.SendPropertyChanged("BeneID");
					this.OnBeneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategory", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ProductCategory
		{
			get
			{
				return this._ProductCategory;
			}
			set
			{
				if ((this._ProductCategory != value))
				{
					this.OnProductCategoryChanging(value);
					this.SendPropertyChanging();
					this._ProductCategory = value;
					this.SendPropertyChanged("ProductCategory");
					this.OnProductCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordCount", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int RecordCount
		{
			get
			{
				return this._RecordCount;
			}
			set
			{
				if ((this._RecordCount != value))
				{
					this.OnRecordCountChanging(value);
					this.SendPropertyChanging();
					this._RecordCount = value;
					this.SendPropertyChanged("RecordCount");
					this.OnRecordCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryData_FpgLcMonthlyReport", Storage="_BeneficiaryData", ThisKey="BeneID", OtherKey="BeneID", IsForeignKey=true)]
		public BeneficiaryData BeneficiaryData
		{
			get
			{
				return this._BeneficiaryData.Entity;
			}
			set
			{
				BeneficiaryData previousValue = this._BeneficiaryData.Entity;
				if (((previousValue != value) 
							|| (this._BeneficiaryData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BeneficiaryData.Entity = null;
						previousValue.FpgLcMonthlyReport.Remove(this);
					}
					this._BeneficiaryData.Entity = value;
					if ((value != null))
					{
						value.FpgLcMonthlyReport.Add(this);
						this._BeneID = value.BeneID;
					}
					else
					{
						this._BeneID = default(int);
					}
					this.SendPropertyChanged("BeneficiaryData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BeneficiaryData = default(EntityRef<BeneficiaryData>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LcPrintNotice")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LcPrintNotice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _PrintTime;
		
		private string _Approver;
		
		private int _NoticeID;
		
		private EntityRef<Documentary> _Documentary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrintTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPrintTimeChanged();
    partial void OnApproverChanging(string value);
    partial void OnApproverChanged();
    partial void OnNoticeIDChanging(int value);
    partial void OnNoticeIDChanged();
    #endregion
		
		public LcPrintNotice()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Nullable<System.DateTime> PrintTime
		{
			get
			{
				return this._PrintTime;
			}
			set
			{
				if ((this._PrintTime != value))
				{
					this.OnPrintTimeChanging(value);
					this.SendPropertyChanging();
					this._PrintTime = value;
					this.SendPropertyChanged("PrintTime");
					this.OnPrintTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approver", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Approver
		{
			get
			{
				return this._Approver;
			}
			set
			{
				if ((this._Approver != value))
				{
					this.OnApproverChanging(value);
					this.SendPropertyChanging();
					this._Approver = value;
					this.SendPropertyChanged("Approver");
					this.OnApproverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int NoticeID
		{
			get
			{
				return this._NoticeID;
			}
			set
			{
				if ((this._NoticeID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoticeIDChanging(value);
					this.SendPropertyChanging();
					this._NoticeID = value;
					this.SendPropertyChanged("NoticeID");
					this.OnNoticeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_LcPrintNotice", Storage="_Documentary", ThisKey="NoticeID", OtherKey="DocID", IsForeignKey=true)]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.LcPrintNotice = null;
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.LcPrintNotice = this;
						this._NoticeID = value.DocID;
					}
					else
					{
						this._NoticeID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Documentary = default(EntityRef<Documentary>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FpgNegoRemittanceLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FpgNegoRemittanceLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RemittanceID;
		
		private int _DraftID;
		
		private int _LogID;
		
		private string _BatchNo;
		
		private System.Nullable<int> _SeqNo;
		
		private string _DPMTID;
		
		private System.Nullable<int> _Status;
		
		private string _Description;
		
		private System.Nullable<decimal> _Amount;
		
		private EntityRef<FpgNegoRemittanceDispatch> _FpgNegoRemittanceDispatch;
		
		private EntityRef<FpgNegoRemittance> _FpgNegoRemittance;
		
		private EntityRef<DataPortLog> _DataPortLog;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRemittanceIDChanging(int value);
    partial void OnRemittanceIDChanged();
    partial void OnDraftIDChanging(int value);
    partial void OnDraftIDChanged();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnBatchNoChanging(string value);
    partial void OnBatchNoChanged();
    partial void OnSeqNoChanging(System.Nullable<int> value);
    partial void OnSeqNoChanged();
    partial void OnDPMTIDChanging(string value);
    partial void OnDPMTIDChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    #endregion
		
		public FpgNegoRemittanceLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemittanceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RemittanceID
		{
			get
			{
				return this._RemittanceID;
			}
			set
			{
				if ((this._RemittanceID != value))
				{
					this.OnRemittanceIDChanging(value);
					this.SendPropertyChanging();
					this._RemittanceID = value;
					this.SendPropertyChanged("RemittanceID");
					this.OnRemittanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DraftID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int DraftID
		{
			get
			{
				return this._DraftID;
			}
			set
			{
				if ((this._DraftID != value))
				{
					if (this._FpgNegoRemittance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDraftIDChanging(value);
					this.SendPropertyChanging();
					this._DraftID = value;
					this.SendPropertyChanged("DraftID");
					this.OnDraftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					if (this._DataPortLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNo", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string BatchNo
		{
			get
			{
				return this._BatchNo;
			}
			set
			{
				if ((this._BatchNo != value))
				{
					this.OnBatchNoChanging(value);
					this.SendPropertyChanging();
					this._BatchNo = value;
					this.SendPropertyChanged("BatchNo");
					this.OnBatchNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DPMTID", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string DPMTID
		{
			get
			{
				return this._DPMTID;
			}
			set
			{
				if ((this._DPMTID != value))
				{
					this.OnDPMTIDChanging(value);
					this.SendPropertyChanging();
					this._DPMTID = value;
					this.SendPropertyChanged("DPMTID");
					this.OnDPMTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FpgNegoRemittanceLog_FpgNegoRemittanceDispatch", Storage="_FpgNegoRemittanceDispatch", ThisKey="RemittanceID", OtherKey="RemittanceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public FpgNegoRemittanceDispatch FpgNegoRemittanceDispatch
		{
			get
			{
				if ((this.serializing 
							&& (this._FpgNegoRemittanceDispatch.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._FpgNegoRemittanceDispatch.Entity;
			}
			set
			{
				FpgNegoRemittanceDispatch previousValue = this._FpgNegoRemittanceDispatch.Entity;
				if (((previousValue != value) 
							|| (this._FpgNegoRemittanceDispatch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FpgNegoRemittanceDispatch.Entity = null;
						previousValue.FpgNegoRemittanceLog = null;
					}
					this._FpgNegoRemittanceDispatch.Entity = value;
					if ((value != null))
					{
						value.FpgNegoRemittanceLog = this;
					}
					this.SendPropertyChanged("FpgNegoRemittanceDispatch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FpgNegoRemittance_FpgNegoRemittanceLog", Storage="_FpgNegoRemittance", ThisKey="DraftID", OtherKey="DraftID", IsForeignKey=true)]
		public FpgNegoRemittance FpgNegoRemittance
		{
			get
			{
				return this._FpgNegoRemittance.Entity;
			}
			set
			{
				FpgNegoRemittance previousValue = this._FpgNegoRemittance.Entity;
				if (((previousValue != value) 
							|| (this._FpgNegoRemittance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FpgNegoRemittance.Entity = null;
						previousValue.FpgNegoRemittanceLog.Remove(this);
					}
					this._FpgNegoRemittance.Entity = value;
					if ((value != null))
					{
						value.FpgNegoRemittanceLog.Add(this);
						this._DraftID = value.DraftID;
					}
					else
					{
						this._DraftID = default(int);
					}
					this.SendPropertyChanged("FpgNegoRemittance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataPortLog_FpgNegoRemittanceLog", Storage="_DataPortLog", ThisKey="LogID", OtherKey="LogID", IsForeignKey=true)]
		public DataPortLog DataPortLog
		{
			get
			{
				return this._DataPortLog.Entity;
			}
			set
			{
				DataPortLog previousValue = this._DataPortLog.Entity;
				if (((previousValue != value) 
							|| (this._DataPortLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DataPortLog.Entity = null;
						previousValue.FpgNegoRemittanceLog.Remove(this);
					}
					this._DataPortLog.Entity = value;
					if ((value != null))
					{
						value.FpgNegoRemittanceLog.Add(this);
						this._LogID = value.LogID;
					}
					else
					{
						this._LogID = default(int);
					}
					this.SendPropertyChanged("DataPortLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._FpgNegoRemittanceDispatch = default(EntityRef<FpgNegoRemittanceDispatch>);
			this._FpgNegoRemittance = default(EntityRef<FpgNegoRemittance>);
			this._DataPortLog = default(EntityRef<DataPortLog>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CancellationRegistry")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CancellationRegistry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RegistrationID;
		
		private string _沖銷原因;
		
		private System.Nullable<decimal> _沖銷信用狀金額;
		
		private System.Nullable<decimal> _匯率;
		
		private System.Nullable<decimal> _沖銷存入保證金金額;
		
		private string _撥款方式;
		
		private string _入戶帳號;
		
		private string _授信支援主管;
		
		private string _放款作業專員;
		
		private string _作業資訊組負責人;
		
		private System.Nullable<decimal> _手續費;
		
		private EntitySet<CreditCancellation> _CreditCancellation;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegistrationIDChanging(int value);
    partial void OnRegistrationIDChanged();
    partial void On沖銷原因Changing(string value);
    partial void On沖銷原因Changed();
    partial void On沖銷信用狀金額Changing(System.Nullable<decimal> value);
    partial void On沖銷信用狀金額Changed();
    partial void On匯率Changing(System.Nullable<decimal> value);
    partial void On匯率Changed();
    partial void On沖銷存入保證金金額Changing(System.Nullable<decimal> value);
    partial void On沖銷存入保證金金額Changed();
    partial void On撥款方式Changing(string value);
    partial void On撥款方式Changed();
    partial void On入戶帳號Changing(string value);
    partial void On入戶帳號Changed();
    partial void On授信支援主管Changing(string value);
    partial void On授信支援主管Changed();
    partial void On放款作業專員Changing(string value);
    partial void On放款作業專員Changed();
    partial void On作業資訊組負責人Changing(string value);
    partial void On作業資訊組負責人Changed();
    partial void On手續費Changing(System.Nullable<decimal> value);
    partial void On手續費Changed();
    #endregion
		
		public CancellationRegistry()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RegistrationID
		{
			get
			{
				return this._RegistrationID;
			}
			set
			{
				if ((this._RegistrationID != value))
				{
					this.OnRegistrationIDChanging(value);
					this.SendPropertyChanging();
					this._RegistrationID = value;
					this.SendPropertyChanged("RegistrationID");
					this.OnRegistrationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_沖銷原因", DbType="NVarChar(24) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string 沖銷原因
		{
			get
			{
				return this._沖銷原因;
			}
			set
			{
				if ((this._沖銷原因 != value))
				{
					this.On沖銷原因Changing(value);
					this.SendPropertyChanging();
					this._沖銷原因 = value;
					this.SendPropertyChanged("沖銷原因");
					this.On沖銷原因Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_沖銷信用狀金額", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<decimal> 沖銷信用狀金額
		{
			get
			{
				return this._沖銷信用狀金額;
			}
			set
			{
				if ((this._沖銷信用狀金額 != value))
				{
					this.On沖銷信用狀金額Changing(value);
					this.SendPropertyChanging();
					this._沖銷信用狀金額 = value;
					this.SendPropertyChanged("沖銷信用狀金額");
					this.On沖銷信用狀金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_匯率", DbType="Decimal(18,3)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<decimal> 匯率
		{
			get
			{
				return this._匯率;
			}
			set
			{
				if ((this._匯率 != value))
				{
					this.On匯率Changing(value);
					this.SendPropertyChanging();
					this._匯率 = value;
					this.SendPropertyChanged("匯率");
					this.On匯率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_沖銷存入保證金金額", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> 沖銷存入保證金金額
		{
			get
			{
				return this._沖銷存入保證金金額;
			}
			set
			{
				if ((this._沖銷存入保證金金額 != value))
				{
					this.On沖銷存入保證金金額Changing(value);
					this.SendPropertyChanging();
					this._沖銷存入保證金金額 = value;
					this.SendPropertyChanged("沖銷存入保證金金額");
					this.On沖銷存入保證金金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_撥款方式", DbType="NVarChar(12)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string 撥款方式
		{
			get
			{
				return this._撥款方式;
			}
			set
			{
				if ((this._撥款方式 != value))
				{
					this.On撥款方式Changing(value);
					this.SendPropertyChanging();
					this._撥款方式 = value;
					this.SendPropertyChanged("撥款方式");
					this.On撥款方式Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_入戶帳號", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string 入戶帳號
		{
			get
			{
				return this._入戶帳號;
			}
			set
			{
				if ((this._入戶帳號 != value))
				{
					this.On入戶帳號Changing(value);
					this.SendPropertyChanging();
					this._入戶帳號 = value;
					this.SendPropertyChanged("入戶帳號");
					this.On入戶帳號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_授信支援主管", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string 授信支援主管
		{
			get
			{
				return this._授信支援主管;
			}
			set
			{
				if ((this._授信支援主管 != value))
				{
					this.On授信支援主管Changing(value);
					this.SendPropertyChanging();
					this._授信支援主管 = value;
					this.SendPropertyChanged("授信支援主管");
					this.On授信支援主管Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_放款作業專員", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string 放款作業專員
		{
			get
			{
				return this._放款作業專員;
			}
			set
			{
				if ((this._放款作業專員 != value))
				{
					this.On放款作業專員Changing(value);
					this.SendPropertyChanging();
					this._放款作業專員 = value;
					this.SendPropertyChanged("放款作業專員");
					this.On放款作業專員Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_作業資訊組負責人", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string 作業資訊組負責人
		{
			get
			{
				return this._作業資訊組負責人;
			}
			set
			{
				if ((this._作業資訊組負責人 != value))
				{
					this.On作業資訊組負責人Changing(value);
					this.SendPropertyChanging();
					this._作業資訊組負責人 = value;
					this.SendPropertyChanged("作業資訊組負責人");
					this.On作業資訊組負責人Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_手續費", DbType="decimal(18, 0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<decimal> 手續費
		{
			get
			{
				return this._手續費;
			}
			set
			{
				if ((this._手續費 != value))
				{
					this.On手續費Changing(value);
					this.SendPropertyChanging();
					this._手續費 = value;
					this.SendPropertyChanged("手續費");
					this.On手續費Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CancellationRegistry_CreditCancellation", Storage="_CreditCancellation", ThisKey="RegistrationID", OtherKey="RegistrationID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<CreditCancellation> CreditCancellation
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditCancellation.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CreditCancellation;
			}
			set
			{
				this._CreditCancellation.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CreditCancellation(CreditCancellation entity)
		{
			this.SendPropertyChanging();
			entity.CancellationRegistry = this;
		}
		
		private void detach_CreditCancellation(CreditCancellation entity)
		{
			this.SendPropertyChanging();
			entity.CancellationRegistry = null;
		}
		
		private void Initialize()
		{
			this._CreditCancellation = new EntitySet<CreditCancellation>(new Action<CreditCancellation>(this.attach_CreditCancellation), new Action<CreditCancellation>(this.detach_CreditCancellation));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FpgLcMonthlySummary")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FpgLcMonthlySummary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportID;
		
		private int _Year;
		
		private int _Month;
		
		private int _Catalog;
		
		private string _BranchName;
		
		private string _ApplicantNo;
		
		private string _BeneficiaryNo;
		
		private string _ProductCategory;
		
		private int _RecordCount;
		
		private string _ApplicantName;
		
		private System.Nullable<decimal> _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportIDChanging(int value);
    partial void OnReportIDChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMonthChanging(int value);
    partial void OnMonthChanged();
    partial void OnCatalogChanging(int value);
    partial void OnCatalogChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnApplicantNoChanging(string value);
    partial void OnApplicantNoChanged();
    partial void OnBeneficiaryNoChanging(string value);
    partial void OnBeneficiaryNoChanged();
    partial void OnProductCategoryChanging(string value);
    partial void OnProductCategoryChanged();
    partial void OnRecordCountChanging(int value);
    partial void OnRecordCountChanged();
    partial void OnApplicantNameChanging(string value);
    partial void OnApplicantNameChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    #endregion
		
		public FpgLcMonthlySummary()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catalog", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Catalog
		{
			get
			{
				return this._Catalog;
			}
			set
			{
				if ((this._Catalog != value))
				{
					this.OnCatalogChanging(value);
					this.SendPropertyChanging();
					this._Catalog = value;
					this.SendPropertyChanged("Catalog");
					this.OnCatalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantNo", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string ApplicantNo
		{
			get
			{
				return this._ApplicantNo;
			}
			set
			{
				if ((this._ApplicantNo != value))
				{
					this.OnApplicantNoChanging(value);
					this.SendPropertyChanging();
					this._ApplicantNo = value;
					this.SendPropertyChanged("ApplicantNo");
					this.OnApplicantNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryNo", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string BeneficiaryNo
		{
			get
			{
				return this._BeneficiaryNo;
			}
			set
			{
				if ((this._BeneficiaryNo != value))
				{
					this.OnBeneficiaryNoChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryNo = value;
					this.SendPropertyChanged("BeneficiaryNo");
					this.OnBeneficiaryNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategory", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ProductCategory
		{
			get
			{
				return this._ProductCategory;
			}
			set
			{
				if ((this._ProductCategory != value))
				{
					this.OnProductCategoryChanging(value);
					this.SendPropertyChanging();
					this._ProductCategory = value;
					this.SendPropertyChanged("ProductCategory");
					this.OnProductCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordCount", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int RecordCount
		{
			get
			{
				return this._RecordCount;
			}
			set
			{
				if ((this._RecordCount != value))
				{
					this.OnRecordCountChanging(value);
					this.SendPropertyChanging();
					this._RecordCount = value;
					this.SendPropertyChanged("RecordCount");
					this.OnRecordCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string ApplicantName
		{
			get
			{
				return this._ApplicantName;
			}
			set
			{
				if ((this._ApplicantName != value))
				{
					this.OnApplicantNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicantName = value;
					this.SendPropertyChanged("ApplicantName");
					this.OnApplicantNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BeneficiaryTransferInto")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BeneficiaryTransferInto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _BeneID;
		
		private string _BankCode;
		
		private string _AccountNo;
		
		private System.Nullable<int> _Status;
		
		private EntityRef<BankData> _BankData;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnBeneIDChanging(int value);
    partial void OnBeneIDChanged();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public BeneficiaryTransferInto()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int BeneID
		{
			get
			{
				return this._BeneID;
			}
			set
			{
				if ((this._BeneID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBeneIDChanging(value);
					this.SendPropertyChanging();
					this._BeneID = value;
					this.SendPropertyChanged("BeneID");
					this.OnBeneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					if (this._BankData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_BeneficiaryTransferInto", Storage="_BankData", ThisKey="BankCode", OtherKey="BankCode", IsForeignKey=true)]
		public BankData BankData
		{
			get
			{
				return this._BankData.Entity;
			}
			set
			{
				BankData previousValue = this._BankData.Entity;
				if (((previousValue != value) 
							|| (this._BankData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankData.Entity = null;
						previousValue.BeneficiaryTransferInto.Remove(this);
					}
					this._BankData.Entity = value;
					if ((value != null))
					{
						value.BeneficiaryTransferInto.Add(this);
						this._BankCode = value.BankCode;
					}
					else
					{
						this._BankCode = default(string);
					}
					this.SendPropertyChanged("BankData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_BeneficiaryTransferInto", Storage="_Organization", ThisKey="BeneID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.BeneficiaryTransferInto.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.BeneficiaryTransferInto.Add(this);
						this._BeneID = value.CompanyID;
					}
					else
					{
						this._BeneID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BankData = default(EntityRef<BankData>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.L8600")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class L8600 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _L8600ID;
		
		private string _沖銷原因;
		
		private System.Nullable<decimal> _沖銷存入保證金金額;
		
		private System.Nullable<System.DateTime> _墊款日;
		
		private System.Nullable<decimal> _墊款利率;
		
		private System.Nullable<decimal> _墊款息金額;
		
		private string _違約金計收方式;
		
		private System.Nullable<decimal> _違約金金額;
		
		private string _現轉別;
		
		private string _扣款帳號;
		
		private System.Nullable<decimal> _票繳金額;
		
		private string _支票號碼;
		
		private string _出票人帳號;
		
		private string _不良債權處理原因1;
		
		private string _不良債權處理原因2;
		
		private string _不良債權處理原因3;
		
		private string _不良債權處理註記;
		
		private System.Nullable<decimal> _改貸手續費金額;
		
		private System.Nullable<decimal> _實收總金額;
		
		private string _付款行;
		
		private System.Nullable<int> _墊款流水號;
		
		private string _違約利率種類;
		
		private string _違約利率型態;
		
		private string _違約利率別;
		
		private System.Nullable<decimal> _違約牌告利率;
		
		private System.Nullable<decimal> _違約利率加減碼;
		
		private System.Nullable<decimal> _沖銷信用狀金額;
		
		private string _ACTNO;
		
		private EntitySet<Reimbursement> _Reimbursement;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnL8600IDChanging(int value);
    partial void OnL8600IDChanged();
    partial void On沖銷原因Changing(string value);
    partial void On沖銷原因Changed();
    partial void On沖銷存入保證金金額Changing(System.Nullable<decimal> value);
    partial void On沖銷存入保證金金額Changed();
    partial void On墊款日Changing(System.Nullable<System.DateTime> value);
    partial void On墊款日Changed();
    partial void On墊款利率Changing(System.Nullable<decimal> value);
    partial void On墊款利率Changed();
    partial void On墊款息金額Changing(System.Nullable<decimal> value);
    partial void On墊款息金額Changed();
    partial void On違約金計收方式Changing(string value);
    partial void On違約金計收方式Changed();
    partial void On違約金金額Changing(System.Nullable<decimal> value);
    partial void On違約金金額Changed();
    partial void On現轉別Changing(string value);
    partial void On現轉別Changed();
    partial void On扣款帳號Changing(string value);
    partial void On扣款帳號Changed();
    partial void On票繳金額Changing(System.Nullable<decimal> value);
    partial void On票繳金額Changed();
    partial void On支票號碼Changing(string value);
    partial void On支票號碼Changed();
    partial void On出票人帳號Changing(string value);
    partial void On出票人帳號Changed();
    partial void On不良債權處理原因1Changing(string value);
    partial void On不良債權處理原因1Changed();
    partial void On不良債權處理原因2Changing(string value);
    partial void On不良債權處理原因2Changed();
    partial void On不良債權處理原因3Changing(string value);
    partial void On不良債權處理原因3Changed();
    partial void On不良債權處理註記Changing(string value);
    partial void On不良債權處理註記Changed();
    partial void On改貸手續費金額Changing(System.Nullable<decimal> value);
    partial void On改貸手續費金額Changed();
    partial void On實收總金額Changing(System.Nullable<decimal> value);
    partial void On實收總金額Changed();
    partial void On付款行Changing(string value);
    partial void On付款行Changed();
    partial void On墊款流水號Changing(System.Nullable<int> value);
    partial void On墊款流水號Changed();
    partial void On違約利率種類Changing(string value);
    partial void On違約利率種類Changed();
    partial void On違約利率型態Changing(string value);
    partial void On違約利率型態Changed();
    partial void On違約利率別Changing(string value);
    partial void On違約利率別Changed();
    partial void On違約牌告利率Changing(System.Nullable<decimal> value);
    partial void On違約牌告利率Changed();
    partial void On違約利率加減碼Changing(System.Nullable<decimal> value);
    partial void On違約利率加減碼Changed();
    partial void On沖銷信用狀金額Changing(System.Nullable<decimal> value);
    partial void On沖銷信用狀金額Changed();
    partial void OnACTNOChanging(string value);
    partial void OnACTNOChanged();
    #endregion
		
		public L8600()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L8600ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int L8600ID
		{
			get
			{
				return this._L8600ID;
			}
			set
			{
				if ((this._L8600ID != value))
				{
					this.OnL8600IDChanging(value);
					this.SendPropertyChanging();
					this._L8600ID = value;
					this.SendPropertyChanged("L8600ID");
					this.OnL8600IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_沖銷原因", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string 沖銷原因
		{
			get
			{
				return this._沖銷原因;
			}
			set
			{
				if ((this._沖銷原因 != value))
				{
					this.On沖銷原因Changing(value);
					this.SendPropertyChanging();
					this._沖銷原因 = value;
					this.SendPropertyChanged("沖銷原因");
					this.On沖銷原因Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_沖銷存入保證金金額", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<decimal> 沖銷存入保證金金額
		{
			get
			{
				return this._沖銷存入保證金金額;
			}
			set
			{
				if ((this._沖銷存入保證金金額 != value))
				{
					this.On沖銷存入保證金金額Changing(value);
					this.SendPropertyChanging();
					this._沖銷存入保證金金額 = value;
					this.SendPropertyChanged("沖銷存入保證金金額");
					this.On沖銷存入保證金金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_墊款日", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> 墊款日
		{
			get
			{
				return this._墊款日;
			}
			set
			{
				if ((this._墊款日 != value))
				{
					this.On墊款日Changing(value);
					this.SendPropertyChanging();
					this._墊款日 = value;
					this.SendPropertyChanged("墊款日");
					this.On墊款日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_墊款利率", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> 墊款利率
		{
			get
			{
				return this._墊款利率;
			}
			set
			{
				if ((this._墊款利率 != value))
				{
					this.On墊款利率Changing(value);
					this.SendPropertyChanging();
					this._墊款利率 = value;
					this.SendPropertyChanged("墊款利率");
					this.On墊款利率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_墊款息金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<decimal> 墊款息金額
		{
			get
			{
				return this._墊款息金額;
			}
			set
			{
				if ((this._墊款息金額 != value))
				{
					this.On墊款息金額Changing(value);
					this.SendPropertyChanging();
					this._墊款息金額 = value;
					this.SendPropertyChanged("墊款息金額");
					this.On墊款息金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_違約金計收方式", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string 違約金計收方式
		{
			get
			{
				return this._違約金計收方式;
			}
			set
			{
				if ((this._違約金計收方式 != value))
				{
					this.On違約金計收方式Changing(value);
					this.SendPropertyChanging();
					this._違約金計收方式 = value;
					this.SendPropertyChanged("違約金計收方式");
					this.On違約金計收方式Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_違約金金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<decimal> 違約金金額
		{
			get
			{
				return this._違約金金額;
			}
			set
			{
				if ((this._違約金金額 != value))
				{
					this.On違約金金額Changing(value);
					this.SendPropertyChanging();
					this._違約金金額 = value;
					this.SendPropertyChanged("違約金金額");
					this.On違約金金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_現轉別", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string 現轉別
		{
			get
			{
				return this._現轉別;
			}
			set
			{
				if ((this._現轉別 != value))
				{
					this.On現轉別Changing(value);
					this.SendPropertyChanging();
					this._現轉別 = value;
					this.SendPropertyChanged("現轉別");
					this.On現轉別Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_扣款帳號", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string 扣款帳號
		{
			get
			{
				return this._扣款帳號;
			}
			set
			{
				if ((this._扣款帳號 != value))
				{
					this.On扣款帳號Changing(value);
					this.SendPropertyChanging();
					this._扣款帳號 = value;
					this.SendPropertyChanged("扣款帳號");
					this.On扣款帳號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_票繳金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<decimal> 票繳金額
		{
			get
			{
				return this._票繳金額;
			}
			set
			{
				if ((this._票繳金額 != value))
				{
					this.On票繳金額Changing(value);
					this.SendPropertyChanging();
					this._票繳金額 = value;
					this.SendPropertyChanged("票繳金額");
					this.On票繳金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_支票號碼", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string 支票號碼
		{
			get
			{
				return this._支票號碼;
			}
			set
			{
				if ((this._支票號碼 != value))
				{
					this.On支票號碼Changing(value);
					this.SendPropertyChanging();
					this._支票號碼 = value;
					this.SendPropertyChanged("支票號碼");
					this.On支票號碼Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_出票人帳號", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string 出票人帳號
		{
			get
			{
				return this._出票人帳號;
			}
			set
			{
				if ((this._出票人帳號 != value))
				{
					this.On出票人帳號Changing(value);
					this.SendPropertyChanging();
					this._出票人帳號 = value;
					this.SendPropertyChanged("出票人帳號");
					this.On出票人帳號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_不良債權處理原因1", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string 不良債權處理原因1
		{
			get
			{
				return this._不良債權處理原因1;
			}
			set
			{
				if ((this._不良債權處理原因1 != value))
				{
					this.On不良債權處理原因1Changing(value);
					this.SendPropertyChanging();
					this._不良債權處理原因1 = value;
					this.SendPropertyChanged("不良債權處理原因1");
					this.On不良債權處理原因1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_不良債權處理原因2", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string 不良債權處理原因2
		{
			get
			{
				return this._不良債權處理原因2;
			}
			set
			{
				if ((this._不良債權處理原因2 != value))
				{
					this.On不良債權處理原因2Changing(value);
					this.SendPropertyChanging();
					this._不良債權處理原因2 = value;
					this.SendPropertyChanged("不良債權處理原因2");
					this.On不良債權處理原因2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_不良債權處理原因3", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string 不良債權處理原因3
		{
			get
			{
				return this._不良債權處理原因3;
			}
			set
			{
				if ((this._不良債權處理原因3 != value))
				{
					this.On不良債權處理原因3Changing(value);
					this.SendPropertyChanging();
					this._不良債權處理原因3 = value;
					this.SendPropertyChanged("不良債權處理原因3");
					this.On不良債權處理原因3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_不良債權處理註記", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string 不良債權處理註記
		{
			get
			{
				return this._不良債權處理註記;
			}
			set
			{
				if ((this._不良債權處理註記 != value))
				{
					this.On不良債權處理註記Changing(value);
					this.SendPropertyChanging();
					this._不良債權處理註記 = value;
					this.SendPropertyChanged("不良債權處理註記");
					this.On不良債權處理註記Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_改貸手續費金額", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<decimal> 改貸手續費金額
		{
			get
			{
				return this._改貸手續費金額;
			}
			set
			{
				if ((this._改貸手續費金額 != value))
				{
					this.On改貸手續費金額Changing(value);
					this.SendPropertyChanging();
					this._改貸手續費金額 = value;
					this.SendPropertyChanged("改貸手續費金額");
					this.On改貸手續費金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_實收總金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<decimal> 實收總金額
		{
			get
			{
				return this._實收總金額;
			}
			set
			{
				if ((this._實收總金額 != value))
				{
					this.On實收總金額Changing(value);
					this.SendPropertyChanging();
					this._實收總金額 = value;
					this.SendPropertyChanged("實收總金額");
					this.On實收總金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_付款行", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string 付款行
		{
			get
			{
				return this._付款行;
			}
			set
			{
				if ((this._付款行 != value))
				{
					this.On付款行Changing(value);
					this.SendPropertyChanging();
					this._付款行 = value;
					this.SendPropertyChanged("付款行");
					this.On付款行Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_墊款流水號", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<int> 墊款流水號
		{
			get
			{
				return this._墊款流水號;
			}
			set
			{
				if ((this._墊款流水號 != value))
				{
					this.On墊款流水號Changing(value);
					this.SendPropertyChanging();
					this._墊款流水號 = value;
					this.SendPropertyChanged("墊款流水號");
					this.On墊款流水號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_違約利率種類", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string 違約利率種類
		{
			get
			{
				return this._違約利率種類;
			}
			set
			{
				if ((this._違約利率種類 != value))
				{
					this.On違約利率種類Changing(value);
					this.SendPropertyChanging();
					this._違約利率種類 = value;
					this.SendPropertyChanged("違約利率種類");
					this.On違約利率種類Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_違約利率型態", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string 違約利率型態
		{
			get
			{
				return this._違約利率型態;
			}
			set
			{
				if ((this._違約利率型態 != value))
				{
					this.On違約利率型態Changing(value);
					this.SendPropertyChanging();
					this._違約利率型態 = value;
					this.SendPropertyChanged("違約利率型態");
					this.On違約利率型態Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_違約利率別", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string 違約利率別
		{
			get
			{
				return this._違約利率別;
			}
			set
			{
				if ((this._違約利率別 != value))
				{
					this.On違約利率別Changing(value);
					this.SendPropertyChanging();
					this._違約利率別 = value;
					this.SendPropertyChanged("違約利率別");
					this.On違約利率別Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_違約牌告利率", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<decimal> 違約牌告利率
		{
			get
			{
				return this._違約牌告利率;
			}
			set
			{
				if ((this._違約牌告利率 != value))
				{
					this.On違約牌告利率Changing(value);
					this.SendPropertyChanging();
					this._違約牌告利率 = value;
					this.SendPropertyChanged("違約牌告利率");
					this.On違約牌告利率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_違約利率加減碼", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public System.Nullable<decimal> 違約利率加減碼
		{
			get
			{
				return this._違約利率加減碼;
			}
			set
			{
				if ((this._違約利率加減碼 != value))
				{
					this.On違約利率加減碼Changing(value);
					this.SendPropertyChanging();
					this._違約利率加減碼 = value;
					this.SendPropertyChanged("違約利率加減碼");
					this.On違約利率加減碼Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_沖銷信用狀金額", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<decimal> 沖銷信用狀金額
		{
			get
			{
				return this._沖銷信用狀金額;
			}
			set
			{
				if ((this._沖銷信用狀金額 != value))
				{
					this.On沖銷信用狀金額Changing(value);
					this.SendPropertyChanging();
					this._沖銷信用狀金額 = value;
					this.SendPropertyChanged("沖銷信用狀金額");
					this.On沖銷信用狀金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTNO", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public string ACTNO
		{
			get
			{
				return this._ACTNO;
			}
			set
			{
				if ((this._ACTNO != value))
				{
					this.OnACTNOChanging(value);
					this.SendPropertyChanging();
					this._ACTNO = value;
					this.SendPropertyChanged("ACTNO");
					this.OnACTNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="L8600_Reimbursement", Storage="_Reimbursement", ThisKey="L8600ID", OtherKey="L8600ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public EntitySet<Reimbursement> Reimbursement
		{
			get
			{
				if ((this.serializing 
							&& (this._Reimbursement.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Reimbursement;
			}
			set
			{
				this._Reimbursement.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reimbursement(Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.L8600 = this;
		}
		
		private void detach_Reimbursement(Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.L8600 = null;
		}
		
		private void Initialize()
		{
			this._Reimbursement = new EntitySet<Reimbursement>(new Action<Reimbursement>(this.attach_Reimbursement), new Action<Reimbursement>(this.detach_Reimbursement));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.L4600")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class L4600 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _L4600ID;
		
		private System.Nullable<decimal> _還款金額;
		
		private System.Nullable<decimal> _抵存入保證金金額;
		
		private System.Nullable<decimal> _墊款利率;
		
		private System.Nullable<decimal> _墊款息金額;
		
		private string _違約金計收方式;
		
		private System.Nullable<decimal> _違約金金額;
		
		private string _現轉別;
		
		private string _扣款帳號;
		
		private string _匯票號碼;
		
		private string _還款原因;
		
		private System.Nullable<decimal> _票繳金額;
		
		private string _支票號碼;
		
		private string _出票人帳號;
		
		private string _不良債權處理原因1;
		
		private string _不良債權處理原因2;
		
		private string _不良債權處理原因3;
		
		private string _不良債權處理註記;
		
		private string _ACTNO;
		
		private EntitySet<Reimbursement> _Reimbursement;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnL4600IDChanging(int value);
    partial void OnL4600IDChanged();
    partial void On還款金額Changing(System.Nullable<decimal> value);
    partial void On還款金額Changed();
    partial void On抵存入保證金金額Changing(System.Nullable<decimal> value);
    partial void On抵存入保證金金額Changed();
    partial void On墊款利率Changing(System.Nullable<decimal> value);
    partial void On墊款利率Changed();
    partial void On墊款息金額Changing(System.Nullable<decimal> value);
    partial void On墊款息金額Changed();
    partial void On違約金計收方式Changing(string value);
    partial void On違約金計收方式Changed();
    partial void On違約金金額Changing(System.Nullable<decimal> value);
    partial void On違約金金額Changed();
    partial void On現轉別Changing(string value);
    partial void On現轉別Changed();
    partial void On扣款帳號Changing(string value);
    partial void On扣款帳號Changed();
    partial void On匯票號碼Changing(string value);
    partial void On匯票號碼Changed();
    partial void On還款原因Changing(string value);
    partial void On還款原因Changed();
    partial void On票繳金額Changing(System.Nullable<decimal> value);
    partial void On票繳金額Changed();
    partial void On支票號碼Changing(string value);
    partial void On支票號碼Changed();
    partial void On出票人帳號Changing(string value);
    partial void On出票人帳號Changed();
    partial void On不良債權處理原因1Changing(string value);
    partial void On不良債權處理原因1Changed();
    partial void On不良債權處理原因2Changing(string value);
    partial void On不良債權處理原因2Changed();
    partial void On不良債權處理原因3Changing(string value);
    partial void On不良債權處理原因3Changed();
    partial void On不良債權處理註記Changing(string value);
    partial void On不良債權處理註記Changed();
    partial void OnACTNOChanging(string value);
    partial void OnACTNOChanged();
    #endregion
		
		public L4600()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L4600ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int L4600ID
		{
			get
			{
				return this._L4600ID;
			}
			set
			{
				if ((this._L4600ID != value))
				{
					this.OnL4600IDChanging(value);
					this.SendPropertyChanging();
					this._L4600ID = value;
					this.SendPropertyChanged("L4600ID");
					this.OnL4600IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_還款金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<decimal> 還款金額
		{
			get
			{
				return this._還款金額;
			}
			set
			{
				if ((this._還款金額 != value))
				{
					this.On還款金額Changing(value);
					this.SendPropertyChanging();
					this._還款金額 = value;
					this.SendPropertyChanged("還款金額");
					this.On還款金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_抵存入保證金金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<decimal> 抵存入保證金金額
		{
			get
			{
				return this._抵存入保證金金額;
			}
			set
			{
				if ((this._抵存入保證金金額 != value))
				{
					this.On抵存入保證金金額Changing(value);
					this.SendPropertyChanging();
					this._抵存入保證金金額 = value;
					this.SendPropertyChanged("抵存入保證金金額");
					this.On抵存入保證金金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_墊款利率", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<decimal> 墊款利率
		{
			get
			{
				return this._墊款利率;
			}
			set
			{
				if ((this._墊款利率 != value))
				{
					this.On墊款利率Changing(value);
					this.SendPropertyChanging();
					this._墊款利率 = value;
					this.SendPropertyChanged("墊款利率");
					this.On墊款利率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_墊款息金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> 墊款息金額
		{
			get
			{
				return this._墊款息金額;
			}
			set
			{
				if ((this._墊款息金額 != value))
				{
					this.On墊款息金額Changing(value);
					this.SendPropertyChanging();
					this._墊款息金額 = value;
					this.SendPropertyChanged("墊款息金額");
					this.On墊款息金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_違約金計收方式", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string 違約金計收方式
		{
			get
			{
				return this._違約金計收方式;
			}
			set
			{
				if ((this._違約金計收方式 != value))
				{
					this.On違約金計收方式Changing(value);
					this.SendPropertyChanging();
					this._違約金計收方式 = value;
					this.SendPropertyChanged("違約金計收方式");
					this.On違約金計收方式Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_違約金金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<decimal> 違約金金額
		{
			get
			{
				return this._違約金金額;
			}
			set
			{
				if ((this._違約金金額 != value))
				{
					this.On違約金金額Changing(value);
					this.SendPropertyChanging();
					this._違約金金額 = value;
					this.SendPropertyChanged("違約金金額");
					this.On違約金金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_現轉別", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string 現轉別
		{
			get
			{
				return this._現轉別;
			}
			set
			{
				if ((this._現轉別 != value))
				{
					this.On現轉別Changing(value);
					this.SendPropertyChanging();
					this._現轉別 = value;
					this.SendPropertyChanged("現轉別");
					this.On現轉別Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_扣款帳號", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string 扣款帳號
		{
			get
			{
				return this._扣款帳號;
			}
			set
			{
				if ((this._扣款帳號 != value))
				{
					this.On扣款帳號Changing(value);
					this.SendPropertyChanging();
					this._扣款帳號 = value;
					this.SendPropertyChanged("扣款帳號");
					this.On扣款帳號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_匯票號碼", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string 匯票號碼
		{
			get
			{
				return this._匯票號碼;
			}
			set
			{
				if ((this._匯票號碼 != value))
				{
					this.On匯票號碼Changing(value);
					this.SendPropertyChanging();
					this._匯票號碼 = value;
					this.SendPropertyChanged("匯票號碼");
					this.On匯票號碼Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_還款原因", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string 還款原因
		{
			get
			{
				return this._還款原因;
			}
			set
			{
				if ((this._還款原因 != value))
				{
					this.On還款原因Changing(value);
					this.SendPropertyChanging();
					this._還款原因 = value;
					this.SendPropertyChanged("還款原因");
					this.On還款原因Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_票繳金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<decimal> 票繳金額
		{
			get
			{
				return this._票繳金額;
			}
			set
			{
				if ((this._票繳金額 != value))
				{
					this.On票繳金額Changing(value);
					this.SendPropertyChanging();
					this._票繳金額 = value;
					this.SendPropertyChanged("票繳金額");
					this.On票繳金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_支票號碼", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string 支票號碼
		{
			get
			{
				return this._支票號碼;
			}
			set
			{
				if ((this._支票號碼 != value))
				{
					this.On支票號碼Changing(value);
					this.SendPropertyChanging();
					this._支票號碼 = value;
					this.SendPropertyChanged("支票號碼");
					this.On支票號碼Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_出票人帳號", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string 出票人帳號
		{
			get
			{
				return this._出票人帳號;
			}
			set
			{
				if ((this._出票人帳號 != value))
				{
					this.On出票人帳號Changing(value);
					this.SendPropertyChanging();
					this._出票人帳號 = value;
					this.SendPropertyChanged("出票人帳號");
					this.On出票人帳號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_不良債權處理原因1", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string 不良債權處理原因1
		{
			get
			{
				return this._不良債權處理原因1;
			}
			set
			{
				if ((this._不良債權處理原因1 != value))
				{
					this.On不良債權處理原因1Changing(value);
					this.SendPropertyChanging();
					this._不良債權處理原因1 = value;
					this.SendPropertyChanged("不良債權處理原因1");
					this.On不良債權處理原因1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_不良債權處理原因2", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string 不良債權處理原因2
		{
			get
			{
				return this._不良債權處理原因2;
			}
			set
			{
				if ((this._不良債權處理原因2 != value))
				{
					this.On不良債權處理原因2Changing(value);
					this.SendPropertyChanging();
					this._不良債權處理原因2 = value;
					this.SendPropertyChanged("不良債權處理原因2");
					this.On不良債權處理原因2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_不良債權處理原因3", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string 不良債權處理原因3
		{
			get
			{
				return this._不良債權處理原因3;
			}
			set
			{
				if ((this._不良債權處理原因3 != value))
				{
					this.On不良債權處理原因3Changing(value);
					this.SendPropertyChanging();
					this._不良債權處理原因3 = value;
					this.SendPropertyChanged("不良債權處理原因3");
					this.On不良債權處理原因3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_不良債權處理註記", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string 不良債權處理註記
		{
			get
			{
				return this._不良債權處理註記;
			}
			set
			{
				if ((this._不良債權處理註記 != value))
				{
					this.On不良債權處理註記Changing(value);
					this.SendPropertyChanging();
					this._不良債權處理註記 = value;
					this.SendPropertyChanged("不良債權處理註記");
					this.On不良債權處理註記Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTNO", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string ACTNO
		{
			get
			{
				return this._ACTNO;
			}
			set
			{
				if ((this._ACTNO != value))
				{
					this.OnACTNOChanging(value);
					this.SendPropertyChanging();
					this._ACTNO = value;
					this.SendPropertyChanged("ACTNO");
					this.OnACTNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="L4600_Reimbursement", Storage="_Reimbursement", ThisKey="L4600ID", OtherKey="L4600ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<Reimbursement> Reimbursement
		{
			get
			{
				if ((this.serializing 
							&& (this._Reimbursement.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Reimbursement;
			}
			set
			{
				this._Reimbursement.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reimbursement(Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.L4600 = this;
		}
		
		private void detach_Reimbursement(Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.L4600 = null;
		}
		
		private void Initialize()
		{
			this._Reimbursement = new EntitySet<Reimbursement>(new Action<Reimbursement>(this.attach_Reimbursement), new Action<Reimbursement>(this.detach_Reimbursement));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.L4700")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class L4700 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _L4700ID;
		
		private System.Nullable<decimal> _承兌金額;
		
		private System.Nullable<int> _幣別;
		
		private string _撥款方式;
		
		private string _入戶帳號;
		
		private string _匯票號碼;
		
		private System.Nullable<System.DateTime> _墊款日;
		
		private string _利率種類;
		
		private string _利率型態;
		
		private System.Nullable<decimal> _墊款利率;
		
		private System.Nullable<decimal> _加減碼;
		
		private string _利率別;
		
		private System.Nullable<decimal> _承作利率;
		
		private string _ACTNO;
		
		private EntitySet<NegoDraftAcceptance> _NegoDraftAcceptance;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnL4700IDChanging(int value);
    partial void OnL4700IDChanged();
    partial void On承兌金額Changing(System.Nullable<decimal> value);
    partial void On承兌金額Changed();
    partial void On幣別Changing(System.Nullable<int> value);
    partial void On幣別Changed();
    partial void On撥款方式Changing(string value);
    partial void On撥款方式Changed();
    partial void On入戶帳號Changing(string value);
    partial void On入戶帳號Changed();
    partial void On匯票號碼Changing(string value);
    partial void On匯票號碼Changed();
    partial void On墊款日Changing(System.Nullable<System.DateTime> value);
    partial void On墊款日Changed();
    partial void On利率種類Changing(string value);
    partial void On利率種類Changed();
    partial void On利率型態Changing(string value);
    partial void On利率型態Changed();
    partial void On墊款利率Changing(System.Nullable<decimal> value);
    partial void On墊款利率Changed();
    partial void On加減碼Changing(System.Nullable<decimal> value);
    partial void On加減碼Changed();
    partial void On利率別Changing(string value);
    partial void On利率別Changed();
    partial void On承作利率Changing(System.Nullable<decimal> value);
    partial void On承作利率Changed();
    partial void OnACTNOChanging(string value);
    partial void OnACTNOChanged();
    #endregion
		
		public L4700()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L4700ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int L4700ID
		{
			get
			{
				return this._L4700ID;
			}
			set
			{
				if ((this._L4700ID != value))
				{
					this.OnL4700IDChanging(value);
					this.SendPropertyChanging();
					this._L4700ID = value;
					this.SendPropertyChanged("L4700ID");
					this.OnL4700IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_承兌金額", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<decimal> 承兌金額
		{
			get
			{
				return this._承兌金額;
			}
			set
			{
				if ((this._承兌金額 != value))
				{
					this.On承兌金額Changing(value);
					this.SendPropertyChanging();
					this._承兌金額 = value;
					this.SendPropertyChanged("承兌金額");
					this.On承兌金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_幣別", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> 幣別
		{
			get
			{
				return this._幣別;
			}
			set
			{
				if ((this._幣別 != value))
				{
					this.On幣別Changing(value);
					this.SendPropertyChanging();
					this._幣別 = value;
					this.SendPropertyChanged("幣別");
					this.On幣別Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_撥款方式", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string 撥款方式
		{
			get
			{
				return this._撥款方式;
			}
			set
			{
				if ((this._撥款方式 != value))
				{
					this.On撥款方式Changing(value);
					this.SendPropertyChanging();
					this._撥款方式 = value;
					this.SendPropertyChanged("撥款方式");
					this.On撥款方式Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_入戶帳號", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string 入戶帳號
		{
			get
			{
				return this._入戶帳號;
			}
			set
			{
				if ((this._入戶帳號 != value))
				{
					this.On入戶帳號Changing(value);
					this.SendPropertyChanging();
					this._入戶帳號 = value;
					this.SendPropertyChanged("入戶帳號");
					this.On入戶帳號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_匯票號碼", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string 匯票號碼
		{
			get
			{
				return this._匯票號碼;
			}
			set
			{
				if ((this._匯票號碼 != value))
				{
					this.On匯票號碼Changing(value);
					this.SendPropertyChanging();
					this._匯票號碼 = value;
					this.SendPropertyChanged("匯票號碼");
					this.On匯票號碼Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_墊款日", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> 墊款日
		{
			get
			{
				return this._墊款日;
			}
			set
			{
				if ((this._墊款日 != value))
				{
					this.On墊款日Changing(value);
					this.SendPropertyChanging();
					this._墊款日 = value;
					this.SendPropertyChanged("墊款日");
					this.On墊款日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_利率種類", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string 利率種類
		{
			get
			{
				return this._利率種類;
			}
			set
			{
				if ((this._利率種類 != value))
				{
					this.On利率種類Changing(value);
					this.SendPropertyChanging();
					this._利率種類 = value;
					this.SendPropertyChanged("利率種類");
					this.On利率種類Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_利率型態", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string 利率型態
		{
			get
			{
				return this._利率型態;
			}
			set
			{
				if ((this._利率型態 != value))
				{
					this.On利率型態Changing(value);
					this.SendPropertyChanging();
					this._利率型態 = value;
					this.SendPropertyChanged("利率型態");
					this.On利率型態Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_墊款利率", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<decimal> 墊款利率
		{
			get
			{
				return this._墊款利率;
			}
			set
			{
				if ((this._墊款利率 != value))
				{
					this.On墊款利率Changing(value);
					this.SendPropertyChanging();
					this._墊款利率 = value;
					this.SendPropertyChanged("墊款利率");
					this.On墊款利率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_加減碼", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<decimal> 加減碼
		{
			get
			{
				return this._加減碼;
			}
			set
			{
				if ((this._加減碼 != value))
				{
					this.On加減碼Changing(value);
					this.SendPropertyChanging();
					this._加減碼 = value;
					this.SendPropertyChanged("加減碼");
					this.On加減碼Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_利率別", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string 利率別
		{
			get
			{
				return this._利率別;
			}
			set
			{
				if ((this._利率別 != value))
				{
					this.On利率別Changing(value);
					this.SendPropertyChanging();
					this._利率別 = value;
					this.SendPropertyChanged("利率別");
					this.On利率別Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_承作利率", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<decimal> 承作利率
		{
			get
			{
				return this._承作利率;
			}
			set
			{
				if ((this._承作利率 != value))
				{
					this.On承作利率Changing(value);
					this.SendPropertyChanging();
					this._承作利率 = value;
					this.SendPropertyChanged("承作利率");
					this.On承作利率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTNO", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string ACTNO
		{
			get
			{
				return this._ACTNO;
			}
			set
			{
				if ((this._ACTNO != value))
				{
					this.OnACTNOChanging(value);
					this.SendPropertyChanging();
					this._ACTNO = value;
					this.SendPropertyChanged("ACTNO");
					this.OnACTNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="L4700_NegoDraftAcceptance", Storage="_NegoDraftAcceptance", ThisKey="L4700ID", OtherKey="L4700ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<NegoDraftAcceptance> NegoDraftAcceptance
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoDraftAcceptance.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoDraftAcceptance;
			}
			set
			{
				this._NegoDraftAcceptance.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NegoDraftAcceptance(NegoDraftAcceptance entity)
		{
			this.SendPropertyChanging();
			entity.L4700 = this;
		}
		
		private void detach_NegoDraftAcceptance(NegoDraftAcceptance entity)
		{
			this.SendPropertyChanging();
			entity.L4700 = null;
		}
		
		private void Initialize()
		{
			this._NegoDraftAcceptance = new EntitySet<NegoDraftAcceptance>(new Action<NegoDraftAcceptance>(this.attach_NegoDraftAcceptance), new Action<NegoDraftAcceptance>(this.detach_NegoDraftAcceptance));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.L1000")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class L1000 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _L1000ID;
		
		private string _會計科目;
		
		private string _會計子目;
		
		private System.Nullable<int> _幣別;
		
		private System.Nullable<decimal> _最後一期還本比率;
		
		private System.Nullable<int> _繳息週期月;
		
		private System.Nullable<int> _繳息週期週;
		
		private string _利率種類;
		
		private string _利率型態;
		
		private string _利率別;
		
		private System.Nullable<decimal> _加減碼;
		
		private System.Nullable<decimal> _承作利率;
		
		private System.Nullable<decimal> _違約利率;
		
		private string _利率調整生效方式;
		
		private string _計息週期單位;
		
		private string _是否重算期金;
		
		private System.Nullable<int> _還本週期月;
		
		private System.Nullable<int> _還本週期週;
		
		private System.Nullable<int> _調整利率週期;
		
		private System.Nullable<int> _指定繳息日;
		
		private System.Nullable<int> _繳息寬限期;
		
		private System.Nullable<int> _寬限期;
		
		private System.Nullable<System.DateTime> _下次攤還日;
		
		private string _自動扣繳記號;
		
		private string _自動扣繳帳號;
		
		private string _貸放型態;
		
		private string _備註;
		
		private System.Nullable<int> _專案年度;
		
		private string _聯貸記號;
		
		private string _聯貸編號;
		
		private string _送信保對應帳支號;
		
		private System.Nullable<decimal> _帳戶管理費;
		
		private string _ACTNO;
		
		private System.Nullable<decimal> _利率下限;
		
		private string _帳戶性質;
		
		private string _CreditNo;
		
		private EntitySet<CreditInsuranceLoan> _CreditInsuranceLoans;
		
		private EntitySet<NegoLoan> _NegoLoan;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnL1000IDChanging(int value);
    partial void OnL1000IDChanged();
    partial void On會計科目Changing(string value);
    partial void On會計科目Changed();
    partial void On會計子目Changing(string value);
    partial void On會計子目Changed();
    partial void On幣別Changing(System.Nullable<int> value);
    partial void On幣別Changed();
    partial void On最後一期還本比率Changing(System.Nullable<decimal> value);
    partial void On最後一期還本比率Changed();
    partial void On繳息週期月Changing(System.Nullable<int> value);
    partial void On繳息週期月Changed();
    partial void On繳息週期週Changing(System.Nullable<int> value);
    partial void On繳息週期週Changed();
    partial void On利率種類Changing(string value);
    partial void On利率種類Changed();
    partial void On利率型態Changing(string value);
    partial void On利率型態Changed();
    partial void On利率別Changing(string value);
    partial void On利率別Changed();
    partial void On加減碼Changing(System.Nullable<decimal> value);
    partial void On加減碼Changed();
    partial void On承作利率Changing(System.Nullable<decimal> value);
    partial void On承作利率Changed();
    partial void On違約利率Changing(System.Nullable<decimal> value);
    partial void On違約利率Changed();
    partial void On利率調整生效方式Changing(string value);
    partial void On利率調整生效方式Changed();
    partial void On計息週期單位Changing(string value);
    partial void On計息週期單位Changed();
    partial void On是否重算期金Changing(string value);
    partial void On是否重算期金Changed();
    partial void On還本週期月Changing(System.Nullable<int> value);
    partial void On還本週期月Changed();
    partial void On還本週期週Changing(System.Nullable<int> value);
    partial void On還本週期週Changed();
    partial void On調整利率週期Changing(System.Nullable<int> value);
    partial void On調整利率週期Changed();
    partial void On指定繳息日Changing(System.Nullable<int> value);
    partial void On指定繳息日Changed();
    partial void On繳息寬限期Changing(System.Nullable<int> value);
    partial void On繳息寬限期Changed();
    partial void On寬限期Changing(System.Nullable<int> value);
    partial void On寬限期Changed();
    partial void On下次攤還日Changing(System.Nullable<System.DateTime> value);
    partial void On下次攤還日Changed();
    partial void On自動扣繳記號Changing(string value);
    partial void On自動扣繳記號Changed();
    partial void On自動扣繳帳號Changing(string value);
    partial void On自動扣繳帳號Changed();
    partial void On貸放型態Changing(string value);
    partial void On貸放型態Changed();
    partial void On備註Changing(string value);
    partial void On備註Changed();
    partial void On專案年度Changing(System.Nullable<int> value);
    partial void On專案年度Changed();
    partial void On聯貸記號Changing(string value);
    partial void On聯貸記號Changed();
    partial void On聯貸編號Changing(string value);
    partial void On聯貸編號Changed();
    partial void On送信保對應帳支號Changing(string value);
    partial void On送信保對應帳支號Changed();
    partial void On帳戶管理費Changing(System.Nullable<decimal> value);
    partial void On帳戶管理費Changed();
    partial void OnACTNOChanging(string value);
    partial void OnACTNOChanged();
    partial void On利率下限Changing(System.Nullable<decimal> value);
    partial void On利率下限Changed();
    partial void On帳戶性質Changing(string value);
    partial void On帳戶性質Changed();
    partial void OnCreditNoChanging(string value);
    partial void OnCreditNoChanged();
    #endregion
		
		public L1000()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1000ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int L1000ID
		{
			get
			{
				return this._L1000ID;
			}
			set
			{
				if ((this._L1000ID != value))
				{
					this.OnL1000IDChanging(value);
					this.SendPropertyChanging();
					this._L1000ID = value;
					this.SendPropertyChanged("L1000ID");
					this.OnL1000IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_會計科目", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string 會計科目
		{
			get
			{
				return this._會計科目;
			}
			set
			{
				if ((this._會計科目 != value))
				{
					this.On會計科目Changing(value);
					this.SendPropertyChanging();
					this._會計科目 = value;
					this.SendPropertyChanged("會計科目");
					this.On會計科目Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_會計子目", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string 會計子目
		{
			get
			{
				return this._會計子目;
			}
			set
			{
				if ((this._會計子目 != value))
				{
					this.On會計子目Changing(value);
					this.SendPropertyChanging();
					this._會計子目 = value;
					this.SendPropertyChanged("會計子目");
					this.On會計子目Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_幣別", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> 幣別
		{
			get
			{
				return this._幣別;
			}
			set
			{
				if ((this._幣別 != value))
				{
					this.On幣別Changing(value);
					this.SendPropertyChanging();
					this._幣別 = value;
					this.SendPropertyChanged("幣別");
					this.On幣別Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_最後一期還本比率", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> 最後一期還本比率
		{
			get
			{
				return this._最後一期還本比率;
			}
			set
			{
				if ((this._最後一期還本比率 != value))
				{
					this.On最後一期還本比率Changing(value);
					this.SendPropertyChanging();
					this._最後一期還本比率 = value;
					this.SendPropertyChanged("最後一期還本比率");
					this.On最後一期還本比率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_繳息週期月", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> 繳息週期月
		{
			get
			{
				return this._繳息週期月;
			}
			set
			{
				if ((this._繳息週期月 != value))
				{
					this.On繳息週期月Changing(value);
					this.SendPropertyChanging();
					this._繳息週期月 = value;
					this.SendPropertyChanged("繳息週期月");
					this.On繳息週期月Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_繳息週期週", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> 繳息週期週
		{
			get
			{
				return this._繳息週期週;
			}
			set
			{
				if ((this._繳息週期週 != value))
				{
					this.On繳息週期週Changing(value);
					this.SendPropertyChanging();
					this._繳息週期週 = value;
					this.SendPropertyChanged("繳息週期週");
					this.On繳息週期週Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_利率種類", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string 利率種類
		{
			get
			{
				return this._利率種類;
			}
			set
			{
				if ((this._利率種類 != value))
				{
					this.On利率種類Changing(value);
					this.SendPropertyChanging();
					this._利率種類 = value;
					this.SendPropertyChanged("利率種類");
					this.On利率種類Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_利率型態", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string 利率型態
		{
			get
			{
				return this._利率型態;
			}
			set
			{
				if ((this._利率型態 != value))
				{
					this.On利率型態Changing(value);
					this.SendPropertyChanging();
					this._利率型態 = value;
					this.SendPropertyChanged("利率型態");
					this.On利率型態Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_利率別", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string 利率別
		{
			get
			{
				return this._利率別;
			}
			set
			{
				if ((this._利率別 != value))
				{
					this.On利率別Changing(value);
					this.SendPropertyChanging();
					this._利率別 = value;
					this.SendPropertyChanged("利率別");
					this.On利率別Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_加減碼", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<decimal> 加減碼
		{
			get
			{
				return this._加減碼;
			}
			set
			{
				if ((this._加減碼 != value))
				{
					this.On加減碼Changing(value);
					this.SendPropertyChanging();
					this._加減碼 = value;
					this.SendPropertyChanged("加減碼");
					this.On加減碼Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_承作利率", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<decimal> 承作利率
		{
			get
			{
				return this._承作利率;
			}
			set
			{
				if ((this._承作利率 != value))
				{
					this.On承作利率Changing(value);
					this.SendPropertyChanging();
					this._承作利率 = value;
					this.SendPropertyChanged("承作利率");
					this.On承作利率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_違約利率", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<decimal> 違約利率
		{
			get
			{
				return this._違約利率;
			}
			set
			{
				if ((this._違約利率 != value))
				{
					this.On違約利率Changing(value);
					this.SendPropertyChanging();
					this._違約利率 = value;
					this.SendPropertyChanged("違約利率");
					this.On違約利率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_利率調整生效方式", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string 利率調整生效方式
		{
			get
			{
				return this._利率調整生效方式;
			}
			set
			{
				if ((this._利率調整生效方式 != value))
				{
					this.On利率調整生效方式Changing(value);
					this.SendPropertyChanging();
					this._利率調整生效方式 = value;
					this.SendPropertyChanged("利率調整生效方式");
					this.On利率調整生效方式Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_計息週期單位", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string 計息週期單位
		{
			get
			{
				return this._計息週期單位;
			}
			set
			{
				if ((this._計息週期單位 != value))
				{
					this.On計息週期單位Changing(value);
					this.SendPropertyChanging();
					this._計息週期單位 = value;
					this.SendPropertyChanged("計息週期單位");
					this.On計息週期單位Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_是否重算期金", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string 是否重算期金
		{
			get
			{
				return this._是否重算期金;
			}
			set
			{
				if ((this._是否重算期金 != value))
				{
					this.On是否重算期金Changing(value);
					this.SendPropertyChanging();
					this._是否重算期金 = value;
					this.SendPropertyChanged("是否重算期金");
					this.On是否重算期金Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_還本週期月", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<int> 還本週期月
		{
			get
			{
				return this._還本週期月;
			}
			set
			{
				if ((this._還本週期月 != value))
				{
					this.On還本週期月Changing(value);
					this.SendPropertyChanging();
					this._還本週期月 = value;
					this.SendPropertyChanged("還本週期月");
					this.On還本週期月Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_還本週期週", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> 還本週期週
		{
			get
			{
				return this._還本週期週;
			}
			set
			{
				if ((this._還本週期週 != value))
				{
					this.On還本週期週Changing(value);
					this.SendPropertyChanging();
					this._還本週期週 = value;
					this.SendPropertyChanged("還本週期週");
					this.On還本週期週Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_調整利率週期", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> 調整利率週期
		{
			get
			{
				return this._調整利率週期;
			}
			set
			{
				if ((this._調整利率週期 != value))
				{
					this.On調整利率週期Changing(value);
					this.SendPropertyChanging();
					this._調整利率週期 = value;
					this.SendPropertyChanged("調整利率週期");
					this.On調整利率週期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_指定繳息日", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> 指定繳息日
		{
			get
			{
				return this._指定繳息日;
			}
			set
			{
				if ((this._指定繳息日 != value))
				{
					this.On指定繳息日Changing(value);
					this.SendPropertyChanging();
					this._指定繳息日 = value;
					this.SendPropertyChanged("指定繳息日");
					this.On指定繳息日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_繳息寬限期", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<int> 繳息寬限期
		{
			get
			{
				return this._繳息寬限期;
			}
			set
			{
				if ((this._繳息寬限期 != value))
				{
					this.On繳息寬限期Changing(value);
					this.SendPropertyChanging();
					this._繳息寬限期 = value;
					this.SendPropertyChanged("繳息寬限期");
					this.On繳息寬限期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_寬限期", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<int> 寬限期
		{
			get
			{
				return this._寬限期;
			}
			set
			{
				if ((this._寬限期 != value))
				{
					this.On寬限期Changing(value);
					this.SendPropertyChanging();
					this._寬限期 = value;
					this.SendPropertyChanged("寬限期");
					this.On寬限期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_下次攤還日", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<System.DateTime> 下次攤還日
		{
			get
			{
				return this._下次攤還日;
			}
			set
			{
				if ((this._下次攤還日 != value))
				{
					this.On下次攤還日Changing(value);
					this.SendPropertyChanging();
					this._下次攤還日 = value;
					this.SendPropertyChanged("下次攤還日");
					this.On下次攤還日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_自動扣繳記號", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string 自動扣繳記號
		{
			get
			{
				return this._自動扣繳記號;
			}
			set
			{
				if ((this._自動扣繳記號 != value))
				{
					this.On自動扣繳記號Changing(value);
					this.SendPropertyChanging();
					this._自動扣繳記號 = value;
					this.SendPropertyChanged("自動扣繳記號");
					this.On自動扣繳記號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_自動扣繳帳號", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public string 自動扣繳帳號
		{
			get
			{
				return this._自動扣繳帳號;
			}
			set
			{
				if ((this._自動扣繳帳號 != value))
				{
					this.On自動扣繳帳號Changing(value);
					this.SendPropertyChanging();
					this._自動扣繳帳號 = value;
					this.SendPropertyChanged("自動扣繳帳號");
					this.On自動扣繳帳號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貸放型態", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public string 貸放型態
		{
			get
			{
				return this._貸放型態;
			}
			set
			{
				if ((this._貸放型態 != value))
				{
					this.On貸放型態Changing(value);
					this.SendPropertyChanging();
					this._貸放型態 = value;
					this.SendPropertyChanged("貸放型態");
					this.On貸放型態Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_備註", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public string 備註
		{
			get
			{
				return this._備註;
			}
			set
			{
				if ((this._備註 != value))
				{
					this.On備註Changing(value);
					this.SendPropertyChanging();
					this._備註 = value;
					this.SendPropertyChanged("備註");
					this.On備註Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_專案年度", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<int> 專案年度
		{
			get
			{
				return this._專案年度;
			}
			set
			{
				if ((this._專案年度 != value))
				{
					this.On專案年度Changing(value);
					this.SendPropertyChanging();
					this._專案年度 = value;
					this.SendPropertyChanged("專案年度");
					this.On專案年度Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_聯貸記號", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public string 聯貸記號
		{
			get
			{
				return this._聯貸記號;
			}
			set
			{
				if ((this._聯貸記號 != value))
				{
					this.On聯貸記號Changing(value);
					this.SendPropertyChanging();
					this._聯貸記號 = value;
					this.SendPropertyChanged("聯貸記號");
					this.On聯貸記號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_聯貸編號", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public string 聯貸編號
		{
			get
			{
				return this._聯貸編號;
			}
			set
			{
				if ((this._聯貸編號 != value))
				{
					this.On聯貸編號Changing(value);
					this.SendPropertyChanging();
					this._聯貸編號 = value;
					this.SendPropertyChanged("聯貸編號");
					this.On聯貸編號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_送信保對應帳支號", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public string 送信保對應帳支號
		{
			get
			{
				return this._送信保對應帳支號;
			}
			set
			{
				if ((this._送信保對應帳支號 != value))
				{
					this.On送信保對應帳支號Changing(value);
					this.SendPropertyChanging();
					this._送信保對應帳支號 = value;
					this.SendPropertyChanged("送信保對應帳支號");
					this.On送信保對應帳支號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_帳戶管理費", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public System.Nullable<decimal> 帳戶管理費
		{
			get
			{
				return this._帳戶管理費;
			}
			set
			{
				if ((this._帳戶管理費 != value))
				{
					this.On帳戶管理費Changing(value);
					this.SendPropertyChanging();
					this._帳戶管理費 = value;
					this.SendPropertyChanged("帳戶管理費");
					this.On帳戶管理費Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTNO", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public string ACTNO
		{
			get
			{
				return this._ACTNO;
			}
			set
			{
				if ((this._ACTNO != value))
				{
					this.OnACTNOChanging(value);
					this.SendPropertyChanging();
					this._ACTNO = value;
					this.SendPropertyChanged("ACTNO");
					this.OnACTNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_利率下限", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public System.Nullable<decimal> 利率下限
		{
			get
			{
				return this._利率下限;
			}
			set
			{
				if ((this._利率下限 != value))
				{
					this.On利率下限Changing(value);
					this.SendPropertyChanging();
					this._利率下限 = value;
					this.SendPropertyChanged("利率下限");
					this.On利率下限Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_帳戶性質", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35)]
		public string 帳戶性質
		{
			get
			{
				return this._帳戶性質;
			}
			set
			{
				if ((this._帳戶性質 != value))
				{
					this.On帳戶性質Changing(value);
					this.SendPropertyChanging();
					this._帳戶性質 = value;
					this.SendPropertyChanged("帳戶性質");
					this.On帳戶性質Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditNo", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36)]
		public string CreditNo
		{
			get
			{
				return this._CreditNo;
			}
			set
			{
				if ((this._CreditNo != value))
				{
					this.OnCreditNoChanging(value);
					this.SendPropertyChanging();
					this._CreditNo = value;
					this.SendPropertyChanged("CreditNo");
					this.OnCreditNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="L1000_CreditInsuranceLoan", Storage="_CreditInsuranceLoans", ThisKey="L1000ID", OtherKey="L1000ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37, EmitDefaultValue=false)]
		public EntitySet<CreditInsuranceLoan> CreditInsuranceLoans
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditInsuranceLoans.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CreditInsuranceLoans;
			}
			set
			{
				this._CreditInsuranceLoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="L1000_NegoLoan", Storage="_NegoLoan", ThisKey="L1000ID", OtherKey="L1000ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38, EmitDefaultValue=false)]
		public EntitySet<NegoLoan> NegoLoan
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoLoan.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoLoan;
			}
			set
			{
				this._NegoLoan.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CreditInsuranceLoans(CreditInsuranceLoan entity)
		{
			this.SendPropertyChanging();
			entity.L1000 = this;
		}
		
		private void detach_CreditInsuranceLoans(CreditInsuranceLoan entity)
		{
			this.SendPropertyChanging();
			entity.L1000 = null;
		}
		
		private void attach_NegoLoan(NegoLoan entity)
		{
			this.SendPropertyChanging();
			entity.L1000 = this;
		}
		
		private void detach_NegoLoan(NegoLoan entity)
		{
			this.SendPropertyChanging();
			entity.L1000 = null;
		}
		
		private void Initialize()
		{
			this._CreditInsuranceLoans = new EntitySet<CreditInsuranceLoan>(new Action<CreditInsuranceLoan>(this.attach_CreditInsuranceLoans), new Action<CreditInsuranceLoan>(this.detach_CreditInsuranceLoans));
			this._NegoLoan = new EntitySet<NegoLoan>(new Action<NegoLoan>(this.attach_NegoLoan), new Action<NegoLoan>(this.detach_NegoLoan));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankingAudit")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BankingAudit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private string _作業資訊組負責人;
		
		private string _授信支援主管;
		
		private string _放款作業專員;
		
		private string _貸放主管編號;
		
		private string _貸放負責人編號;
		
		private EntityRef<Documentary> _Documentary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void On作業資訊組負責人Changing(string value);
    partial void On作業資訊組負責人Changed();
    partial void On授信支援主管Changing(string value);
    partial void On授信支援主管Changed();
    partial void On放款作業專員Changing(string value);
    partial void On放款作業專員Changed();
    partial void On貸放主管編號Changing(string value);
    partial void On貸放主管編號Changed();
    partial void On貸放負責人編號Changing(string value);
    partial void On貸放負責人編號Changed();
    #endregion
		
		public BankingAudit()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_作業資訊組負責人", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string 作業資訊組負責人
		{
			get
			{
				return this._作業資訊組負責人;
			}
			set
			{
				if ((this._作業資訊組負責人 != value))
				{
					this.On作業資訊組負責人Changing(value);
					this.SendPropertyChanging();
					this._作業資訊組負責人 = value;
					this.SendPropertyChanged("作業資訊組負責人");
					this.On作業資訊組負責人Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_授信支援主管", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string 授信支援主管
		{
			get
			{
				return this._授信支援主管;
			}
			set
			{
				if ((this._授信支援主管 != value))
				{
					this.On授信支援主管Changing(value);
					this.SendPropertyChanging();
					this._授信支援主管 = value;
					this.SendPropertyChanged("授信支援主管");
					this.On授信支援主管Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_放款作業專員", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string 放款作業專員
		{
			get
			{
				return this._放款作業專員;
			}
			set
			{
				if ((this._放款作業專員 != value))
				{
					this.On放款作業專員Changing(value);
					this.SendPropertyChanging();
					this._放款作業專員 = value;
					this.SendPropertyChanged("放款作業專員");
					this.On放款作業專員Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貸放主管編號", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string 貸放主管編號
		{
			get
			{
				return this._貸放主管編號;
			}
			set
			{
				if ((this._貸放主管編號 != value))
				{
					this.On貸放主管編號Changing(value);
					this.SendPropertyChanging();
					this._貸放主管編號 = value;
					this.SendPropertyChanged("貸放主管編號");
					this.On貸放主管編號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貸放負責人編號", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string 貸放負責人編號
		{
			get
			{
				return this._貸放負責人編號;
			}
			set
			{
				if ((this._貸放負責人編號 != value))
				{
					this.On貸放負責人編號Changing(value);
					this.SendPropertyChanging();
					this._貸放負責人編號 = value;
					this.SendPropertyChanged("貸放負責人編號");
					this.On貸放負責人編號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_BankingAudit", Storage="_Documentary", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.BankingAudit = null;
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.BankingAudit = this;
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Documentary = default(EntityRef<Documentary>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NegoDraftExtension")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NegoDraftExtension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DraftID;
		
		private System.Nullable<System.DateTime> _NegotiateDate;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private string _NegoBranch;
		
		private string _入戶帳號;
		
		private System.Nullable<int> _DraftType;
		
		private string _LcBranch;
		
		private EntityRef<BankData> _NegotiationBranch;
		
		private EntityRef<BankData> _IssuingLcBranch;
		
		private EntityRef<NegoDraft> _NegoDraft;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDraftIDChanging(int value);
    partial void OnDraftIDChanged();
    partial void OnNegotiateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNegotiateDateChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnNegoBranchChanging(string value);
    partial void OnNegoBranchChanged();
    partial void On入戶帳號Changing(string value);
    partial void On入戶帳號Changed();
    partial void OnDraftTypeChanging(System.Nullable<int> value);
    partial void OnDraftTypeChanged();
    partial void OnLcBranchChanging(string value);
    partial void OnLcBranchChanged();
    #endregion
		
		public NegoDraftExtension()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DraftID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DraftID
		{
			get
			{
				return this._DraftID;
			}
			set
			{
				if ((this._DraftID != value))
				{
					if (this._NegoDraft.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDraftIDChanging(value);
					this.SendPropertyChanging();
					this._DraftID = value;
					this.SendPropertyChanged("DraftID");
					this.OnDraftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NegotiateDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> NegotiateDate
		{
			get
			{
				return this._NegotiateDate;
			}
			set
			{
				if ((this._NegotiateDate != value))
				{
					this.OnNegotiateDateChanging(value);
					this.SendPropertyChanging();
					this._NegotiateDate = value;
					this.SendPropertyChanged("NegotiateDate");
					this.OnNegotiateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NegoBranch", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string NegoBranch
		{
			get
			{
				return this._NegoBranch;
			}
			set
			{
				if ((this._NegoBranch != value))
				{
					if (this._NegotiationBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNegoBranchChanging(value);
					this.SendPropertyChanging();
					this._NegoBranch = value;
					this.SendPropertyChanged("NegoBranch");
					this.OnNegoBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_入戶帳號", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string 入戶帳號
		{
			get
			{
				return this._入戶帳號;
			}
			set
			{
				if ((this._入戶帳號 != value))
				{
					this.On入戶帳號Changing(value);
					this.SendPropertyChanging();
					this._入戶帳號 = value;
					this.SendPropertyChanged("入戶帳號");
					this.On入戶帳號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DraftType", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> DraftType
		{
			get
			{
				return this._DraftType;
			}
			set
			{
				if ((this._DraftType != value))
				{
					this.OnDraftTypeChanging(value);
					this.SendPropertyChanging();
					this._DraftType = value;
					this.SendPropertyChanged("DraftType");
					this.OnDraftTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LcBranch", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string LcBranch
		{
			get
			{
				return this._LcBranch;
			}
			set
			{
				if ((this._LcBranch != value))
				{
					if (this._IssuingLcBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLcBranchChanging(value);
					this.SendPropertyChanging();
					this._LcBranch = value;
					this.SendPropertyChanged("LcBranch");
					this.OnLcBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_NegoDraftExtension", Storage="_NegotiationBranch", ThisKey="NegoBranch", OtherKey="BankCode", IsForeignKey=true)]
		public BankData NegotiationBranch
		{
			get
			{
				return this._NegotiationBranch.Entity;
			}
			set
			{
				BankData previousValue = this._NegotiationBranch.Entity;
				if (((previousValue != value) 
							|| (this._NegotiationBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegotiationBranch.Entity = null;
						previousValue.NegotiatedDraft.Remove(this);
					}
					this._NegotiationBranch.Entity = value;
					if ((value != null))
					{
						value.NegotiatedDraft.Add(this);
						this._NegoBranch = value.BankCode;
					}
					else
					{
						this._NegoBranch = default(string);
					}
					this.SendPropertyChanged("NegotiationBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_NegoDraftExtension1", Storage="_IssuingLcBranch", ThisKey="LcBranch", OtherKey="BankCode", IsForeignKey=true)]
		public BankData IssuingLcBranch
		{
			get
			{
				return this._IssuingLcBranch.Entity;
			}
			set
			{
				BankData previousValue = this._IssuingLcBranch.Entity;
				if (((previousValue != value) 
							|| (this._IssuingLcBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IssuingLcBranch.Entity = null;
						previousValue.DraftByLcBranch.Remove(this);
					}
					this._IssuingLcBranch.Entity = value;
					if ((value != null))
					{
						value.DraftByLcBranch.Add(this);
						this._LcBranch = value.BankCode;
					}
					else
					{
						this._LcBranch = default(string);
					}
					this.SendPropertyChanged("IssuingLcBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoDraft_NegoDraftExtension", Storage="_NegoDraft", ThisKey="DraftID", OtherKey="DraftID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NegoDraft NegoDraft
		{
			get
			{
				return this._NegoDraft.Entity;
			}
			set
			{
				NegoDraft previousValue = this._NegoDraft.Entity;
				if (((previousValue != value) 
							|| (this._NegoDraft.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoDraft.Entity = null;
						previousValue.NegoDraftExtension = null;
					}
					this._NegoDraft.Entity = value;
					if ((value != null))
					{
						value.NegoDraftExtension = this;
						this._DraftID = value.DraftID;
					}
					else
					{
						this._DraftID = default(int);
					}
					this.SendPropertyChanged("NegoDraft");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._NegotiationBranch = default(EntityRef<BankData>);
			this._IssuingLcBranch = default(EntityRef<BankData>);
			this._NegoDraft = default(EntityRef<NegoDraft>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reimbursement")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Reimbursement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReimID;
		
		private int _DraftID;
		
		private string _ReimbursementNo;
		
		private System.Nullable<System.DateTime> _ApplicationDate;
		
		private decimal _Amount;
		
		private string _PayableAccount;
		
		private System.Nullable<int> _L4600ID;
		
		private System.Nullable<int> _L8600ID;
		
		private System.Nullable<decimal> _ImposeHandlingCharge;
		
		private System.Nullable<int> _TxnCode;
		
		private EntityRef<NegoLoan> _NegoLoan;
		
		private EntityRef<Documentary> _Documentary;
		
		private EntityRef<L4600> _L4600;
		
		private EntityRef<L8600> _L8600;
		
		private EntityRef<NegoDraft> _NegoDraft;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReimIDChanging(int value);
    partial void OnReimIDChanged();
    partial void OnDraftIDChanging(int value);
    partial void OnDraftIDChanged();
    partial void OnReimbursementNoChanging(string value);
    partial void OnReimbursementNoChanged();
    partial void OnApplicationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApplicationDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPayableAccountChanging(string value);
    partial void OnPayableAccountChanged();
    partial void OnL4600IDChanging(System.Nullable<int> value);
    partial void OnL4600IDChanged();
    partial void OnL8600IDChanging(System.Nullable<int> value);
    partial void OnL8600IDChanged();
    partial void OnImposeHandlingChargeChanging(System.Nullable<decimal> value);
    partial void OnImposeHandlingChargeChanged();
    partial void OnTxnCodeChanging(System.Nullable<int> value);
    partial void OnTxnCodeChanged();
    #endregion
		
		public Reimbursement()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReimID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ReimID
		{
			get
			{
				return this._ReimID;
			}
			set
			{
				if ((this._ReimID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReimIDChanging(value);
					this.SendPropertyChanging();
					this._ReimID = value;
					this.SendPropertyChanged("ReimID");
					this.OnReimIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DraftID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int DraftID
		{
			get
			{
				return this._DraftID;
			}
			set
			{
				if ((this._DraftID != value))
				{
					if (this._NegoDraft.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDraftIDChanging(value);
					this.SendPropertyChanging();
					this._DraftID = value;
					this.SendPropertyChanged("DraftID");
					this.OnDraftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReimbursementNo", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ReimbursementNo
		{
			get
			{
				return this._ReimbursementNo;
			}
			set
			{
				if ((this._ReimbursementNo != value))
				{
					this.OnReimbursementNoChanging(value);
					this.SendPropertyChanging();
					this._ReimbursementNo = value;
					this.SendPropertyChanged("ReimbursementNo");
					this.OnReimbursementNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> ApplicationDate
		{
			get
			{
				return this._ApplicationDate;
			}
			set
			{
				if ((this._ApplicationDate != value))
				{
					this.OnApplicationDateChanging(value);
					this.SendPropertyChanging();
					this._ApplicationDate = value;
					this.SendPropertyChanged("ApplicationDate");
					this.OnApplicationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,0) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayableAccount", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string PayableAccount
		{
			get
			{
				return this._PayableAccount;
			}
			set
			{
				if ((this._PayableAccount != value))
				{
					this.OnPayableAccountChanging(value);
					this.SendPropertyChanging();
					this._PayableAccount = value;
					this.SendPropertyChanged("PayableAccount");
					this.OnPayableAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L4600ID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> L4600ID
		{
			get
			{
				return this._L4600ID;
			}
			set
			{
				if ((this._L4600ID != value))
				{
					if (this._L4600.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnL4600IDChanging(value);
					this.SendPropertyChanging();
					this._L4600ID = value;
					this.SendPropertyChanged("L4600ID");
					this.OnL4600IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L8600ID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> L8600ID
		{
			get
			{
				return this._L8600ID;
			}
			set
			{
				if ((this._L8600ID != value))
				{
					if (this._L8600.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnL8600IDChanging(value);
					this.SendPropertyChanging();
					this._L8600ID = value;
					this.SendPropertyChanged("L8600ID");
					this.OnL8600IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImposeHandlingCharge", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<decimal> ImposeHandlingCharge
		{
			get
			{
				return this._ImposeHandlingCharge;
			}
			set
			{
				if ((this._ImposeHandlingCharge != value))
				{
					this.OnImposeHandlingChargeChanging(value);
					this.SendPropertyChanging();
					this._ImposeHandlingCharge = value;
					this.SendPropertyChanged("ImposeHandlingCharge");
					this.OnImposeHandlingChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TxnCode", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> TxnCode
		{
			get
			{
				return this._TxnCode;
			}
			set
			{
				if ((this._TxnCode != value))
				{
					this.OnTxnCodeChanging(value);
					this.SendPropertyChanging();
					this._TxnCode = value;
					this.SendPropertyChanged("TxnCode");
					this.OnTxnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reimbursement_NegoLoan", Storage="_NegoLoan", ThisKey="ReimID", OtherKey="LoanID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public NegoLoan NegoLoan
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoLoan.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._NegoLoan.Entity;
			}
			set
			{
				NegoLoan previousValue = this._NegoLoan.Entity;
				if (((previousValue != value) 
							|| (this._NegoLoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoLoan.Entity = null;
						previousValue.Reimbursement = null;
					}
					this._NegoLoan.Entity = value;
					if ((value != null))
					{
						value.Reimbursement = this;
					}
					this.SendPropertyChanged("NegoLoan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_Reimbursement", Storage="_Documentary", ThisKey="ReimID", OtherKey="DocID", IsForeignKey=true)]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.Reimbursement = null;
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.Reimbursement = this;
						this._ReimID = value.DocID;
					}
					else
					{
						this._ReimID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="L4600_Reimbursement", Storage="_L4600", ThisKey="L4600ID", OtherKey="L4600ID", IsForeignKey=true)]
		public L4600 L4600
		{
			get
			{
				return this._L4600.Entity;
			}
			set
			{
				L4600 previousValue = this._L4600.Entity;
				if (((previousValue != value) 
							|| (this._L4600.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._L4600.Entity = null;
						previousValue.Reimbursement.Remove(this);
					}
					this._L4600.Entity = value;
					if ((value != null))
					{
						value.Reimbursement.Add(this);
						this._L4600ID = value.L4600ID;
					}
					else
					{
						this._L4600ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("L4600");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="L8600_Reimbursement", Storage="_L8600", ThisKey="L8600ID", OtherKey="L8600ID", IsForeignKey=true)]
		public L8600 L8600
		{
			get
			{
				return this._L8600.Entity;
			}
			set
			{
				L8600 previousValue = this._L8600.Entity;
				if (((previousValue != value) 
							|| (this._L8600.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._L8600.Entity = null;
						previousValue.Reimbursement.Remove(this);
					}
					this._L8600.Entity = value;
					if ((value != null))
					{
						value.Reimbursement.Add(this);
						this._L8600ID = value.L8600ID;
					}
					else
					{
						this._L8600ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("L8600");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoDraft_Reimbursement", Storage="_NegoDraft", ThisKey="DraftID", OtherKey="DraftID", IsForeignKey=true)]
		public NegoDraft NegoDraft
		{
			get
			{
				return this._NegoDraft.Entity;
			}
			set
			{
				NegoDraft previousValue = this._NegoDraft.Entity;
				if (((previousValue != value) 
							|| (this._NegoDraft.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoDraft.Entity = null;
						previousValue.Reimbursement.Remove(this);
					}
					this._NegoDraft.Entity = value;
					if ((value != null))
					{
						value.Reimbursement.Add(this);
						this._DraftID = value.DraftID;
					}
					else
					{
						this._DraftID = default(int);
					}
					this.SendPropertyChanged("NegoDraft");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._NegoLoan = default(EntityRef<NegoLoan>);
			this._Documentary = default(EntityRef<Documentary>);
			this._L4600 = default(EntityRef<L4600>);
			this._L8600 = default(EntityRef<L8600>);
			this._NegoDraft = default(EntityRef<NegoDraft>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NegoDraftAcceptance")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NegoDraftAcceptance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AcceptanceID;
		
		private int _DraftID;
		
		private System.Nullable<int> _L4700ID;
		
		private EntityRef<Documentary> _Documentary;
		
		private EntityRef<L4700> _L4700;
		
		private EntityRef<NegoDraft> _NegoDraft;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAcceptanceIDChanging(int value);
    partial void OnAcceptanceIDChanged();
    partial void OnDraftIDChanging(int value);
    partial void OnDraftIDChanged();
    partial void OnL4700IDChanging(System.Nullable<int> value);
    partial void OnL4700IDChanged();
    #endregion
		
		public NegoDraftAcceptance()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptanceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AcceptanceID
		{
			get
			{
				return this._AcceptanceID;
			}
			set
			{
				if ((this._AcceptanceID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcceptanceIDChanging(value);
					this.SendPropertyChanging();
					this._AcceptanceID = value;
					this.SendPropertyChanged("AcceptanceID");
					this.OnAcceptanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DraftID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int DraftID
		{
			get
			{
				return this._DraftID;
			}
			set
			{
				if ((this._DraftID != value))
				{
					if (this._NegoDraft.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDraftIDChanging(value);
					this.SendPropertyChanging();
					this._DraftID = value;
					this.SendPropertyChanged("DraftID");
					this.OnDraftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L4700ID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> L4700ID
		{
			get
			{
				return this._L4700ID;
			}
			set
			{
				if ((this._L4700ID != value))
				{
					if (this._L4700.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnL4700IDChanging(value);
					this.SendPropertyChanging();
					this._L4700ID = value;
					this.SendPropertyChanged("L4700ID");
					this.OnL4700IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_NegoDraftAcceptance", Storage="_Documentary", ThisKey="AcceptanceID", OtherKey="DocID", IsForeignKey=true)]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.NegoDraftAcceptance = null;
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.NegoDraftAcceptance = this;
						this._AcceptanceID = value.DocID;
					}
					else
					{
						this._AcceptanceID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="L4700_NegoDraftAcceptance", Storage="_L4700", ThisKey="L4700ID", OtherKey="L4700ID", IsForeignKey=true)]
		public L4700 L4700
		{
			get
			{
				return this._L4700.Entity;
			}
			set
			{
				L4700 previousValue = this._L4700.Entity;
				if (((previousValue != value) 
							|| (this._L4700.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._L4700.Entity = null;
						previousValue.NegoDraftAcceptance.Remove(this);
					}
					this._L4700.Entity = value;
					if ((value != null))
					{
						value.NegoDraftAcceptance.Add(this);
						this._L4700ID = value.L4700ID;
					}
					else
					{
						this._L4700ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("L4700");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoDraft_NegoDraftAcceptance", Storage="_NegoDraft", ThisKey="DraftID", OtherKey="DraftID", IsForeignKey=true)]
		public NegoDraft NegoDraft
		{
			get
			{
				return this._NegoDraft.Entity;
			}
			set
			{
				NegoDraft previousValue = this._NegoDraft.Entity;
				if (((previousValue != value) 
							|| (this._NegoDraft.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoDraft.Entity = null;
						previousValue.NegoDraftAcceptance.Remove(this);
					}
					this._NegoDraft.Entity = value;
					if ((value != null))
					{
						value.NegoDraftAcceptance.Add(this);
						this._DraftID = value.DraftID;
					}
					else
					{
						this._DraftID = default(int);
					}
					this.SendPropertyChanged("NegoDraft");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Documentary = default(EntityRef<Documentary>);
			this._L4700 = default(EntityRef<L4700>);
			this._NegoDraft = default(EntityRef<NegoDraft>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DefaultSpecificNotes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DefaultSpecificNotes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyID;
		
		private int _NoteID;
		
		private EntityRef<SpecificNote> _SpecificNote;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnNoteIDChanging(int value);
    partial void OnNoteIDChanged();
    #endregion
		
		public DefaultSpecificNotes()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int NoteID
		{
			get
			{
				return this._NoteID;
			}
			set
			{
				if ((this._NoteID != value))
				{
					if (this._SpecificNote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoteIDChanging(value);
					this.SendPropertyChanging();
					this._NoteID = value;
					this.SendPropertyChanged("NoteID");
					this.OnNoteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecificNote_DefaultSpecificNotes", Storage="_SpecificNote", ThisKey="NoteID", OtherKey="NoteID", IsForeignKey=true)]
		public SpecificNote SpecificNote
		{
			get
			{
				return this._SpecificNote.Entity;
			}
			set
			{
				SpecificNote previousValue = this._SpecificNote.Entity;
				if (((previousValue != value) 
							|| (this._SpecificNote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecificNote.Entity = null;
						previousValue.DefaultSpecificNotes.Remove(this);
					}
					this._SpecificNote.Entity = value;
					if ((value != null))
					{
						value.DefaultSpecificNotes.Add(this);
						this._NoteID = value.NoteID;
					}
					else
					{
						this._NoteID = default(int);
					}
					this.SendPropertyChanged("SpecificNote");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_DefaultSpecificNotes", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.DefaultSpecificNotes = null;
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.DefaultSpecificNotes = this;
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SpecificNote = default(EntityRef<SpecificNote>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DisabledBranch")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DisabledBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BankCode;
		
		private EntityRef<BankData> _BankData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    #endregion
		
		public DisabledBranch()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					if (this._BankData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_DisabledBranch", Storage="_BankData", ThisKey="BankCode", OtherKey="BankCode", IsForeignKey=true)]
		public BankData BankData
		{
			get
			{
				return this._BankData.Entity;
			}
			set
			{
				BankData previousValue = this._BankData.Entity;
				if (((previousValue != value) 
							|| (this._BankData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankData.Entity = null;
						previousValue.DisabledBranch = null;
					}
					this._BankData.Entity = value;
					if ((value != null))
					{
						value.DisabledBranch = this;
						this._BankCode = value.BankCode;
					}
					else
					{
						this._BankCode = default(string);
					}
					this.SendPropertyChanged("BankData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BankData = default(EntityRef<BankData>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerCreditAlert")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomerCreditAlert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private string _AlertCode;
		
		private string _Description;
		
		private EntityRef<Documentary> _Documentary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnAlertCodeChanging(string value);
    partial void OnAlertCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public CustomerCreditAlert()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertCode", DbType="NVarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string AlertCode
		{
			get
			{
				return this._AlertCode;
			}
			set
			{
				if ((this._AlertCode != value))
				{
					this.OnAlertCodeChanging(value);
					this.SendPropertyChanging();
					this._AlertCode = value;
					this.SendPropertyChanged("AlertCode");
					this.OnAlertCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_CustomerCreditAlert", Storage="_Documentary", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.CustomerCreditAlert.Remove(this);
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.CustomerCreditAlert.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Documentary = default(EntityRef<Documentary>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRCGroup")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRCGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CRCBranch;
		
		private EntitySet<CRCGroupArrangement> _CRCGroupArrangement;
		
		private EntityRef<BankData> _BankData;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCRCBranchChanging(string value);
    partial void OnCRCBranchChanged();
    #endregion
		
		public CRCGroup()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRCBranch", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string CRCBranch
		{
			get
			{
				return this._CRCBranch;
			}
			set
			{
				if ((this._CRCBranch != value))
				{
					if (this._BankData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRCBranchChanging(value);
					this.SendPropertyChanging();
					this._CRCBranch = value;
					this.SendPropertyChanged("CRCBranch");
					this.OnCRCBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRCGroup_CRCGroupArrangement", Storage="_CRCGroupArrangement", ThisKey="CRCBranch", OtherKey="CRCBranch")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2, EmitDefaultValue=false)]
		public EntitySet<CRCGroupArrangement> CRCGroupArrangement
		{
			get
			{
				if ((this.serializing 
							&& (this._CRCGroupArrangement.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRCGroupArrangement;
			}
			set
			{
				this._CRCGroupArrangement.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_CRCGroup", Storage="_BankData", ThisKey="CRCBranch", OtherKey="BankCode", IsForeignKey=true)]
		public BankData BankData
		{
			get
			{
				return this._BankData.Entity;
			}
			set
			{
				BankData previousValue = this._BankData.Entity;
				if (((previousValue != value) 
							|| (this._BankData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankData.Entity = null;
						previousValue.CRCGroup = null;
					}
					this._BankData.Entity = value;
					if ((value != null))
					{
						value.CRCGroup = this;
						this._CRCBranch = value.BankCode;
					}
					else
					{
						this._CRCBranch = default(string);
					}
					this.SendPropertyChanged("BankData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRCGroupArrangement(CRCGroupArrangement entity)
		{
			this.SendPropertyChanging();
			entity.CRCGroup = this;
		}
		
		private void detach_CRCGroupArrangement(CRCGroupArrangement entity)
		{
			this.SendPropertyChanging();
			entity.CRCGroup = null;
		}
		
		private void Initialize()
		{
			this._CRCGroupArrangement = new EntitySet<CRCGroupArrangement>(new Action<CRCGroupArrangement>(this.attach_CRCGroupArrangement), new Action<CRCGroupArrangement>(this.detach_CRCGroupArrangement));
			this._BankData = default(EntityRef<BankData>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRCGroupArrangement")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CRCGroupArrangement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CRCBranch;
		
		private string _BankCode;
		
		private int _DelegateID;
		
		private EntityRef<BankData> _BankData;
		
		private EntityRef<CRCGroup> _CRCGroup;
		
		private EntityRef<TaskDelegate> _TaskDelegate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCRCBranchChanging(string value);
    partial void OnCRCBranchChanged();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnDelegateIDChanging(int value);
    partial void OnDelegateIDChanged();
    #endregion
		
		public CRCGroupArrangement()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRCBranch", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string CRCBranch
		{
			get
			{
				return this._CRCBranch;
			}
			set
			{
				if ((this._CRCBranch != value))
				{
					if (this._CRCGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCRCBranchChanging(value);
					this.SendPropertyChanging();
					this._CRCBranch = value;
					this.SendPropertyChanged("CRCBranch");
					this.OnCRCBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					if (this._BankData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelegateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int DelegateID
		{
			get
			{
				return this._DelegateID;
			}
			set
			{
				if ((this._DelegateID != value))
				{
					if (this._TaskDelegate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDelegateIDChanging(value);
					this.SendPropertyChanging();
					this._DelegateID = value;
					this.SendPropertyChanged("DelegateID");
					this.OnDelegateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_CRCGroupArrangement", Storage="_BankData", ThisKey="BankCode", OtherKey="BankCode", IsForeignKey=true)]
		public BankData BankData
		{
			get
			{
				return this._BankData.Entity;
			}
			set
			{
				BankData previousValue = this._BankData.Entity;
				if (((previousValue != value) 
							|| (this._BankData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankData.Entity = null;
						previousValue.CRCGroupArrangement.Remove(this);
					}
					this._BankData.Entity = value;
					if ((value != null))
					{
						value.CRCGroupArrangement.Add(this);
						this._BankCode = value.BankCode;
					}
					else
					{
						this._BankCode = default(string);
					}
					this.SendPropertyChanged("BankData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CRCGroup_CRCGroupArrangement", Storage="_CRCGroup", ThisKey="CRCBranch", OtherKey="CRCBranch", IsForeignKey=true)]
		public CRCGroup CRCGroup
		{
			get
			{
				return this._CRCGroup.Entity;
			}
			set
			{
				CRCGroup previousValue = this._CRCGroup.Entity;
				if (((previousValue != value) 
							|| (this._CRCGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CRCGroup.Entity = null;
						previousValue.CRCGroupArrangement.Remove(this);
					}
					this._CRCGroup.Entity = value;
					if ((value != null))
					{
						value.CRCGroupArrangement.Add(this);
						this._CRCBranch = value.CRCBranch;
					}
					else
					{
						this._CRCBranch = default(string);
					}
					this.SendPropertyChanged("CRCGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskDelegate_CRCGroupArrangement", Storage="_TaskDelegate", ThisKey="DelegateID", OtherKey="DelegateID", IsForeignKey=true)]
		public TaskDelegate TaskDelegate
		{
			get
			{
				return this._TaskDelegate.Entity;
			}
			set
			{
				TaskDelegate previousValue = this._TaskDelegate.Entity;
				if (((previousValue != value) 
							|| (this._TaskDelegate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaskDelegate.Entity = null;
						previousValue.CRCGroupArrangement.Remove(this);
					}
					this._TaskDelegate.Entity = value;
					if ((value != null))
					{
						value.CRCGroupArrangement.Add(this);
						this._DelegateID = value.DelegateID;
					}
					else
					{
						this._DelegateID = default(int);
					}
					this.SendPropertyChanged("TaskDelegate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BankData = default(EntityRef<BankData>);
			this._CRCGroup = default(EntityRef<CRCGroup>);
			this._TaskDelegate = default(EntityRef<TaskDelegate>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaskDelegate")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TaskDelegate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DelegateID;
		
		private string _Delegation;
		
		private bool _Activated;
		
		private EntitySet<CRCGroupArrangement> _CRCGroupArrangement;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDelegateIDChanging(int value);
    partial void OnDelegateIDChanged();
    partial void OnDelegationChanging(string value);
    partial void OnDelegationChanged();
    partial void OnActivatedChanging(bool value);
    partial void OnActivatedChanged();
    #endregion
		
		public TaskDelegate()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelegateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DelegateID
		{
			get
			{
				return this._DelegateID;
			}
			set
			{
				if ((this._DelegateID != value))
				{
					this.OnDelegateIDChanging(value);
					this.SendPropertyChanging();
					this._DelegateID = value;
					this.SendPropertyChanged("DelegateID");
					this.OnDelegateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delegation", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Delegation
		{
			get
			{
				return this._Delegation;
			}
			set
			{
				if ((this._Delegation != value))
				{
					this.OnDelegationChanging(value);
					this.SendPropertyChanging();
					this._Delegation = value;
					this.SendPropertyChanged("Delegation");
					this.OnDelegationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activated", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool Activated
		{
			get
			{
				return this._Activated;
			}
			set
			{
				if ((this._Activated != value))
				{
					this.OnActivatedChanging(value);
					this.SendPropertyChanging();
					this._Activated = value;
					this.SendPropertyChanged("Activated");
					this.OnActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskDelegate_CRCGroupArrangement", Storage="_CRCGroupArrangement", ThisKey="DelegateID", OtherKey="DelegateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<CRCGroupArrangement> CRCGroupArrangement
		{
			get
			{
				if ((this.serializing 
							&& (this._CRCGroupArrangement.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CRCGroupArrangement;
			}
			set
			{
				this._CRCGroupArrangement.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CRCGroupArrangement(CRCGroupArrangement entity)
		{
			this.SendPropertyChanging();
			entity.TaskDelegate = this;
		}
		
		private void detach_CRCGroupArrangement(CRCGroupArrangement entity)
		{
			this.SendPropertyChanging();
			entity.TaskDelegate = null;
		}
		
		private void Initialize()
		{
			this._CRCGroupArrangement = new EntitySet<CRCGroupArrangement>(new Action<CRCGroupArrangement>(this.attach_CRCGroupArrangement), new Action<CRCGroupArrangement>(this.detach_CRCGroupArrangement));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentOwner")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentOwner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private int _OwnerID;
		
		private EntityRef<Documentary> _Documentary;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnOwnerIDChanging(int value);
    partial void OnOwnerIDChanged();
    #endregion
		
		public DocumentOwner()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_DocumentOwner", Storage="_Documentary", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.DocumentOwner = null;
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.DocumentOwner = this;
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_DocumentOwner", Storage="_Organization", ThisKey="OwnerID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.DocumentOwner.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.DocumentOwner.Add(this);
						this._OwnerID = value.CompanyID;
					}
					else
					{
						this._OwnerID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Documentary = default(EntityRef<Documentary>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterpriseRelation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EnterpriseRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EnterpriseID;
		
		private int _CompanyID;
		
		private EntityRef<Organization> _AsEnterpriseAgent;
		
		private EntityRef<Organization> _AsEnterpriseMember;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEnterpriseIDChanging(int value);
    partial void OnEnterpriseIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    #endregion
		
		public EnterpriseRelation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					if (this._AsEnterpriseAgent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._AsEnterpriseMember.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_EnterpriseRelation", Storage="_AsEnterpriseAgent", ThisKey="EnterpriseID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization AsEnterpriseAgent
		{
			get
			{
				return this._AsEnterpriseAgent.Entity;
			}
			set
			{
				Organization previousValue = this._AsEnterpriseAgent.Entity;
				if (((previousValue != value) 
							|| (this._AsEnterpriseAgent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AsEnterpriseAgent.Entity = null;
						previousValue.EnterpriseRelation.Remove(this);
					}
					this._AsEnterpriseAgent.Entity = value;
					if ((value != null))
					{
						value.EnterpriseRelation.Add(this);
						this._EnterpriseID = value.CompanyID;
					}
					else
					{
						this._EnterpriseID = default(int);
					}
					this.SendPropertyChanged("AsEnterpriseAgent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_EnterpriseRelation1", Storage="_AsEnterpriseMember", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization AsEnterpriseMember
		{
			get
			{
				return this._AsEnterpriseMember.Entity;
			}
			set
			{
				Organization previousValue = this._AsEnterpriseMember.Entity;
				if (((previousValue != value) 
							|| (this._AsEnterpriseMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AsEnterpriseMember.Entity = null;
						previousValue.EnterpriseRelation1.Remove(this);
					}
					this._AsEnterpriseMember.Entity = value;
					if ((value != null))
					{
						value.EnterpriseRelation1.Add(this);
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("AsEnterpriseMember");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._AsEnterpriseAgent = default(EntityRef<Organization>);
			this._AsEnterpriseMember = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerOfBranchExtension")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomerOfBranchExtension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BankCode;
		
		private int _CompanyID;
		
		private string _約定還款帳號;
		
		private System.Nullable<decimal> _InterestRateLowerBound;
		
		private System.Nullable<System.DateTime> _InterestRateLowerBoundExpiration;
		
		private System.Nullable<bool> _UseNegoLoan;
		
		private string _LoanCreditNo;
		
		private string _InsuranceCreditNo;
		
		private System.Nullable<int> _LoanPeriod;
		
		private System.Nullable<int> _StartLoanAccordingTo;
		
		private System.Nullable<System.DateTime> _ChristeningDueDate;
		
		private System.Nullable<System.DateTime> _InsuranceExpiry;
		
		private System.Nullable<decimal> _InsuredCreditAmount;
		
		private System.Nullable<decimal> _CreditPercentage;
		
		private string _CreditType;
		
		private System.Nullable<bool> _AuthorizeToRepay;
		
		private System.Nullable<int> _InterestRepayingType;
		
		private System.Nullable<int> _InterestRepayingDay;
		
		private System.Nullable<decimal> _AdjustInterestRate;
		
		private string _InterestKind;
		
		private System.Nullable<bool> _UseCreditInsurance;
		
		private string _InterestType;
		
		private string _InterestAttribute;
		
		private System.Nullable<System.DateTime> _ChristeningDate;
		
		private EntityRef<CustomerOfBranch> _CustomerOfBranch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void On約定還款帳號Changing(string value);
    partial void On約定還款帳號Changed();
    partial void OnInterestRateLowerBoundChanging(System.Nullable<decimal> value);
    partial void OnInterestRateLowerBoundChanged();
    partial void OnInterestRateLowerBoundExpirationChanging(System.Nullable<System.DateTime> value);
    partial void OnInterestRateLowerBoundExpirationChanged();
    partial void OnUseNegoLoanChanging(System.Nullable<bool> value);
    partial void OnUseNegoLoanChanged();
    partial void OnLoanCreditNoChanging(string value);
    partial void OnLoanCreditNoChanged();
    partial void OnInsuranceCreditNoChanging(string value);
    partial void OnInsuranceCreditNoChanged();
    partial void OnLoanPeriodChanging(System.Nullable<int> value);
    partial void OnLoanPeriodChanged();
    partial void OnStartLoanAccordingToChanging(System.Nullable<int> value);
    partial void OnStartLoanAccordingToChanged();
    partial void OnChristeningDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChristeningDueDateChanged();
    partial void OnInsuranceExpiryChanging(System.Nullable<System.DateTime> value);
    partial void OnInsuranceExpiryChanged();
    partial void OnInsuredCreditAmountChanging(System.Nullable<decimal> value);
    partial void OnInsuredCreditAmountChanged();
    partial void OnCreditPercentageChanging(System.Nullable<decimal> value);
    partial void OnCreditPercentageChanged();
    partial void OnCreditTypeChanging(string value);
    partial void OnCreditTypeChanged();
    partial void OnAuthorizeToRepayChanging(System.Nullable<bool> value);
    partial void OnAuthorizeToRepayChanged();
    partial void OnInterestRepayingTypeChanging(System.Nullable<int> value);
    partial void OnInterestRepayingTypeChanged();
    partial void OnInterestRepayingDayChanging(System.Nullable<int> value);
    partial void OnInterestRepayingDayChanged();
    partial void OnAdjustInterestRateChanging(System.Nullable<decimal> value);
    partial void OnAdjustInterestRateChanged();
    partial void OnInterestKindChanging(string value);
    partial void OnInterestKindChanged();
    partial void OnUseCreditInsuranceChanging(System.Nullable<bool> value);
    partial void OnUseCreditInsuranceChanged();
    partial void OnInterestTypeChanging(string value);
    partial void OnInterestTypeChanged();
    partial void OnInterestAttributeChanging(string value);
    partial void OnInterestAttributeChanged();
    partial void OnChristeningDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChristeningDateChanged();
    #endregion
		
		public CustomerOfBranchExtension()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					if (this._CustomerOfBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._CustomerOfBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_約定還款帳號", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string 約定還款帳號
		{
			get
			{
				return this._約定還款帳號;
			}
			set
			{
				if ((this._約定還款帳號 != value))
				{
					this.On約定還款帳號Changing(value);
					this.SendPropertyChanging();
					this._約定還款帳號 = value;
					this.SendPropertyChanged("約定還款帳號");
					this.On約定還款帳號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestRateLowerBound", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<decimal> InterestRateLowerBound
		{
			get
			{
				return this._InterestRateLowerBound;
			}
			set
			{
				if ((this._InterestRateLowerBound != value))
				{
					this.OnInterestRateLowerBoundChanging(value);
					this.SendPropertyChanging();
					this._InterestRateLowerBound = value;
					this.SendPropertyChanged("InterestRateLowerBound");
					this.OnInterestRateLowerBoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestRateLowerBoundExpiration", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> InterestRateLowerBoundExpiration
		{
			get
			{
				return this._InterestRateLowerBoundExpiration;
			}
			set
			{
				if ((this._InterestRateLowerBoundExpiration != value))
				{
					this.OnInterestRateLowerBoundExpirationChanging(value);
					this.SendPropertyChanging();
					this._InterestRateLowerBoundExpiration = value;
					this.SendPropertyChanged("InterestRateLowerBoundExpiration");
					this.OnInterestRateLowerBoundExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseNegoLoan", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> UseNegoLoan
		{
			get
			{
				return this._UseNegoLoan;
			}
			set
			{
				if ((this._UseNegoLoan != value))
				{
					this.OnUseNegoLoanChanging(value);
					this.SendPropertyChanging();
					this._UseNegoLoan = value;
					this.SendPropertyChanged("UseNegoLoan");
					this.OnUseNegoLoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanCreditNo", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string LoanCreditNo
		{
			get
			{
				return this._LoanCreditNo;
			}
			set
			{
				if ((this._LoanCreditNo != value))
				{
					this.OnLoanCreditNoChanging(value);
					this.SendPropertyChanging();
					this._LoanCreditNo = value;
					this.SendPropertyChanged("LoanCreditNo");
					this.OnLoanCreditNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceCreditNo", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string InsuranceCreditNo
		{
			get
			{
				return this._InsuranceCreditNo;
			}
			set
			{
				if ((this._InsuranceCreditNo != value))
				{
					this.OnInsuranceCreditNoChanging(value);
					this.SendPropertyChanging();
					this._InsuranceCreditNo = value;
					this.SendPropertyChanged("InsuranceCreditNo");
					this.OnInsuranceCreditNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanPeriod", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> LoanPeriod
		{
			get
			{
				return this._LoanPeriod;
			}
			set
			{
				if ((this._LoanPeriod != value))
				{
					this.OnLoanPeriodChanging(value);
					this.SendPropertyChanging();
					this._LoanPeriod = value;
					this.SendPropertyChanged("LoanPeriod");
					this.OnLoanPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLoanAccordingTo", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> StartLoanAccordingTo
		{
			get
			{
				return this._StartLoanAccordingTo;
			}
			set
			{
				if ((this._StartLoanAccordingTo != value))
				{
					this.OnStartLoanAccordingToChanging(value);
					this.SendPropertyChanging();
					this._StartLoanAccordingTo = value;
					this.SendPropertyChanged("StartLoanAccordingTo");
					this.OnStartLoanAccordingToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChristeningDueDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.DateTime> ChristeningDueDate
		{
			get
			{
				return this._ChristeningDueDate;
			}
			set
			{
				if ((this._ChristeningDueDate != value))
				{
					this.OnChristeningDueDateChanging(value);
					this.SendPropertyChanging();
					this._ChristeningDueDate = value;
					this.SendPropertyChanged("ChristeningDueDate");
					this.OnChristeningDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceExpiry", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<System.DateTime> InsuranceExpiry
		{
			get
			{
				return this._InsuranceExpiry;
			}
			set
			{
				if ((this._InsuranceExpiry != value))
				{
					this.OnInsuranceExpiryChanging(value);
					this.SendPropertyChanging();
					this._InsuranceExpiry = value;
					this.SendPropertyChanged("InsuranceExpiry");
					this.OnInsuranceExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuredCreditAmount", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<decimal> InsuredCreditAmount
		{
			get
			{
				return this._InsuredCreditAmount;
			}
			set
			{
				if ((this._InsuredCreditAmount != value))
				{
					this.OnInsuredCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._InsuredCreditAmount = value;
					this.SendPropertyChanged("InsuredCreditAmount");
					this.OnInsuredCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditPercentage", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<decimal> CreditPercentage
		{
			get
			{
				return this._CreditPercentage;
			}
			set
			{
				if ((this._CreditPercentage != value))
				{
					this.OnCreditPercentageChanging(value);
					this.SendPropertyChanging();
					this._CreditPercentage = value;
					this.SendPropertyChanged("CreditPercentage");
					this.OnCreditPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditType", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string CreditType
		{
			get
			{
				return this._CreditType;
			}
			set
			{
				if ((this._CreditType != value))
				{
					this.OnCreditTypeChanging(value);
					this.SendPropertyChanging();
					this._CreditType = value;
					this.SendPropertyChanged("CreditType");
					this.OnCreditTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizeToRepay", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<bool> AuthorizeToRepay
		{
			get
			{
				return this._AuthorizeToRepay;
			}
			set
			{
				if ((this._AuthorizeToRepay != value))
				{
					this.OnAuthorizeToRepayChanging(value);
					this.SendPropertyChanging();
					this._AuthorizeToRepay = value;
					this.SendPropertyChanged("AuthorizeToRepay");
					this.OnAuthorizeToRepayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestRepayingType", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<int> InterestRepayingType
		{
			get
			{
				return this._InterestRepayingType;
			}
			set
			{
				if ((this._InterestRepayingType != value))
				{
					this.OnInterestRepayingTypeChanging(value);
					this.SendPropertyChanging();
					this._InterestRepayingType = value;
					this.SendPropertyChanged("InterestRepayingType");
					this.OnInterestRepayingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestRepayingDay", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> InterestRepayingDay
		{
			get
			{
				return this._InterestRepayingDay;
			}
			set
			{
				if ((this._InterestRepayingDay != value))
				{
					this.OnInterestRepayingDayChanging(value);
					this.SendPropertyChanging();
					this._InterestRepayingDay = value;
					this.SendPropertyChanged("InterestRepayingDay");
					this.OnInterestRepayingDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustInterestRate", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<decimal> AdjustInterestRate
		{
			get
			{
				return this._AdjustInterestRate;
			}
			set
			{
				if ((this._AdjustInterestRate != value))
				{
					this.OnAdjustInterestRateChanging(value);
					this.SendPropertyChanging();
					this._AdjustInterestRate = value;
					this.SendPropertyChanged("AdjustInterestRate");
					this.OnAdjustInterestRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestKind", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string InterestKind
		{
			get
			{
				return this._InterestKind;
			}
			set
			{
				if ((this._InterestKind != value))
				{
					this.OnInterestKindChanging(value);
					this.SendPropertyChanging();
					this._InterestKind = value;
					this.SendPropertyChanged("InterestKind");
					this.OnInterestKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCreditInsurance", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<bool> UseCreditInsurance
		{
			get
			{
				return this._UseCreditInsurance;
			}
			set
			{
				if ((this._UseCreditInsurance != value))
				{
					this.OnUseCreditInsuranceChanging(value);
					this.SendPropertyChanging();
					this._UseCreditInsurance = value;
					this.SendPropertyChanged("UseCreditInsurance");
					this.OnUseCreditInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestType", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string InterestType
		{
			get
			{
				return this._InterestType;
			}
			set
			{
				if ((this._InterestType != value))
				{
					this.OnInterestTypeChanging(value);
					this.SendPropertyChanging();
					this._InterestType = value;
					this.SendPropertyChanged("InterestType");
					this.OnInterestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestAttribute", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string InterestAttribute
		{
			get
			{
				return this._InterestAttribute;
			}
			set
			{
				if ((this._InterestAttribute != value))
				{
					this.OnInterestAttributeChanging(value);
					this.SendPropertyChanging();
					this._InterestAttribute = value;
					this.SendPropertyChanged("InterestAttribute");
					this.OnInterestAttributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChristeningDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public System.Nullable<System.DateTime> ChristeningDate
		{
			get
			{
				return this._ChristeningDate;
			}
			set
			{
				if ((this._ChristeningDate != value))
				{
					this.OnChristeningDateChanging(value);
					this.SendPropertyChanging();
					this._ChristeningDate = value;
					this.SendPropertyChanged("ChristeningDate");
					this.OnChristeningDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranch_CustomerOfBranchExtension", Storage="_CustomerOfBranch", ThisKey="BankCode,CompanyID", OtherKey="BankCode,CompanyID", IsForeignKey=true)]
		public CustomerOfBranch CustomerOfBranch
		{
			get
			{
				return this._CustomerOfBranch.Entity;
			}
			set
			{
				CustomerOfBranch previousValue = this._CustomerOfBranch.Entity;
				if (((previousValue != value) 
							|| (this._CustomerOfBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerOfBranch.Entity = null;
						previousValue.CustomerOfBranchExtension = null;
					}
					this._CustomerOfBranch.Entity = value;
					if ((value != null))
					{
						value.CustomerOfBranchExtension = this;
						this._BankCode = value.BankCode;
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._BankCode = default(string);
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("CustomerOfBranch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CustomerOfBranch = default(EntityRef<CustomerOfBranch>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FpgBeneficiaryStatus")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FpgBeneficiaryStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BankCode;
		
		private int _ApplicantID;
		
		private int _BeneID;
		
		private System.Nullable<decimal> _押匯允差比例;
		
		private System.Nullable<int> _押匯允差比例狀態;
		
		private string _押匯允差比例退回原因;
		
		private EntityRef<BeneficiaryData> _BeneficiaryData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnApplicantIDChanging(int value);
    partial void OnApplicantIDChanged();
    partial void OnBeneIDChanging(int value);
    partial void OnBeneIDChanged();
    partial void On押匯允差比例Changing(System.Nullable<decimal> value);
    partial void On押匯允差比例Changed();
    partial void On押匯允差比例狀態Changing(System.Nullable<int> value);
    partial void On押匯允差比例狀態Changed();
    partial void On押匯允差比例退回原因Changing(string value);
    partial void On押匯允差比例退回原因Changed();
    #endregion
		
		public FpgBeneficiaryStatus()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ApplicantID
		{
			get
			{
				return this._ApplicantID;
			}
			set
			{
				if ((this._ApplicantID != value))
				{
					this.OnApplicantIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicantID = value;
					this.SendPropertyChanged("ApplicantID");
					this.OnApplicantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int BeneID
		{
			get
			{
				return this._BeneID;
			}
			set
			{
				if ((this._BeneID != value))
				{
					if (this._BeneficiaryData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBeneIDChanging(value);
					this.SendPropertyChanging();
					this._BeneID = value;
					this.SendPropertyChanged("BeneID");
					this.OnBeneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_押匯允差比例", DbType="Decimal(12,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<decimal> 押匯允差比例
		{
			get
			{
				return this._押匯允差比例;
			}
			set
			{
				if ((this._押匯允差比例 != value))
				{
					this.On押匯允差比例Changing(value);
					this.SendPropertyChanging();
					this._押匯允差比例 = value;
					this.SendPropertyChanged("押匯允差比例");
					this.On押匯允差比例Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_押匯允差比例狀態", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> 押匯允差比例狀態
		{
			get
			{
				return this._押匯允差比例狀態;
			}
			set
			{
				if ((this._押匯允差比例狀態 != value))
				{
					this.On押匯允差比例狀態Changing(value);
					this.SendPropertyChanging();
					this._押匯允差比例狀態 = value;
					this.SendPropertyChanged("押匯允差比例狀態");
					this.On押匯允差比例狀態Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_押匯允差比例退回原因", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string 押匯允差比例退回原因
		{
			get
			{
				return this._押匯允差比例退回原因;
			}
			set
			{
				if ((this._押匯允差比例退回原因 != value))
				{
					this.On押匯允差比例退回原因Changing(value);
					this.SendPropertyChanging();
					this._押匯允差比例退回原因 = value;
					this.SendPropertyChanged("押匯允差比例退回原因");
					this.On押匯允差比例退回原因Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryData_FpgBeneficiaryStatus", Storage="_BeneficiaryData", ThisKey="BeneID", OtherKey="BeneID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BeneficiaryData BeneficiaryData
		{
			get
			{
				return this._BeneficiaryData.Entity;
			}
			set
			{
				BeneficiaryData previousValue = this._BeneficiaryData.Entity;
				if (((previousValue != value) 
							|| (this._BeneficiaryData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BeneficiaryData.Entity = null;
						previousValue.FpgBeneficiaryStatus.Remove(this);
					}
					this._BeneficiaryData.Entity = value;
					if ((value != null))
					{
						value.FpgBeneficiaryStatus.Add(this);
						this._BeneID = value.BeneID;
					}
					else
					{
						this._BeneID = default(int);
					}
					this.SendPropertyChanged("BeneficiaryData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BeneficiaryData = default(EntityRef<BeneficiaryData>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CreditInsuranceLoan")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CreditInsuranceLoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanID;
		
		private System.Nullable<int> _L1000ID;
		
		private string _AttachedFile;
		
		private System.Nullable<decimal> _LoanAmount;
		
		private System.Nullable<decimal> _LoanPercentage;
		
		private string _ACTNO;
		
		private string _MGNO;
		
		private System.Nullable<decimal> _ACTBAL;
		
		private EntityRef<L1000> _L1000;
		
		private EntityRef<NegoLoan> _NegoLoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanIDChanging(int value);
    partial void OnLoanIDChanged();
    partial void OnL1000IDChanging(System.Nullable<int> value);
    partial void OnL1000IDChanged();
    partial void OnAttachedFileChanging(string value);
    partial void OnAttachedFileChanged();
    partial void OnLoanAmountChanging(System.Nullable<decimal> value);
    partial void OnLoanAmountChanged();
    partial void OnLoanPercentageChanging(System.Nullable<decimal> value);
    partial void OnLoanPercentageChanged();
    partial void OnACTNOChanging(string value);
    partial void OnACTNOChanged();
    partial void OnMGNOChanging(string value);
    partial void OnMGNOChanged();
    partial void OnACTBALChanging(System.Nullable<decimal> value);
    partial void OnACTBALChanged();
    #endregion
		
		public CreditInsuranceLoan()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LoanID
		{
			get
			{
				return this._LoanID;
			}
			set
			{
				if ((this._LoanID != value))
				{
					if (this._NegoLoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIDChanging(value);
					this.SendPropertyChanging();
					this._LoanID = value;
					this.SendPropertyChanged("LoanID");
					this.OnLoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1000ID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> L1000ID
		{
			get
			{
				return this._L1000ID;
			}
			set
			{
				if ((this._L1000ID != value))
				{
					if (this._L1000.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnL1000IDChanging(value);
					this.SendPropertyChanging();
					this._L1000ID = value;
					this.SendPropertyChanged("L1000ID");
					this.OnL1000IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachedFile", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string AttachedFile
		{
			get
			{
				return this._AttachedFile;
			}
			set
			{
				if ((this._AttachedFile != value))
				{
					this.OnAttachedFileChanging(value);
					this.SendPropertyChanging();
					this._AttachedFile = value;
					this.SendPropertyChanged("AttachedFile");
					this.OnAttachedFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanAmount", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<decimal> LoanAmount
		{
			get
			{
				return this._LoanAmount;
			}
			set
			{
				if ((this._LoanAmount != value))
				{
					this.OnLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._LoanAmount = value;
					this.SendPropertyChanged("LoanAmount");
					this.OnLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanPercentage", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> LoanPercentage
		{
			get
			{
				return this._LoanPercentage;
			}
			set
			{
				if ((this._LoanPercentage != value))
				{
					this.OnLoanPercentageChanging(value);
					this.SendPropertyChanging();
					this._LoanPercentage = value;
					this.SendPropertyChanged("LoanPercentage");
					this.OnLoanPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTNO", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string ACTNO
		{
			get
			{
				return this._ACTNO;
			}
			set
			{
				if ((this._ACTNO != value))
				{
					this.OnACTNOChanging(value);
					this.SendPropertyChanging();
					this._ACTNO = value;
					this.SendPropertyChanged("ACTNO");
					this.OnACTNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MGNO", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string MGNO
		{
			get
			{
				return this._MGNO;
			}
			set
			{
				if ((this._MGNO != value))
				{
					this.OnMGNOChanging(value);
					this.SendPropertyChanging();
					this._MGNO = value;
					this.SendPropertyChanged("MGNO");
					this.OnMGNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTBAL", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<decimal> ACTBAL
		{
			get
			{
				return this._ACTBAL;
			}
			set
			{
				if ((this._ACTBAL != value))
				{
					this.OnACTBALChanging(value);
					this.SendPropertyChanging();
					this._ACTBAL = value;
					this.SendPropertyChanged("ACTBAL");
					this.OnACTBALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="L1000_CreditInsuranceLoan", Storage="_L1000", ThisKey="L1000ID", OtherKey="L1000ID", IsForeignKey=true)]
		public L1000 L1000
		{
			get
			{
				return this._L1000.Entity;
			}
			set
			{
				L1000 previousValue = this._L1000.Entity;
				if (((previousValue != value) 
							|| (this._L1000.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._L1000.Entity = null;
						previousValue.CreditInsuranceLoans.Remove(this);
					}
					this._L1000.Entity = value;
					if ((value != null))
					{
						value.CreditInsuranceLoans.Add(this);
						this._L1000ID = value.L1000ID;
					}
					else
					{
						this._L1000ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("L1000");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoLoan_CreditInsuranceLoan", Storage="_NegoLoan", ThisKey="LoanID", OtherKey="LoanID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NegoLoan NegoLoan
		{
			get
			{
				return this._NegoLoan.Entity;
			}
			set
			{
				NegoLoan previousValue = this._NegoLoan.Entity;
				if (((previousValue != value) 
							|| (this._NegoLoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoLoan.Entity = null;
						previousValue.CreditInsuranceLoan = null;
					}
					this._NegoLoan.Entity = value;
					if ((value != null))
					{
						value.CreditInsuranceLoan = this;
						this._LoanID = value.LoanID;
					}
					else
					{
						this._LoanID = default(int);
					}
					this.SendPropertyChanged("NegoLoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._L1000 = default(EntityRef<L1000>);
			this._NegoLoan = default(EntityRef<NegoLoan>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NegoLoanRepayment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NegoLoanRepayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RepaymentID;
		
		private System.Nullable<System.DateTime> _RepaymentDate;
		
		private System.Nullable<decimal> _RepaymentAmount;
		
		private System.Nullable<decimal> _InterestAmount;
		
		private int _LoanID;
		
		private System.Nullable<int> _TxnCode;
		
		private EntityRef<Documentary> _Documentary;
		
		private EntityRef<NegoLoan> _NegoLoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepaymentIDChanging(int value);
    partial void OnRepaymentIDChanged();
    partial void OnRepaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRepaymentDateChanged();
    partial void OnRepaymentAmountChanging(System.Nullable<decimal> value);
    partial void OnRepaymentAmountChanged();
    partial void OnInterestAmountChanging(System.Nullable<decimal> value);
    partial void OnInterestAmountChanged();
    partial void OnLoanIDChanging(int value);
    partial void OnLoanIDChanged();
    partial void OnTxnCodeChanging(System.Nullable<int> value);
    partial void OnTxnCodeChanged();
    #endregion
		
		public NegoLoanRepayment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RepaymentID
		{
			get
			{
				return this._RepaymentID;
			}
			set
			{
				if ((this._RepaymentID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRepaymentIDChanging(value);
					this.SendPropertyChanging();
					this._RepaymentID = value;
					this.SendPropertyChanged("RepaymentID");
					this.OnRepaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> RepaymentDate
		{
			get
			{
				return this._RepaymentDate;
			}
			set
			{
				if ((this._RepaymentDate != value))
				{
					this.OnRepaymentDateChanging(value);
					this.SendPropertyChanging();
					this._RepaymentDate = value;
					this.SendPropertyChanged("RepaymentDate");
					this.OnRepaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentAmount", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<decimal> RepaymentAmount
		{
			get
			{
				return this._RepaymentAmount;
			}
			set
			{
				if ((this._RepaymentAmount != value))
				{
					this.OnRepaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._RepaymentAmount = value;
					this.SendPropertyChanged("RepaymentAmount");
					this.OnRepaymentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestAmount", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<decimal> InterestAmount
		{
			get
			{
				return this._InterestAmount;
			}
			set
			{
				if ((this._InterestAmount != value))
				{
					this.OnInterestAmountChanging(value);
					this.SendPropertyChanging();
					this._InterestAmount = value;
					this.SendPropertyChanged("InterestAmount");
					this.OnInterestAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int LoanID
		{
			get
			{
				return this._LoanID;
			}
			set
			{
				if ((this._LoanID != value))
				{
					if (this._NegoLoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIDChanging(value);
					this.SendPropertyChanging();
					this._LoanID = value;
					this.SendPropertyChanged("LoanID");
					this.OnLoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TxnCode", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> TxnCode
		{
			get
			{
				return this._TxnCode;
			}
			set
			{
				if ((this._TxnCode != value))
				{
					this.OnTxnCodeChanging(value);
					this.SendPropertyChanging();
					this._TxnCode = value;
					this.SendPropertyChanged("TxnCode");
					this.OnTxnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_NegoLoanRepayment", Storage="_Documentary", ThisKey="RepaymentID", OtherKey="DocID", IsForeignKey=true)]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.NegoLoanRepayment = null;
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.NegoLoanRepayment = this;
						this._RepaymentID = value.DocID;
					}
					else
					{
						this._RepaymentID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoLoan_NegoLoanRepayment", Storage="_NegoLoan", ThisKey="LoanID", OtherKey="LoanID", IsForeignKey=true)]
		public NegoLoan NegoLoan
		{
			get
			{
				return this._NegoLoan.Entity;
			}
			set
			{
				NegoLoan previousValue = this._NegoLoan.Entity;
				if (((previousValue != value) 
							|| (this._NegoLoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoLoan.Entity = null;
						previousValue.NegoLoanRepayment.Remove(this);
					}
					this._NegoLoan.Entity = value;
					if ((value != null))
					{
						value.NegoLoanRepayment.Add(this);
						this._LoanID = value.LoanID;
					}
					else
					{
						this._LoanID = default(int);
					}
					this.SendPropertyChanged("NegoLoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Documentary = default(EntityRef<Documentary>);
			this._NegoLoan = default(EntityRef<NegoLoan>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerOfBranchLevel")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomerOfBranchLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BankCode;
		
		private int _CompanyID;
		
		private System.DateTime _LevelDate;
		
		private int _LevelID;
		
		private string _Actor;
		
		private EntityRef<CustomerOfBranch> _CustomerOfBranch;
		
		private EntityRef<LevelExpression> _LevelExpression;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnLevelDateChanging(System.DateTime value);
    partial void OnLevelDateChanged();
    partial void OnLevelIDChanging(int value);
    partial void OnLevelIDChanged();
    partial void OnActorChanging(string value);
    partial void OnActorChanged();
    #endregion
		
		public CustomerOfBranchLevel()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					if (this._CustomerOfBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._CustomerOfBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime LevelDate
		{
			get
			{
				return this._LevelDate;
			}
			set
			{
				if ((this._LevelDate != value))
				{
					this.OnLevelDateChanging(value);
					this.SendPropertyChanging();
					this._LevelDate = value;
					this.SendPropertyChanged("LevelDate");
					this.OnLevelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					if (this._LevelExpression.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actor", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Actor
		{
			get
			{
				return this._Actor;
			}
			set
			{
				if ((this._Actor != value))
				{
					this.OnActorChanging(value);
					this.SendPropertyChanging();
					this._Actor = value;
					this.SendPropertyChanged("Actor");
					this.OnActorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranch_CustomerOfBranchLevel", Storage="_CustomerOfBranch", ThisKey="BankCode,CompanyID", OtherKey="BankCode,CompanyID", IsForeignKey=true)]
		public CustomerOfBranch CustomerOfBranch
		{
			get
			{
				return this._CustomerOfBranch.Entity;
			}
			set
			{
				CustomerOfBranch previousValue = this._CustomerOfBranch.Entity;
				if (((previousValue != value) 
							|| (this._CustomerOfBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerOfBranch.Entity = null;
						previousValue.CustomerOfBranchLevel.Remove(this);
					}
					this._CustomerOfBranch.Entity = value;
					if ((value != null))
					{
						value.CustomerOfBranchLevel.Add(this);
						this._BankCode = value.BankCode;
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._BankCode = default(string);
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("CustomerOfBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_CustomerOfBranchLevel", Storage="_LevelExpression", ThisKey="LevelID", OtherKey="LevelID", IsForeignKey=true)]
		public LevelExpression LevelExpression
		{
			get
			{
				return this._LevelExpression.Entity;
			}
			set
			{
				LevelExpression previousValue = this._LevelExpression.Entity;
				if (((previousValue != value) 
							|| (this._LevelExpression.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LevelExpression.Entity = null;
						previousValue.CustomerOfBranchLevels.Remove(this);
					}
					this._LevelExpression.Entity = value;
					if ((value != null))
					{
						value.CustomerOfBranchLevels.Add(this);
						this._LevelID = value.LevelID;
					}
					else
					{
						this._LevelID = default(int);
					}
					this.SendPropertyChanged("LevelExpression");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CustomerOfBranch = default(EntityRef<CustomerOfBranch>);
			this._LevelExpression = default(EntityRef<LevelExpression>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationStatus")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OrganizationStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyID;
		
		private System.Nullable<bool> _SelectedAsBeneficiary;
		
		private System.Nullable<bool> _FpgNegoBeneficiary;
		
		private string _ReserveAccount;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<int> _ReserveAccountStatus;
		
		private string _ReserveAccountName;
		
		private string _ReserveAccountReceiptNo;
		
		private string _CustomerID;
		
		private System.Nullable<int> _LogID;
		
		private System.Nullable<System.Guid> _RecordID;
		
		private System.Nullable<int> _CustomerStatus;
		
		private System.Nullable<decimal> _HandlingCharge;
		
		private System.Nullable<decimal> _StepCharge;
		
		private EntityRef<RevisionLog> _RevisionLog;
		
		private EntityRef<BeneficiaryGroup> _BeneficiaryGroup;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnSelectedAsBeneficiaryChanging(System.Nullable<bool> value);
    partial void OnSelectedAsBeneficiaryChanged();
    partial void OnFpgNegoBeneficiaryChanging(System.Nullable<bool> value);
    partial void OnFpgNegoBeneficiaryChanged();
    partial void OnReserveAccountChanging(string value);
    partial void OnReserveAccountChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnReserveAccountStatusChanging(System.Nullable<int> value);
    partial void OnReserveAccountStatusChanged();
    partial void OnReserveAccountNameChanging(string value);
    partial void OnReserveAccountNameChanged();
    partial void OnReserveAccountReceiptNoChanging(string value);
    partial void OnReserveAccountReceiptNoChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnLogIDChanging(System.Nullable<int> value);
    partial void OnLogIDChanged();
    partial void OnRecordIDChanging(System.Nullable<System.Guid> value);
    partial void OnRecordIDChanged();
    partial void OnCustomerStatusChanging(System.Nullable<int> value);
    partial void OnCustomerStatusChanged();
    partial void OnHandlingChargeChanging(System.Nullable<decimal> value);
    partial void OnHandlingChargeChanged();
    partial void OnStepChargeChanging(System.Nullable<decimal> value);
    partial void OnStepChargeChanged();
    #endregion
		
		public OrganizationStatus()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectedAsBeneficiary", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<bool> SelectedAsBeneficiary
		{
			get
			{
				return this._SelectedAsBeneficiary;
			}
			set
			{
				if ((this._SelectedAsBeneficiary != value))
				{
					this.OnSelectedAsBeneficiaryChanging(value);
					this.SendPropertyChanging();
					this._SelectedAsBeneficiary = value;
					this.SendPropertyChanged("SelectedAsBeneficiary");
					this.OnSelectedAsBeneficiaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FpgNegoBeneficiary", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> FpgNegoBeneficiary
		{
			get
			{
				return this._FpgNegoBeneficiary;
			}
			set
			{
				if ((this._FpgNegoBeneficiary != value))
				{
					this.OnFpgNegoBeneficiaryChanging(value);
					this.SendPropertyChanging();
					this._FpgNegoBeneficiary = value;
					this.SendPropertyChanged("FpgNegoBeneficiary");
					this.OnFpgNegoBeneficiaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReserveAccount", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ReserveAccount
		{
			get
			{
				return this._ReserveAccount;
			}
			set
			{
				if ((this._ReserveAccount != value))
				{
					this.OnReserveAccountChanging(value);
					this.SendPropertyChanging();
					this._ReserveAccount = value;
					this.SendPropertyChanged("ReserveAccount");
					this.OnReserveAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._BeneficiaryGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReserveAccountStatus", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> ReserveAccountStatus
		{
			get
			{
				return this._ReserveAccountStatus;
			}
			set
			{
				if ((this._ReserveAccountStatus != value))
				{
					this.OnReserveAccountStatusChanging(value);
					this.SendPropertyChanging();
					this._ReserveAccountStatus = value;
					this.SendPropertyChanged("ReserveAccountStatus");
					this.OnReserveAccountStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReserveAccountName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string ReserveAccountName
		{
			get
			{
				return this._ReserveAccountName;
			}
			set
			{
				if ((this._ReserveAccountName != value))
				{
					this.OnReserveAccountNameChanging(value);
					this.SendPropertyChanging();
					this._ReserveAccountName = value;
					this.SendPropertyChanged("ReserveAccountName");
					this.OnReserveAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReserveAccountReceiptNo", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ReserveAccountReceiptNo
		{
			get
			{
				return this._ReserveAccountReceiptNo;
			}
			set
			{
				if ((this._ReserveAccountReceiptNo != value))
				{
					this.OnReserveAccountReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReserveAccountReceiptNo = value;
					this.SendPropertyChanged("ReserveAccountReceiptNo");
					this.OnReserveAccountReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					if (this._RevisionLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.Guid> RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this.OnRecordIDChanging(value);
					this.SendPropertyChanging();
					this._RecordID = value;
					this.SendPropertyChanged("RecordID");
					this.OnRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerStatus", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> CustomerStatus
		{
			get
			{
				return this._CustomerStatus;
			}
			set
			{
				if ((this._CustomerStatus != value))
				{
					this.OnCustomerStatusChanging(value);
					this.SendPropertyChanging();
					this._CustomerStatus = value;
					this.SendPropertyChanged("CustomerStatus");
					this.OnCustomerStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandlingCharge", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<decimal> HandlingCharge
		{
			get
			{
				return this._HandlingCharge;
			}
			set
			{
				if ((this._HandlingCharge != value))
				{
					this.OnHandlingChargeChanging(value);
					this.SendPropertyChanging();
					this._HandlingCharge = value;
					this.SendPropertyChanged("HandlingCharge");
					this.OnHandlingChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepCharge", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<decimal> StepCharge
		{
			get
			{
				return this._StepCharge;
			}
			set
			{
				if ((this._StepCharge != value))
				{
					this.OnStepChargeChanging(value);
					this.SendPropertyChanging();
					this._StepCharge = value;
					this.SendPropertyChanged("StepCharge");
					this.OnStepChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RevisionLog_OrganizationStatus", Storage="_RevisionLog", ThisKey="LogID", OtherKey="LogID", IsForeignKey=true)]
		public RevisionLog RevisionLog
		{
			get
			{
				return this._RevisionLog.Entity;
			}
			set
			{
				RevisionLog previousValue = this._RevisionLog.Entity;
				if (((previousValue != value) 
							|| (this._RevisionLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RevisionLog.Entity = null;
						previousValue.OrganizationStatus.Remove(this);
					}
					this._RevisionLog.Entity = value;
					if ((value != null))
					{
						value.OrganizationStatus.Add(this);
						this._LogID = value.LogID;
					}
					else
					{
						this._LogID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RevisionLog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryGroup_OrganizationStatus", Storage="_BeneficiaryGroup", ThisKey="GroupID", OtherKey="GroupID", IsForeignKey=true)]
		public BeneficiaryGroup BeneficiaryGroup
		{
			get
			{
				return this._BeneficiaryGroup.Entity;
			}
			set
			{
				BeneficiaryGroup previousValue = this._BeneficiaryGroup.Entity;
				if (((previousValue != value) 
							|| (this._BeneficiaryGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BeneficiaryGroup.Entity = null;
						previousValue.OrganizationStatus.Remove(this);
					}
					this._BeneficiaryGroup.Entity = value;
					if ((value != null))
					{
						value.OrganizationStatus.Add(this);
						this._GroupID = value.GroupID;
					}
					else
					{
						this._GroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BeneficiaryGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationStatus", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.OrganizationStatus = null;
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.OrganizationStatus = this;
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._RevisionLog = default(EntityRef<RevisionLog>);
			this._BeneficiaryGroup = default(EntityRef<BeneficiaryGroup>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RevisionLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RevisionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private string _Actor;
		
		private System.DateTime _RevisionDate;
		
		private System.Nullable<System.Guid> _RevsionSource;
		
		private EntitySet<OrganizationStatus> _OrganizationStatus;
		
		private EntitySet<OrganizationBranchSettings> _OrganizationBranchSettings;
		
		private EntitySet<BeneficiaryData> _BeneficiaryData;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnActorChanging(string value);
    partial void OnActorChanged();
    partial void OnRevisionDateChanging(System.DateTime value);
    partial void OnRevisionDateChanged();
    partial void OnRevsionSourceChanging(System.Nullable<System.Guid> value);
    partial void OnRevsionSourceChanged();
    #endregion
		
		public RevisionLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actor", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Actor
		{
			get
			{
				return this._Actor;
			}
			set
			{
				if ((this._Actor != value))
				{
					this.OnActorChanging(value);
					this.SendPropertyChanging();
					this._Actor = value;
					this.SendPropertyChanged("Actor");
					this.OnActorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime RevisionDate
		{
			get
			{
				return this._RevisionDate;
			}
			set
			{
				if ((this._RevisionDate != value))
				{
					this.OnRevisionDateChanging(value);
					this.SendPropertyChanging();
					this._RevisionDate = value;
					this.SendPropertyChanged("RevisionDate");
					this.OnRevisionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevsionSource", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.Guid> RevsionSource
		{
			get
			{
				return this._RevsionSource;
			}
			set
			{
				if ((this._RevsionSource != value))
				{
					this.OnRevsionSourceChanging(value);
					this.SendPropertyChanging();
					this._RevsionSource = value;
					this.SendPropertyChanged("RevsionSource");
					this.OnRevsionSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RevisionLog_OrganizationStatus", Storage="_OrganizationStatus", ThisKey="LogID", OtherKey="LogID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<OrganizationStatus> OrganizationStatus
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationStatus.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OrganizationStatus;
			}
			set
			{
				this._OrganizationStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RevisionLog_OrganizationBranchSettings", Storage="_OrganizationBranchSettings", ThisKey="LogID", OtherKey="LogID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<OrganizationBranchSettings> OrganizationBranchSettings
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationBranchSettings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OrganizationBranchSettings;
			}
			set
			{
				this._OrganizationBranchSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RevisionLog_BeneficiaryData", Storage="_BeneficiaryData", ThisKey="LogID", OtherKey="LogID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<BeneficiaryData> BeneficiaryData
		{
			get
			{
				if ((this.serializing 
							&& (this._BeneficiaryData.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BeneficiaryData;
			}
			set
			{
				this._BeneficiaryData.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrganizationStatus(OrganizationStatus entity)
		{
			this.SendPropertyChanging();
			entity.RevisionLog = this;
		}
		
		private void detach_OrganizationStatus(OrganizationStatus entity)
		{
			this.SendPropertyChanging();
			entity.RevisionLog = null;
		}
		
		private void attach_OrganizationBranchSettings(OrganizationBranchSettings entity)
		{
			this.SendPropertyChanging();
			entity.RevisionLog = this;
		}
		
		private void detach_OrganizationBranchSettings(OrganizationBranchSettings entity)
		{
			this.SendPropertyChanging();
			entity.RevisionLog = null;
		}
		
		private void attach_BeneficiaryData(BeneficiaryData entity)
		{
			this.SendPropertyChanging();
			entity.RevisionLog = this;
		}
		
		private void detach_BeneficiaryData(BeneficiaryData entity)
		{
			this.SendPropertyChanging();
			entity.RevisionLog = null;
		}
		
		private void Initialize()
		{
			this._OrganizationStatus = new EntitySet<OrganizationStatus>(new Action<OrganizationStatus>(this.attach_OrganizationStatus), new Action<OrganizationStatus>(this.detach_OrganizationStatus));
			this._OrganizationBranchSettings = new EntitySet<OrganizationBranchSettings>(new Action<OrganizationBranchSettings>(this.attach_OrganizationBranchSettings), new Action<OrganizationBranchSettings>(this.detach_OrganizationBranchSettings));
			this._BeneficiaryData = new EntitySet<BeneficiaryData>(new Action<BeneficiaryData>(this.attach_BeneficiaryData), new Action<BeneficiaryData>(this.detach_BeneficiaryData));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.F0390")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class F0390 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VersionID;
		
		private string _EAI_Content;
		
		private EntityRef<CustomerOfBranchVersion> _CustomerOfBranchVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVersionIDChanging(int value);
    partial void OnVersionIDChanged();
    partial void OnEAI_ContentChanging(string value);
    partial void OnEAI_ContentChanged();
    #endregion
		
		public F0390()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int VersionID
		{
			get
			{
				return this._VersionID;
			}
			set
			{
				if ((this._VersionID != value))
				{
					if (this._CustomerOfBranchVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionIDChanging(value);
					this.SendPropertyChanging();
					this._VersionID = value;
					this.SendPropertyChanged("VersionID");
					this.OnVersionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EAI_Content", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string EAI_Content
		{
			get
			{
				return this._EAI_Content;
			}
			set
			{
				if ((this._EAI_Content != value))
				{
					this.OnEAI_ContentChanging(value);
					this.SendPropertyChanging();
					this._EAI_Content = value;
					this.SendPropertyChanged("EAI_Content");
					this.OnEAI_ContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_F0390", Storage="_CustomerOfBranchVersion", ThisKey="VersionID", OtherKey="VersionID", IsForeignKey=true)]
		public CustomerOfBranchVersion CustomerOfBranchVersion
		{
			get
			{
				return this._CustomerOfBranchVersion.Entity;
			}
			set
			{
				CustomerOfBranchVersion previousValue = this._CustomerOfBranchVersion.Entity;
				if (((previousValue != value) 
							|| (this._CustomerOfBranchVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerOfBranchVersion.Entity = null;
						previousValue.F0390 = null;
					}
					this._CustomerOfBranchVersion.Entity = value;
					if ((value != null))
					{
						value.F0390 = this;
						this._VersionID = value.VersionID;
					}
					else
					{
						this._VersionID = default(int);
					}
					this.SendPropertyChanged("CustomerOfBranchVersion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CustomerOfBranchVersion = default(EntityRef<CustomerOfBranchVersion>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FR062")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FR062 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VersionID;
		
		private string _EAI_Content;
		
		private EntityRef<CustomerOfBranchVersion> _CustomerOfBranchVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVersionIDChanging(int value);
    partial void OnVersionIDChanged();
    partial void OnEAI_ContentChanging(string value);
    partial void OnEAI_ContentChanged();
    #endregion
		
		public FR062()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int VersionID
		{
			get
			{
				return this._VersionID;
			}
			set
			{
				if ((this._VersionID != value))
				{
					if (this._CustomerOfBranchVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionIDChanging(value);
					this.SendPropertyChanging();
					this._VersionID = value;
					this.SendPropertyChanged("VersionID");
					this.OnVersionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EAI_Content", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string EAI_Content
		{
			get
			{
				return this._EAI_Content;
			}
			set
			{
				if ((this._EAI_Content != value))
				{
					this.OnEAI_ContentChanging(value);
					this.SendPropertyChanging();
					this._EAI_Content = value;
					this.SendPropertyChanged("EAI_Content");
					this.OnEAI_ContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_FR062", Storage="_CustomerOfBranchVersion", ThisKey="VersionID", OtherKey="VersionID", IsForeignKey=true)]
		public CustomerOfBranchVersion CustomerOfBranchVersion
		{
			get
			{
				return this._CustomerOfBranchVersion.Entity;
			}
			set
			{
				CustomerOfBranchVersion previousValue = this._CustomerOfBranchVersion.Entity;
				if (((previousValue != value) 
							|| (this._CustomerOfBranchVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerOfBranchVersion.Entity = null;
						previousValue.FR062 = null;
					}
					this._CustomerOfBranchVersion.Entity = value;
					if ((value != null))
					{
						value.FR062 = this;
						this._VersionID = value.VersionID;
					}
					else
					{
						this._VersionID = default(int);
					}
					this.SendPropertyChanged("CustomerOfBranchVersion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CustomerOfBranchVersion = default(EntityRef<CustomerOfBranchVersion>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AMLComment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AMLComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VersionID;
		
		private string _EAI_Content;
		
		private EntityRef<CustomerOfBranchVersion> _CustomerOfBranchVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVersionIDChanging(int value);
    partial void OnVersionIDChanged();
    partial void OnEAI_ContentChanging(string value);
    partial void OnEAI_ContentChanged();
    #endregion
		
		public AMLComment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int VersionID
		{
			get
			{
				return this._VersionID;
			}
			set
			{
				if ((this._VersionID != value))
				{
					if (this._CustomerOfBranchVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionIDChanging(value);
					this.SendPropertyChanging();
					this._VersionID = value;
					this.SendPropertyChanged("VersionID");
					this.OnVersionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EAI_Content", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string EAI_Content
		{
			get
			{
				return this._EAI_Content;
			}
			set
			{
				if ((this._EAI_Content != value))
				{
					this.OnEAI_ContentChanging(value);
					this.SendPropertyChanging();
					this._EAI_Content = value;
					this.SendPropertyChanged("EAI_Content");
					this.OnEAI_ContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_AMLComment", Storage="_CustomerOfBranchVersion", ThisKey="VersionID", OtherKey="VersionID", IsForeignKey=true)]
		public CustomerOfBranchVersion CustomerOfBranchVersion
		{
			get
			{
				return this._CustomerOfBranchVersion.Entity;
			}
			set
			{
				CustomerOfBranchVersion previousValue = this._CustomerOfBranchVersion.Entity;
				if (((previousValue != value) 
							|| (this._CustomerOfBranchVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerOfBranchVersion.Entity = null;
						previousValue.AMLComment = null;
					}
					this._CustomerOfBranchVersion.Entity = value;
					if ((value != null))
					{
						value.AMLComment = this;
						this._VersionID = value.VersionID;
					}
					else
					{
						this._VersionID = default(int);
					}
					this.SendPropertyChanged("CustomerOfBranchVersion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CustomerOfBranchVersion = default(EntityRef<CustomerOfBranchVersion>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentNotification")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PaymentNotification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<decimal> _實際送保金額;
		
		private int _PaymentID;
		
		private System.Nullable<bool> _個人金融授信;
		
		private System.Nullable<bool> _企業金融授信;
		
		private string _CustomerID;
		
		private string _保證人統編_1;
		
		private string _保證人統編_2;
		
		private string _保證人統編_3;
		
		private System.Nullable<int> _擔保品放貸文件徵提;
		
		private string _扣款帳號;
		
		private System.Nullable<int> _費用收取;
		
		private System.Nullable<decimal> _保證手續費;
		
		private System.Nullable<decimal> _開改狀手續費;
		
		private System.Nullable<decimal> _承兌手續費;
		
		private System.Nullable<decimal> _保證金;
		
		private System.Nullable<decimal> _開辦費;
		
		private System.Nullable<bool> _借新還舊;
		
		private System.Nullable<bool> _信用狀改貸;
		
		private string _借戶帳號;
		
		private System.Nullable<decimal> _借戶本金;
		
		private System.Nullable<decimal> _借戶利息;
		
		private System.Nullable<int> _貸款種類;
		
		private string _貸款種類其他;
		
		private string _會計科目;
		
		private System.Nullable<System.DateTime> _批准日期;
		
		private string _額度號碼;
		
		private System.Nullable<System.DateTime> _貸放期限;
		
		private System.Nullable<int> _貸放期限月;
		
		private System.Nullable<int> _貸放期限天;
		
		private System.Nullable<decimal> _手續費率;
		
		private System.Nullable<decimal> _墊款利率;
		
		private string _交易憑證號碼;
		
		private string _用途別;
		
		private string _帳戶性質;
		
		private System.Nullable<decimal> _貸放金額;
		
		private System.Nullable<System.DateTime> _初放貸放日;
		
		private System.Nullable<System.DateTime> _貸放到期日;
		
		private string _還本方式;
		
		private string _利率型態;
		
		private System.Nullable<int> _本筆寬限期;
		
		private string _入戶帳號;
		
		private System.Nullable<decimal> _信保成數;
		
		private string _信保種類;
		
		private string _撥款方式;
		
		private string _現轉別;
		
		private string _銷帳編號;
		
		private string _融資業務分類;
		
		private string _政府專案補助貸款分類;
		
		private System.Nullable<System.DateTime> _掃描日期;
		
		private string _貸放明細其他;
		
		private System.Nullable<bool> _票據使用不良紀錄;
		
		private System.Nullable<bool> _押匯未清償;
		
		private System.Nullable<bool> _授信戶本金逾期;
		
		private System.Nullable<bool> _積欠利息;
		
		private string _聯絡事項;
		
		private string _授信支援主管;
		
		private string _放款作業專員;
		
		private string _帳戶管理員;
		
		private string _風管組組長;
		
		private string _審核經辦;
		
		private string _放款負責人;
		
		private string _記帳員;
		
		private string _區域中心紀錄;
		
		private System.Nullable<System.DateTime> _放出日期;
		
		private string _放款帳支號;
		
		private string _影像檔編號;
		
		private System.Nullable<decimal> _增加保證金金額;
		
		private string _擔保品放貸文件徵提其他;
		
		private System.Nullable<bool> _利害關係人;
		
		private System.Nullable<bool> _銀行法關係人;
		
		private System.Nullable<bool> _金控法關係人01;
		
		private System.Nullable<bool> _金控法關係人02;
		
		private string _銀行法關係內容;
		
		private string _金控法關係內容;
		
		private System.Nullable<int> _保證人辭卸解任;
		
		private string _入戶帳號名稱;
		
		private string _AttachedFile;
		
		private System.Nullable<System.DateTime> _送保到期日;
		
		private System.Nullable<int> _聯貸流水號;
		
		private System.Nullable<decimal> _帳戶管理費;
		
		private System.Nullable<System.DateTime> _下次利率調整日;
		
		private string _訂約利率型態;
		
		private System.Nullable<bool> _信用卡帳款逾期;
		
		private System.Nullable<bool> _列管為警示戶;
		
		private System.Nullable<bool> _信用貶落管控指標;
		
		private System.Nullable<bool> _交易對手AML查詢;
		
		private System.Nullable<bool> _資恐檢核表;
		
		private System.Nullable<decimal> _應收帳款墊款息;
		
		private System.Nullable<decimal> _移送基金保證手續費;
		
		private System.Nullable<bool> _憑交易文件撥貸;
		
		private string _保證人統編_4;
		
		private EntitySet<NegoLoan> _NegoLoan;
		
		private EntitySet<CreditApplicationDocumentary> _CreditApplicationDocumentary;
		
		private EntitySet<NegoDraft> _NegoDraft;
		
		private EntitySet<AmendingLcApplication> _AmendingLcApplication;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On實際送保金額Changing(System.Nullable<decimal> value);
    partial void On實際送保金額Changed();
    partial void OnPaymentIDChanging(int value);
    partial void OnPaymentIDChanged();
    partial void On個人金融授信Changing(System.Nullable<bool> value);
    partial void On個人金融授信Changed();
    partial void On企業金融授信Changing(System.Nullable<bool> value);
    partial void On企業金融授信Changed();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void On保證人統編_1Changing(string value);
    partial void On保證人統編_1Changed();
    partial void On保證人統編_2Changing(string value);
    partial void On保證人統編_2Changed();
    partial void On保證人統編_3Changing(string value);
    partial void On保證人統編_3Changed();
    partial void On擔保品放貸文件徵提Changing(System.Nullable<int> value);
    partial void On擔保品放貸文件徵提Changed();
    partial void On扣款帳號Changing(string value);
    partial void On扣款帳號Changed();
    partial void On費用收取Changing(System.Nullable<int> value);
    partial void On費用收取Changed();
    partial void On保證手續費Changing(System.Nullable<decimal> value);
    partial void On保證手續費Changed();
    partial void On開改狀手續費Changing(System.Nullable<decimal> value);
    partial void On開改狀手續費Changed();
    partial void On承兌手續費Changing(System.Nullable<decimal> value);
    partial void On承兌手續費Changed();
    partial void On保證金Changing(System.Nullable<decimal> value);
    partial void On保證金Changed();
    partial void On開辦費Changing(System.Nullable<decimal> value);
    partial void On開辦費Changed();
    partial void On借新還舊Changing(System.Nullable<bool> value);
    partial void On借新還舊Changed();
    partial void On信用狀改貸Changing(System.Nullable<bool> value);
    partial void On信用狀改貸Changed();
    partial void On借戶帳號Changing(string value);
    partial void On借戶帳號Changed();
    partial void On借戶本金Changing(System.Nullable<decimal> value);
    partial void On借戶本金Changed();
    partial void On借戶利息Changing(System.Nullable<decimal> value);
    partial void On借戶利息Changed();
    partial void On貸款種類Changing(System.Nullable<int> value);
    partial void On貸款種類Changed();
    partial void On貸款種類其他Changing(string value);
    partial void On貸款種類其他Changed();
    partial void On會計科目Changing(string value);
    partial void On會計科目Changed();
    partial void On批准日期Changing(System.Nullable<System.DateTime> value);
    partial void On批准日期Changed();
    partial void On額度號碼Changing(string value);
    partial void On額度號碼Changed();
    partial void On貸放期限Changing(System.Nullable<System.DateTime> value);
    partial void On貸放期限Changed();
    partial void On貸放期限月Changing(System.Nullable<int> value);
    partial void On貸放期限月Changed();
    partial void On貸放期限天Changing(System.Nullable<int> value);
    partial void On貸放期限天Changed();
    partial void On手續費率Changing(System.Nullable<decimal> value);
    partial void On手續費率Changed();
    partial void On墊款利率Changing(System.Nullable<decimal> value);
    partial void On墊款利率Changed();
    partial void On交易憑證號碼Changing(string value);
    partial void On交易憑證號碼Changed();
    partial void On用途別Changing(string value);
    partial void On用途別Changed();
    partial void On帳戶性質Changing(string value);
    partial void On帳戶性質Changed();
    partial void On貸放金額Changing(System.Nullable<decimal> value);
    partial void On貸放金額Changed();
    partial void On初放貸放日Changing(System.Nullable<System.DateTime> value);
    partial void On初放貸放日Changed();
    partial void On貸放到期日Changing(System.Nullable<System.DateTime> value);
    partial void On貸放到期日Changed();
    partial void On還本方式Changing(string value);
    partial void On還本方式Changed();
    partial void On利率型態Changing(string value);
    partial void On利率型態Changed();
    partial void On本筆寬限期Changing(System.Nullable<int> value);
    partial void On本筆寬限期Changed();
    partial void On入戶帳號Changing(string value);
    partial void On入戶帳號Changed();
    partial void On信保成數Changing(System.Nullable<decimal> value);
    partial void On信保成數Changed();
    partial void On信保種類Changing(string value);
    partial void On信保種類Changed();
    partial void On撥款方式Changing(string value);
    partial void On撥款方式Changed();
    partial void On現轉別Changing(string value);
    partial void On現轉別Changed();
    partial void On銷帳編號Changing(string value);
    partial void On銷帳編號Changed();
    partial void On融資業務分類Changing(string value);
    partial void On融資業務分類Changed();
    partial void On政府專案補助貸款分類Changing(string value);
    partial void On政府專案補助貸款分類Changed();
    partial void On掃描日期Changing(System.Nullable<System.DateTime> value);
    partial void On掃描日期Changed();
    partial void On貸放明細其他Changing(string value);
    partial void On貸放明細其他Changed();
    partial void On票據使用不良紀錄Changing(System.Nullable<bool> value);
    partial void On票據使用不良紀錄Changed();
    partial void On押匯未清償Changing(System.Nullable<bool> value);
    partial void On押匯未清償Changed();
    partial void On授信戶本金逾期Changing(System.Nullable<bool> value);
    partial void On授信戶本金逾期Changed();
    partial void On積欠利息Changing(System.Nullable<bool> value);
    partial void On積欠利息Changed();
    partial void On聯絡事項Changing(string value);
    partial void On聯絡事項Changed();
    partial void On授信支援主管Changing(string value);
    partial void On授信支援主管Changed();
    partial void On放款作業專員Changing(string value);
    partial void On放款作業專員Changed();
    partial void On帳戶管理員Changing(string value);
    partial void On帳戶管理員Changed();
    partial void On風管組組長Changing(string value);
    partial void On風管組組長Changed();
    partial void On審核經辦Changing(string value);
    partial void On審核經辦Changed();
    partial void On放款負責人Changing(string value);
    partial void On放款負責人Changed();
    partial void On記帳員Changing(string value);
    partial void On記帳員Changed();
    partial void On區域中心紀錄Changing(string value);
    partial void On區域中心紀錄Changed();
    partial void On放出日期Changing(System.Nullable<System.DateTime> value);
    partial void On放出日期Changed();
    partial void On放款帳支號Changing(string value);
    partial void On放款帳支號Changed();
    partial void On影像檔編號Changing(string value);
    partial void On影像檔編號Changed();
    partial void On增加保證金金額Changing(System.Nullable<decimal> value);
    partial void On增加保證金金額Changed();
    partial void On擔保品放貸文件徵提其他Changing(string value);
    partial void On擔保品放貸文件徵提其他Changed();
    partial void On利害關係人Changing(System.Nullable<bool> value);
    partial void On利害關係人Changed();
    partial void On銀行法關係人Changing(System.Nullable<bool> value);
    partial void On銀行法關係人Changed();
    partial void On金控法關係人01Changing(System.Nullable<bool> value);
    partial void On金控法關係人01Changed();
    partial void On金控法關係人02Changing(System.Nullable<bool> value);
    partial void On金控法關係人02Changed();
    partial void On銀行法關係內容Changing(string value);
    partial void On銀行法關係內容Changed();
    partial void On金控法關係內容Changing(string value);
    partial void On金控法關係內容Changed();
    partial void On保證人辭卸解任Changing(System.Nullable<int> value);
    partial void On保證人辭卸解任Changed();
    partial void On入戶帳號名稱Changing(string value);
    partial void On入戶帳號名稱Changed();
    partial void OnAttachedFileChanging(string value);
    partial void OnAttachedFileChanged();
    partial void On送保到期日Changing(System.Nullable<System.DateTime> value);
    partial void On送保到期日Changed();
    partial void On聯貸流水號Changing(System.Nullable<int> value);
    partial void On聯貸流水號Changed();
    partial void On帳戶管理費Changing(System.Nullable<decimal> value);
    partial void On帳戶管理費Changed();
    partial void On下次利率調整日Changing(System.Nullable<System.DateTime> value);
    partial void On下次利率調整日Changed();
    partial void On訂約利率型態Changing(string value);
    partial void On訂約利率型態Changed();
    partial void On信用卡帳款逾期Changing(System.Nullable<bool> value);
    partial void On信用卡帳款逾期Changed();
    partial void On列管為警示戶Changing(System.Nullable<bool> value);
    partial void On列管為警示戶Changed();
    partial void On信用貶落管控指標Changing(System.Nullable<bool> value);
    partial void On信用貶落管控指標Changed();
    partial void On交易對手AML查詢Changing(System.Nullable<bool> value);
    partial void On交易對手AML查詢Changed();
    partial void On資恐檢核表Changing(System.Nullable<bool> value);
    partial void On資恐檢核表Changed();
    partial void On應收帳款墊款息Changing(System.Nullable<decimal> value);
    partial void On應收帳款墊款息Changed();
    partial void On移送基金保證手續費Changing(System.Nullable<decimal> value);
    partial void On移送基金保證手續費Changed();
    partial void On憑交易文件撥貸Changing(System.Nullable<bool> value);
    partial void On憑交易文件撥貸Changed();
    partial void On保證人統編_4Changing(string value);
    partial void On保證人統編_4Changed();
    #endregion
		
		public PaymentNotification()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_實際送保金額", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Nullable<decimal> 實際送保金額
		{
			get
			{
				return this._實際送保金額;
			}
			set
			{
				if ((this._實際送保金額 != value))
				{
					this.On實際送保金額Changing(value);
					this.SendPropertyChanging();
					this._實際送保金額 = value;
					this.SendPropertyChanged("實際送保金額");
					this.On實際送保金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_個人金融授信", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> 個人金融授信
		{
			get
			{
				return this._個人金融授信;
			}
			set
			{
				if ((this._個人金融授信 != value))
				{
					this.On個人金融授信Changing(value);
					this.SendPropertyChanging();
					this._個人金融授信 = value;
					this.SendPropertyChanged("個人金融授信");
					this.On個人金融授信Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_企業金融授信", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> 企業金融授信
		{
			get
			{
				return this._企業金融授信;
			}
			set
			{
				if ((this._企業金融授信 != value))
				{
					this.On企業金融授信Changing(value);
					this.SendPropertyChanging();
					this._企業金融授信 = value;
					this.SendPropertyChanged("企業金融授信");
					this.On企業金融授信Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_保證人統編_1", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string 保證人統編_1
		{
			get
			{
				return this._保證人統編_1;
			}
			set
			{
				if ((this._保證人統編_1 != value))
				{
					this.On保證人統編_1Changing(value);
					this.SendPropertyChanging();
					this._保證人統編_1 = value;
					this.SendPropertyChanged("保證人統編_1");
					this.On保證人統編_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_保證人統編_2", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string 保證人統編_2
		{
			get
			{
				return this._保證人統編_2;
			}
			set
			{
				if ((this._保證人統編_2 != value))
				{
					this.On保證人統編_2Changing(value);
					this.SendPropertyChanging();
					this._保證人統編_2 = value;
					this.SendPropertyChanged("保證人統編_2");
					this.On保證人統編_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_保證人統編_3", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string 保證人統編_3
		{
			get
			{
				return this._保證人統編_3;
			}
			set
			{
				if ((this._保證人統編_3 != value))
				{
					this.On保證人統編_3Changing(value);
					this.SendPropertyChanging();
					this._保證人統編_3 = value;
					this.SendPropertyChanged("保證人統編_3");
					this.On保證人統編_3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_擔保品放貸文件徵提", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> 擔保品放貸文件徵提
		{
			get
			{
				return this._擔保品放貸文件徵提;
			}
			set
			{
				if ((this._擔保品放貸文件徵提 != value))
				{
					this.On擔保品放貸文件徵提Changing(value);
					this.SendPropertyChanging();
					this._擔保品放貸文件徵提 = value;
					this.SendPropertyChanged("擔保品放貸文件徵提");
					this.On擔保品放貸文件徵提Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_扣款帳號", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string 扣款帳號
		{
			get
			{
				return this._扣款帳號;
			}
			set
			{
				if ((this._扣款帳號 != value))
				{
					this.On扣款帳號Changing(value);
					this.SendPropertyChanging();
					this._扣款帳號 = value;
					this.SendPropertyChanged("扣款帳號");
					this.On扣款帳號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_費用收取", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> 費用收取
		{
			get
			{
				return this._費用收取;
			}
			set
			{
				if ((this._費用收取 != value))
				{
					this.On費用收取Changing(value);
					this.SendPropertyChanging();
					this._費用收取 = value;
					this.SendPropertyChanged("費用收取");
					this.On費用收取Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_保證手續費", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<decimal> 保證手續費
		{
			get
			{
				return this._保證手續費;
			}
			set
			{
				if ((this._保證手續費 != value))
				{
					this.On保證手續費Changing(value);
					this.SendPropertyChanging();
					this._保證手續費 = value;
					this.SendPropertyChanged("保證手續費");
					this.On保證手續費Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_開改狀手續費", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<decimal> 開改狀手續費
		{
			get
			{
				return this._開改狀手續費;
			}
			set
			{
				if ((this._開改狀手續費 != value))
				{
					this.On開改狀手續費Changing(value);
					this.SendPropertyChanging();
					this._開改狀手續費 = value;
					this.SendPropertyChanged("開改狀手續費");
					this.On開改狀手續費Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_承兌手續費", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<decimal> 承兌手續費
		{
			get
			{
				return this._承兌手續費;
			}
			set
			{
				if ((this._承兌手續費 != value))
				{
					this.On承兌手續費Changing(value);
					this.SendPropertyChanging();
					this._承兌手續費 = value;
					this.SendPropertyChanged("承兌手續費");
					this.On承兌手續費Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_保證金", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<decimal> 保證金
		{
			get
			{
				return this._保證金;
			}
			set
			{
				if ((this._保證金 != value))
				{
					this.On保證金Changing(value);
					this.SendPropertyChanging();
					this._保證金 = value;
					this.SendPropertyChanged("保證金");
					this.On保證金Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_開辦費", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<decimal> 開辦費
		{
			get
			{
				return this._開辦費;
			}
			set
			{
				if ((this._開辦費 != value))
				{
					this.On開辦費Changing(value);
					this.SendPropertyChanging();
					this._開辦費 = value;
					this.SendPropertyChanged("開辦費");
					this.On開辦費Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_借新還舊", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<bool> 借新還舊
		{
			get
			{
				return this._借新還舊;
			}
			set
			{
				if ((this._借新還舊 != value))
				{
					this.On借新還舊Changing(value);
					this.SendPropertyChanging();
					this._借新還舊 = value;
					this.SendPropertyChanged("借新還舊");
					this.On借新還舊Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_信用狀改貸", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<bool> 信用狀改貸
		{
			get
			{
				return this._信用狀改貸;
			}
			set
			{
				if ((this._信用狀改貸 != value))
				{
					this.On信用狀改貸Changing(value);
					this.SendPropertyChanging();
					this._信用狀改貸 = value;
					this.SendPropertyChanged("信用狀改貸");
					this.On信用狀改貸Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_借戶帳號", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string 借戶帳號
		{
			get
			{
				return this._借戶帳號;
			}
			set
			{
				if ((this._借戶帳號 != value))
				{
					this.On借戶帳號Changing(value);
					this.SendPropertyChanging();
					this._借戶帳號 = value;
					this.SendPropertyChanged("借戶帳號");
					this.On借戶帳號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_借戶本金", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<decimal> 借戶本金
		{
			get
			{
				return this._借戶本金;
			}
			set
			{
				if ((this._借戶本金 != value))
				{
					this.On借戶本金Changing(value);
					this.SendPropertyChanging();
					this._借戶本金 = value;
					this.SendPropertyChanged("借戶本金");
					this.On借戶本金Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_借戶利息", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<decimal> 借戶利息
		{
			get
			{
				return this._借戶利息;
			}
			set
			{
				if ((this._借戶利息 != value))
				{
					this.On借戶利息Changing(value);
					this.SendPropertyChanging();
					this._借戶利息 = value;
					this.SendPropertyChanged("借戶利息");
					this.On借戶利息Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貸款種類", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<int> 貸款種類
		{
			get
			{
				return this._貸款種類;
			}
			set
			{
				if ((this._貸款種類 != value))
				{
					this.On貸款種類Changing(value);
					this.SendPropertyChanging();
					this._貸款種類 = value;
					this.SendPropertyChanged("貸款種類");
					this.On貸款種類Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貸款種類其他", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string 貸款種類其他
		{
			get
			{
				return this._貸款種類其他;
			}
			set
			{
				if ((this._貸款種類其他 != value))
				{
					this.On貸款種類其他Changing(value);
					this.SendPropertyChanging();
					this._貸款種類其他 = value;
					this.SendPropertyChanged("貸款種類其他");
					this.On貸款種類其他Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_會計科目", DbType="NVarChar(8)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string 會計科目
		{
			get
			{
				return this._會計科目;
			}
			set
			{
				if ((this._會計科目 != value))
				{
					this.On會計科目Changing(value);
					this.SendPropertyChanging();
					this._會計科目 = value;
					this.SendPropertyChanged("會計科目");
					this.On會計科目Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_批准日期", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<System.DateTime> 批准日期
		{
			get
			{
				return this._批准日期;
			}
			set
			{
				if ((this._批准日期 != value))
				{
					this.On批准日期Changing(value);
					this.SendPropertyChanging();
					this._批准日期 = value;
					this.SendPropertyChanged("批准日期");
					this.On批准日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_額度號碼", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public string 額度號碼
		{
			get
			{
				return this._額度號碼;
			}
			set
			{
				if ((this._額度號碼 != value))
				{
					this.On額度號碼Changing(value);
					this.SendPropertyChanging();
					this._額度號碼 = value;
					this.SendPropertyChanged("額度號碼");
					this.On額度號碼Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貸放期限", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<System.DateTime> 貸放期限
		{
			get
			{
				return this._貸放期限;
			}
			set
			{
				if ((this._貸放期限 != value))
				{
					this.On貸放期限Changing(value);
					this.SendPropertyChanging();
					this._貸放期限 = value;
					this.SendPropertyChanged("貸放期限");
					this.On貸放期限Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貸放期限月", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<int> 貸放期限月
		{
			get
			{
				return this._貸放期限月;
			}
			set
			{
				if ((this._貸放期限月 != value))
				{
					this.On貸放期限月Changing(value);
					this.SendPropertyChanging();
					this._貸放期限月 = value;
					this.SendPropertyChanged("貸放期限月");
					this.On貸放期限月Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貸放期限天", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public System.Nullable<int> 貸放期限天
		{
			get
			{
				return this._貸放期限天;
			}
			set
			{
				if ((this._貸放期限天 != value))
				{
					this.On貸放期限天Changing(value);
					this.SendPropertyChanging();
					this._貸放期限天 = value;
					this.SendPropertyChanged("貸放期限天");
					this.On貸放期限天Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_手續費率", DbType="Decimal(18,3)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public System.Nullable<decimal> 手續費率
		{
			get
			{
				return this._手續費率;
			}
			set
			{
				if ((this._手續費率 != value))
				{
					this.On手續費率Changing(value);
					this.SendPropertyChanging();
					this._手續費率 = value;
					this.SendPropertyChanged("手續費率");
					this.On手續費率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_墊款利率", DbType="Decimal(18,3)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public System.Nullable<decimal> 墊款利率
		{
			get
			{
				return this._墊款利率;
			}
			set
			{
				if ((this._墊款利率 != value))
				{
					this.On墊款利率Changing(value);
					this.SendPropertyChanging();
					this._墊款利率 = value;
					this.SendPropertyChanged("墊款利率");
					this.On墊款利率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_交易憑證號碼", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public string 交易憑證號碼
		{
			get
			{
				return this._交易憑證號碼;
			}
			set
			{
				if ((this._交易憑證號碼 != value))
				{
					this.On交易憑證號碼Changing(value);
					this.SendPropertyChanging();
					this._交易憑證號碼 = value;
					this.SendPropertyChanged("交易憑證號碼");
					this.On交易憑證號碼Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_用途別", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public string 用途別
		{
			get
			{
				return this._用途別;
			}
			set
			{
				if ((this._用途別 != value))
				{
					this.On用途別Changing(value);
					this.SendPropertyChanging();
					this._用途別 = value;
					this.SendPropertyChanged("用途別");
					this.On用途別Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_帳戶性質", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public string 帳戶性質
		{
			get
			{
				return this._帳戶性質;
			}
			set
			{
				if ((this._帳戶性質 != value))
				{
					this.On帳戶性質Changing(value);
					this.SendPropertyChanging();
					this._帳戶性質 = value;
					this.SendPropertyChanged("帳戶性質");
					this.On帳戶性質Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貸放金額", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35)]
		public System.Nullable<decimal> 貸放金額
		{
			get
			{
				return this._貸放金額;
			}
			set
			{
				if ((this._貸放金額 != value))
				{
					this.On貸放金額Changing(value);
					this.SendPropertyChanging();
					this._貸放金額 = value;
					this.SendPropertyChanged("貸放金額");
					this.On貸放金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_初放貸放日", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36)]
		public System.Nullable<System.DateTime> 初放貸放日
		{
			get
			{
				return this._初放貸放日;
			}
			set
			{
				if ((this._初放貸放日 != value))
				{
					this.On初放貸放日Changing(value);
					this.SendPropertyChanging();
					this._初放貸放日 = value;
					this.SendPropertyChanged("初放貸放日");
					this.On初放貸放日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貸放到期日", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37)]
		public System.Nullable<System.DateTime> 貸放到期日
		{
			get
			{
				return this._貸放到期日;
			}
			set
			{
				if ((this._貸放到期日 != value))
				{
					this.On貸放到期日Changing(value);
					this.SendPropertyChanging();
					this._貸放到期日 = value;
					this.SendPropertyChanged("貸放到期日");
					this.On貸放到期日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_還本方式", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38)]
		public string 還本方式
		{
			get
			{
				return this._還本方式;
			}
			set
			{
				if ((this._還本方式 != value))
				{
					this.On還本方式Changing(value);
					this.SendPropertyChanging();
					this._還本方式 = value;
					this.SendPropertyChanged("還本方式");
					this.On還本方式Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_利率型態", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=39)]
		public string 利率型態
		{
			get
			{
				return this._利率型態;
			}
			set
			{
				if ((this._利率型態 != value))
				{
					this.On利率型態Changing(value);
					this.SendPropertyChanging();
					this._利率型態 = value;
					this.SendPropertyChanged("利率型態");
					this.On利率型態Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_本筆寬限期", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=40)]
		public System.Nullable<int> 本筆寬限期
		{
			get
			{
				return this._本筆寬限期;
			}
			set
			{
				if ((this._本筆寬限期 != value))
				{
					this.On本筆寬限期Changing(value);
					this.SendPropertyChanging();
					this._本筆寬限期 = value;
					this.SendPropertyChanged("本筆寬限期");
					this.On本筆寬限期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_入戶帳號", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=41)]
		public string 入戶帳號
		{
			get
			{
				return this._入戶帳號;
			}
			set
			{
				if ((this._入戶帳號 != value))
				{
					this.On入戶帳號Changing(value);
					this.SendPropertyChanging();
					this._入戶帳號 = value;
					this.SendPropertyChanged("入戶帳號");
					this.On入戶帳號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_信保成數", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=42)]
		public System.Nullable<decimal> 信保成數
		{
			get
			{
				return this._信保成數;
			}
			set
			{
				if ((this._信保成數 != value))
				{
					this.On信保成數Changing(value);
					this.SendPropertyChanging();
					this._信保成數 = value;
					this.SendPropertyChanged("信保成數");
					this.On信保成數Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_信保種類", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=43)]
		public string 信保種類
		{
			get
			{
				return this._信保種類;
			}
			set
			{
				if ((this._信保種類 != value))
				{
					this.On信保種類Changing(value);
					this.SendPropertyChanging();
					this._信保種類 = value;
					this.SendPropertyChanged("信保種類");
					this.On信保種類Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_撥款方式", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=44)]
		public string 撥款方式
		{
			get
			{
				return this._撥款方式;
			}
			set
			{
				if ((this._撥款方式 != value))
				{
					this.On撥款方式Changing(value);
					this.SendPropertyChanging();
					this._撥款方式 = value;
					this.SendPropertyChanged("撥款方式");
					this.On撥款方式Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_現轉別", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=45)]
		public string 現轉別
		{
			get
			{
				return this._現轉別;
			}
			set
			{
				if ((this._現轉別 != value))
				{
					this.On現轉別Changing(value);
					this.SendPropertyChanging();
					this._現轉別 = value;
					this.SendPropertyChanged("現轉別");
					this.On現轉別Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_銷帳編號", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=46)]
		public string 銷帳編號
		{
			get
			{
				return this._銷帳編號;
			}
			set
			{
				if ((this._銷帳編號 != value))
				{
					this.On銷帳編號Changing(value);
					this.SendPropertyChanging();
					this._銷帳編號 = value;
					this.SendPropertyChanged("銷帳編號");
					this.On銷帳編號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_融資業務分類", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=47)]
		public string 融資業務分類
		{
			get
			{
				return this._融資業務分類;
			}
			set
			{
				if ((this._融資業務分類 != value))
				{
					this.On融資業務分類Changing(value);
					this.SendPropertyChanging();
					this._融資業務分類 = value;
					this.SendPropertyChanged("融資業務分類");
					this.On融資業務分類Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_政府專案補助貸款分類", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=48)]
		public string 政府專案補助貸款分類
		{
			get
			{
				return this._政府專案補助貸款分類;
			}
			set
			{
				if ((this._政府專案補助貸款分類 != value))
				{
					this.On政府專案補助貸款分類Changing(value);
					this.SendPropertyChanging();
					this._政府專案補助貸款分類 = value;
					this.SendPropertyChanged("政府專案補助貸款分類");
					this.On政府專案補助貸款分類Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_掃描日期", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=49)]
		public System.Nullable<System.DateTime> 掃描日期
		{
			get
			{
				return this._掃描日期;
			}
			set
			{
				if ((this._掃描日期 != value))
				{
					this.On掃描日期Changing(value);
					this.SendPropertyChanging();
					this._掃描日期 = value;
					this.SendPropertyChanged("掃描日期");
					this.On掃描日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貸放明細其他", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=50)]
		public string 貸放明細其他
		{
			get
			{
				return this._貸放明細其他;
			}
			set
			{
				if ((this._貸放明細其他 != value))
				{
					this.On貸放明細其他Changing(value);
					this.SendPropertyChanging();
					this._貸放明細其他 = value;
					this.SendPropertyChanged("貸放明細其他");
					this.On貸放明細其他Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_票據使用不良紀錄", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=51)]
		public System.Nullable<bool> 票據使用不良紀錄
		{
			get
			{
				return this._票據使用不良紀錄;
			}
			set
			{
				if ((this._票據使用不良紀錄 != value))
				{
					this.On票據使用不良紀錄Changing(value);
					this.SendPropertyChanging();
					this._票據使用不良紀錄 = value;
					this.SendPropertyChanged("票據使用不良紀錄");
					this.On票據使用不良紀錄Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_押匯未清償", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=52)]
		public System.Nullable<bool> 押匯未清償
		{
			get
			{
				return this._押匯未清償;
			}
			set
			{
				if ((this._押匯未清償 != value))
				{
					this.On押匯未清償Changing(value);
					this.SendPropertyChanging();
					this._押匯未清償 = value;
					this.SendPropertyChanged("押匯未清償");
					this.On押匯未清償Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_授信戶本金逾期", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=53)]
		public System.Nullable<bool> 授信戶本金逾期
		{
			get
			{
				return this._授信戶本金逾期;
			}
			set
			{
				if ((this._授信戶本金逾期 != value))
				{
					this.On授信戶本金逾期Changing(value);
					this.SendPropertyChanging();
					this._授信戶本金逾期 = value;
					this.SendPropertyChanged("授信戶本金逾期");
					this.On授信戶本金逾期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_積欠利息", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=54)]
		public System.Nullable<bool> 積欠利息
		{
			get
			{
				return this._積欠利息;
			}
			set
			{
				if ((this._積欠利息 != value))
				{
					this.On積欠利息Changing(value);
					this.SendPropertyChanging();
					this._積欠利息 = value;
					this.SendPropertyChanged("積欠利息");
					this.On積欠利息Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_聯絡事項", DbType="NVarChar(300)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=55)]
		public string 聯絡事項
		{
			get
			{
				return this._聯絡事項;
			}
			set
			{
				if ((this._聯絡事項 != value))
				{
					this.On聯絡事項Changing(value);
					this.SendPropertyChanging();
					this._聯絡事項 = value;
					this.SendPropertyChanged("聯絡事項");
					this.On聯絡事項Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_授信支援主管", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=56)]
		public string 授信支援主管
		{
			get
			{
				return this._授信支援主管;
			}
			set
			{
				if ((this._授信支援主管 != value))
				{
					this.On授信支援主管Changing(value);
					this.SendPropertyChanging();
					this._授信支援主管 = value;
					this.SendPropertyChanged("授信支援主管");
					this.On授信支援主管Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_放款作業專員", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=57)]
		public string 放款作業專員
		{
			get
			{
				return this._放款作業專員;
			}
			set
			{
				if ((this._放款作業專員 != value))
				{
					this.On放款作業專員Changing(value);
					this.SendPropertyChanging();
					this._放款作業專員 = value;
					this.SendPropertyChanged("放款作業專員");
					this.On放款作業專員Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_帳戶管理員", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=58)]
		public string 帳戶管理員
		{
			get
			{
				return this._帳戶管理員;
			}
			set
			{
				if ((this._帳戶管理員 != value))
				{
					this.On帳戶管理員Changing(value);
					this.SendPropertyChanging();
					this._帳戶管理員 = value;
					this.SendPropertyChanged("帳戶管理員");
					this.On帳戶管理員Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_風管組組長", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=59)]
		public string 風管組組長
		{
			get
			{
				return this._風管組組長;
			}
			set
			{
				if ((this._風管組組長 != value))
				{
					this.On風管組組長Changing(value);
					this.SendPropertyChanging();
					this._風管組組長 = value;
					this.SendPropertyChanged("風管組組長");
					this.On風管組組長Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_審核經辦", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=60)]
		public string 審核經辦
		{
			get
			{
				return this._審核經辦;
			}
			set
			{
				if ((this._審核經辦 != value))
				{
					this.On審核經辦Changing(value);
					this.SendPropertyChanging();
					this._審核經辦 = value;
					this.SendPropertyChanged("審核經辦");
					this.On審核經辦Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_放款負責人", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=61)]
		public string 放款負責人
		{
			get
			{
				return this._放款負責人;
			}
			set
			{
				if ((this._放款負責人 != value))
				{
					this.On放款負責人Changing(value);
					this.SendPropertyChanging();
					this._放款負責人 = value;
					this.SendPropertyChanged("放款負責人");
					this.On放款負責人Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_記帳員", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=62)]
		public string 記帳員
		{
			get
			{
				return this._記帳員;
			}
			set
			{
				if ((this._記帳員 != value))
				{
					this.On記帳員Changing(value);
					this.SendPropertyChanging();
					this._記帳員 = value;
					this.SendPropertyChanged("記帳員");
					this.On記帳員Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_區域中心紀錄", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=63)]
		public string 區域中心紀錄
		{
			get
			{
				return this._區域中心紀錄;
			}
			set
			{
				if ((this._區域中心紀錄 != value))
				{
					this.On區域中心紀錄Changing(value);
					this.SendPropertyChanging();
					this._區域中心紀錄 = value;
					this.SendPropertyChanged("區域中心紀錄");
					this.On區域中心紀錄Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_放出日期", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=64)]
		public System.Nullable<System.DateTime> 放出日期
		{
			get
			{
				return this._放出日期;
			}
			set
			{
				if ((this._放出日期 != value))
				{
					this.On放出日期Changing(value);
					this.SendPropertyChanging();
					this._放出日期 = value;
					this.SendPropertyChanged("放出日期");
					this.On放出日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_放款帳支號", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=65)]
		public string 放款帳支號
		{
			get
			{
				return this._放款帳支號;
			}
			set
			{
				if ((this._放款帳支號 != value))
				{
					this.On放款帳支號Changing(value);
					this.SendPropertyChanging();
					this._放款帳支號 = value;
					this.SendPropertyChanged("放款帳支號");
					this.On放款帳支號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_影像檔編號", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=66)]
		public string 影像檔編號
		{
			get
			{
				return this._影像檔編號;
			}
			set
			{
				if ((this._影像檔編號 != value))
				{
					this.On影像檔編號Changing(value);
					this.SendPropertyChanging();
					this._影像檔編號 = value;
					this.SendPropertyChanged("影像檔編號");
					this.On影像檔編號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_增加保證金金額", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=67)]
		public System.Nullable<decimal> 增加保證金金額
		{
			get
			{
				return this._增加保證金金額;
			}
			set
			{
				if ((this._增加保證金金額 != value))
				{
					this.On增加保證金金額Changing(value);
					this.SendPropertyChanging();
					this._增加保證金金額 = value;
					this.SendPropertyChanged("增加保證金金額");
					this.On增加保證金金額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_擔保品放貸文件徵提其他", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=68)]
		public string 擔保品放貸文件徵提其他
		{
			get
			{
				return this._擔保品放貸文件徵提其他;
			}
			set
			{
				if ((this._擔保品放貸文件徵提其他 != value))
				{
					this.On擔保品放貸文件徵提其他Changing(value);
					this.SendPropertyChanging();
					this._擔保品放貸文件徵提其他 = value;
					this.SendPropertyChanged("擔保品放貸文件徵提其他");
					this.On擔保品放貸文件徵提其他Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_利害關係人", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=69)]
		public System.Nullable<bool> 利害關係人
		{
			get
			{
				return this._利害關係人;
			}
			set
			{
				if ((this._利害關係人 != value))
				{
					this.On利害關係人Changing(value);
					this.SendPropertyChanging();
					this._利害關係人 = value;
					this.SendPropertyChanged("利害關係人");
					this.On利害關係人Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_銀行法關係人", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=70)]
		public System.Nullable<bool> 銀行法關係人
		{
			get
			{
				return this._銀行法關係人;
			}
			set
			{
				if ((this._銀行法關係人 != value))
				{
					this.On銀行法關係人Changing(value);
					this.SendPropertyChanging();
					this._銀行法關係人 = value;
					this.SendPropertyChanged("銀行法關係人");
					this.On銀行法關係人Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_金控法關係人01", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=71)]
		public System.Nullable<bool> 金控法關係人01
		{
			get
			{
				return this._金控法關係人01;
			}
			set
			{
				if ((this._金控法關係人01 != value))
				{
					this.On金控法關係人01Changing(value);
					this.SendPropertyChanging();
					this._金控法關係人01 = value;
					this.SendPropertyChanged("金控法關係人01");
					this.On金控法關係人01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_金控法關係人02", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=72)]
		public System.Nullable<bool> 金控法關係人02
		{
			get
			{
				return this._金控法關係人02;
			}
			set
			{
				if ((this._金控法關係人02 != value))
				{
					this.On金控法關係人02Changing(value);
					this.SendPropertyChanging();
					this._金控法關係人02 = value;
					this.SendPropertyChanged("金控法關係人02");
					this.On金控法關係人02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_銀行法關係內容", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=73)]
		public string 銀行法關係內容
		{
			get
			{
				return this._銀行法關係內容;
			}
			set
			{
				if ((this._銀行法關係內容 != value))
				{
					this.On銀行法關係內容Changing(value);
					this.SendPropertyChanging();
					this._銀行法關係內容 = value;
					this.SendPropertyChanged("銀行法關係內容");
					this.On銀行法關係內容Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_金控法關係內容", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=74)]
		public string 金控法關係內容
		{
			get
			{
				return this._金控法關係內容;
			}
			set
			{
				if ((this._金控法關係內容 != value))
				{
					this.On金控法關係內容Changing(value);
					this.SendPropertyChanging();
					this._金控法關係內容 = value;
					this.SendPropertyChanged("金控法關係內容");
					this.On金控法關係內容Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_保證人辭卸解任", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=75)]
		public System.Nullable<int> 保證人辭卸解任
		{
			get
			{
				return this._保證人辭卸解任;
			}
			set
			{
				if ((this._保證人辭卸解任 != value))
				{
					this.On保證人辭卸解任Changing(value);
					this.SendPropertyChanging();
					this._保證人辭卸解任 = value;
					this.SendPropertyChanged("保證人辭卸解任");
					this.On保證人辭卸解任Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_入戶帳號名稱", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=76)]
		public string 入戶帳號名稱
		{
			get
			{
				return this._入戶帳號名稱;
			}
			set
			{
				if ((this._入戶帳號名稱 != value))
				{
					this.On入戶帳號名稱Changing(value);
					this.SendPropertyChanging();
					this._入戶帳號名稱 = value;
					this.SendPropertyChanged("入戶帳號名稱");
					this.On入戶帳號名稱Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachedFile", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=77)]
		public string AttachedFile
		{
			get
			{
				return this._AttachedFile;
			}
			set
			{
				if ((this._AttachedFile != value))
				{
					this.OnAttachedFileChanging(value);
					this.SendPropertyChanging();
					this._AttachedFile = value;
					this.SendPropertyChanged("AttachedFile");
					this.OnAttachedFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_送保到期日", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=78)]
		public System.Nullable<System.DateTime> 送保到期日
		{
			get
			{
				return this._送保到期日;
			}
			set
			{
				if ((this._送保到期日 != value))
				{
					this.On送保到期日Changing(value);
					this.SendPropertyChanging();
					this._送保到期日 = value;
					this.SendPropertyChanged("送保到期日");
					this.On送保到期日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_聯貸流水號", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=79)]
		public System.Nullable<int> 聯貸流水號
		{
			get
			{
				return this._聯貸流水號;
			}
			set
			{
				if ((this._聯貸流水號 != value))
				{
					this.On聯貸流水號Changing(value);
					this.SendPropertyChanging();
					this._聯貸流水號 = value;
					this.SendPropertyChanged("聯貸流水號");
					this.On聯貸流水號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_帳戶管理費", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=80)]
		public System.Nullable<decimal> 帳戶管理費
		{
			get
			{
				return this._帳戶管理費;
			}
			set
			{
				if ((this._帳戶管理費 != value))
				{
					this.On帳戶管理費Changing(value);
					this.SendPropertyChanging();
					this._帳戶管理費 = value;
					this.SendPropertyChanged("帳戶管理費");
					this.On帳戶管理費Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_下次利率調整日", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=81)]
		public System.Nullable<System.DateTime> 下次利率調整日
		{
			get
			{
				return this._下次利率調整日;
			}
			set
			{
				if ((this._下次利率調整日 != value))
				{
					this.On下次利率調整日Changing(value);
					this.SendPropertyChanging();
					this._下次利率調整日 = value;
					this.SendPropertyChanged("下次利率調整日");
					this.On下次利率調整日Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_訂約利率型態", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=82)]
		public string 訂約利率型態
		{
			get
			{
				return this._訂約利率型態;
			}
			set
			{
				if ((this._訂約利率型態 != value))
				{
					this.On訂約利率型態Changing(value);
					this.SendPropertyChanging();
					this._訂約利率型態 = value;
					this.SendPropertyChanged("訂約利率型態");
					this.On訂約利率型態Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_信用卡帳款逾期", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=83)]
		public System.Nullable<bool> 信用卡帳款逾期
		{
			get
			{
				return this._信用卡帳款逾期;
			}
			set
			{
				if ((this._信用卡帳款逾期 != value))
				{
					this.On信用卡帳款逾期Changing(value);
					this.SendPropertyChanging();
					this._信用卡帳款逾期 = value;
					this.SendPropertyChanged("信用卡帳款逾期");
					this.On信用卡帳款逾期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_列管為警示戶", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=84)]
		public System.Nullable<bool> 列管為警示戶
		{
			get
			{
				return this._列管為警示戶;
			}
			set
			{
				if ((this._列管為警示戶 != value))
				{
					this.On列管為警示戶Changing(value);
					this.SendPropertyChanging();
					this._列管為警示戶 = value;
					this.SendPropertyChanged("列管為警示戶");
					this.On列管為警示戶Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_信用貶落管控指標", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=85)]
		public System.Nullable<bool> 信用貶落管控指標
		{
			get
			{
				return this._信用貶落管控指標;
			}
			set
			{
				if ((this._信用貶落管控指標 != value))
				{
					this.On信用貶落管控指標Changing(value);
					this.SendPropertyChanging();
					this._信用貶落管控指標 = value;
					this.SendPropertyChanged("信用貶落管控指標");
					this.On信用貶落管控指標Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_交易對手AML查詢", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=86)]
		public System.Nullable<bool> 交易對手AML查詢
		{
			get
			{
				return this._交易對手AML查詢;
			}
			set
			{
				if ((this._交易對手AML查詢 != value))
				{
					this.On交易對手AML查詢Changing(value);
					this.SendPropertyChanging();
					this._交易對手AML查詢 = value;
					this.SendPropertyChanged("交易對手AML查詢");
					this.On交易對手AML查詢Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_資恐檢核表", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=87)]
		public System.Nullable<bool> 資恐檢核表
		{
			get
			{
				return this._資恐檢核表;
			}
			set
			{
				if ((this._資恐檢核表 != value))
				{
					this.On資恐檢核表Changing(value);
					this.SendPropertyChanging();
					this._資恐檢核表 = value;
					this.SendPropertyChanged("資恐檢核表");
					this.On資恐檢核表Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_應收帳款墊款息", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=88)]
		public System.Nullable<decimal> 應收帳款墊款息
		{
			get
			{
				return this._應收帳款墊款息;
			}
			set
			{
				if ((this._應收帳款墊款息 != value))
				{
					this.On應收帳款墊款息Changing(value);
					this.SendPropertyChanging();
					this._應收帳款墊款息 = value;
					this.SendPropertyChanged("應收帳款墊款息");
					this.On應收帳款墊款息Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_移送基金保證手續費", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=89)]
		public System.Nullable<decimal> 移送基金保證手續費
		{
			get
			{
				return this._移送基金保證手續費;
			}
			set
			{
				if ((this._移送基金保證手續費 != value))
				{
					this.On移送基金保證手續費Changing(value);
					this.SendPropertyChanging();
					this._移送基金保證手續費 = value;
					this.SendPropertyChanged("移送基金保證手續費");
					this.On移送基金保證手續費Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_憑交易文件撥貸", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=90)]
		public System.Nullable<bool> 憑交易文件撥貸
		{
			get
			{
				return this._憑交易文件撥貸;
			}
			set
			{
				if ((this._憑交易文件撥貸 != value))
				{
					this.On憑交易文件撥貸Changing(value);
					this.SendPropertyChanging();
					this._憑交易文件撥貸 = value;
					this.SendPropertyChanged("憑交易文件撥貸");
					this.On憑交易文件撥貸Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_保證人統編_4", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=91)]
		public string 保證人統編_4
		{
			get
			{
				return this._保證人統編_4;
			}
			set
			{
				if ((this._保證人統編_4 != value))
				{
					this.On保證人統編_4Changing(value);
					this.SendPropertyChanging();
					this._保證人統編_4 = value;
					this.SendPropertyChanged("保證人統編_4");
					this.On保證人統編_4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentNotification_NegoLoan", Storage="_NegoLoan", ThisKey="PaymentID", OtherKey="PaymentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=92, EmitDefaultValue=false)]
		public EntitySet<NegoLoan> NegoLoan
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoLoan.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoLoan;
			}
			set
			{
				this._NegoLoan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentNotification_CreditApplicationDocumentary", Storage="_CreditApplicationDocumentary", ThisKey="PaymentID", OtherKey="PaymentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=93, EmitDefaultValue=false)]
		public EntitySet<CreditApplicationDocumentary> CreditApplicationDocumentary
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditApplicationDocumentary.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CreditApplicationDocumentary;
			}
			set
			{
				this._CreditApplicationDocumentary.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentNotification_NegoDraft", Storage="_NegoDraft", ThisKey="PaymentID", OtherKey="PaymentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=94, EmitDefaultValue=false)]
		public EntitySet<NegoDraft> NegoDraft
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoDraft.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoDraft;
			}
			set
			{
				this._NegoDraft.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentNotification_AmendingLcApplication", Storage="_AmendingLcApplication", ThisKey="PaymentID", OtherKey="PaymentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=95, EmitDefaultValue=false)]
		public EntitySet<AmendingLcApplication> AmendingLcApplication
		{
			get
			{
				if ((this.serializing 
							&& (this._AmendingLcApplication.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AmendingLcApplication;
			}
			set
			{
				this._AmendingLcApplication.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NegoLoan(NegoLoan entity)
		{
			this.SendPropertyChanging();
			entity.PaymentNotification = this;
		}
		
		private void detach_NegoLoan(NegoLoan entity)
		{
			this.SendPropertyChanging();
			entity.PaymentNotification = null;
		}
		
		private void attach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.PaymentNotification = this;
		}
		
		private void detach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.PaymentNotification = null;
		}
		
		private void attach_NegoDraft(NegoDraft entity)
		{
			this.SendPropertyChanging();
			entity.PaymentNotification = this;
		}
		
		private void detach_NegoDraft(NegoDraft entity)
		{
			this.SendPropertyChanging();
			entity.PaymentNotification = null;
		}
		
		private void attach_AmendingLcApplication(AmendingLcApplication entity)
		{
			this.SendPropertyChanging();
			entity.PaymentNotification = this;
		}
		
		private void detach_AmendingLcApplication(AmendingLcApplication entity)
		{
			this.SendPropertyChanging();
			entity.PaymentNotification = null;
		}
		
		private void Initialize()
		{
			this._NegoLoan = new EntitySet<NegoLoan>(new Action<NegoLoan>(this.attach_NegoLoan), new Action<NegoLoan>(this.detach_NegoLoan));
			this._CreditApplicationDocumentary = new EntitySet<CreditApplicationDocumentary>(new Action<CreditApplicationDocumentary>(this.attach_CreditApplicationDocumentary), new Action<CreditApplicationDocumentary>(this.detach_CreditApplicationDocumentary));
			this._NegoDraft = new EntitySet<NegoDraft>(new Action<NegoDraft>(this.attach_NegoDraft), new Action<NegoDraft>(this.detach_NegoDraft));
			this._AmendingLcApplication = new EntitySet<AmendingLcApplication>(new Action<AmendingLcApplication>(this.attach_AmendingLcApplication), new Action<AmendingLcApplication>(this.detach_AmendingLcApplication));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NegoLoan")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NegoLoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanID;
		
		private System.Nullable<int> _PaymentID;
		
		private System.Nullable<int> _L1000ID;
		
		private string _AttachedFile;
		
		private string _ACTNO;
		
		private System.Nullable<int> _TxnCode;
		
		private System.Nullable<decimal> _BalanceAmount;
		
		private System.Nullable<System.DateTime> _InitLoanDate;
		
		private System.Nullable<int> _LoanDay;
		
		private System.Nullable<decimal> _LoanInterestRate;
		
		private System.Nullable<decimal> _ACTBAL;
		
		private System.Nullable<bool> _UseCreditInsurance;
		
		private EntityRef<CreditInsuranceLoan> _CreditInsuranceLoan;
		
		private EntitySet<NegoLoanRepayment> _NegoLoanRepayment;
		
		private EntityRef<L1000> _L1000;
		
		private EntityRef<PaymentNotification> _PaymentNotification;
		
		private EntityRef<Reimbursement> _Reimbursement;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanIDChanging(int value);
    partial void OnLoanIDChanged();
    partial void OnPaymentIDChanging(System.Nullable<int> value);
    partial void OnPaymentIDChanged();
    partial void OnL1000IDChanging(System.Nullable<int> value);
    partial void OnL1000IDChanged();
    partial void OnAttachedFileChanging(string value);
    partial void OnAttachedFileChanged();
    partial void OnACTNOChanging(string value);
    partial void OnACTNOChanged();
    partial void OnTxnCodeChanging(System.Nullable<int> value);
    partial void OnTxnCodeChanged();
    partial void OnBalanceAmountChanging(System.Nullable<decimal> value);
    partial void OnBalanceAmountChanged();
    partial void OnInitLoanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInitLoanDateChanged();
    partial void OnLoanDayChanging(System.Nullable<int> value);
    partial void OnLoanDayChanged();
    partial void OnLoanInterestRateChanging(System.Nullable<decimal> value);
    partial void OnLoanInterestRateChanged();
    partial void OnACTBALChanging(System.Nullable<decimal> value);
    partial void OnACTBALChanged();
    partial void OnUseCreditInsuranceChanging(System.Nullable<bool> value);
    partial void OnUseCreditInsuranceChanged();
    #endregion
		
		public NegoLoan()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LoanID
		{
			get
			{
				return this._LoanID;
			}
			set
			{
				if ((this._LoanID != value))
				{
					if (this._Reimbursement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIDChanging(value);
					this.SendPropertyChanging();
					this._LoanID = value;
					this.SendPropertyChanged("LoanID");
					this.OnLoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					if (this._PaymentNotification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1000ID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> L1000ID
		{
			get
			{
				return this._L1000ID;
			}
			set
			{
				if ((this._L1000ID != value))
				{
					if (this._L1000.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnL1000IDChanging(value);
					this.SendPropertyChanging();
					this._L1000ID = value;
					this.SendPropertyChanged("L1000ID");
					this.OnL1000IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachedFile", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string AttachedFile
		{
			get
			{
				return this._AttachedFile;
			}
			set
			{
				if ((this._AttachedFile != value))
				{
					this.OnAttachedFileChanging(value);
					this.SendPropertyChanging();
					this._AttachedFile = value;
					this.SendPropertyChanged("AttachedFile");
					this.OnAttachedFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTNO", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ACTNO
		{
			get
			{
				return this._ACTNO;
			}
			set
			{
				if ((this._ACTNO != value))
				{
					this.OnACTNOChanging(value);
					this.SendPropertyChanging();
					this._ACTNO = value;
					this.SendPropertyChanged("ACTNO");
					this.OnACTNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TxnCode", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> TxnCode
		{
			get
			{
				return this._TxnCode;
			}
			set
			{
				if ((this._TxnCode != value))
				{
					this.OnTxnCodeChanging(value);
					this.SendPropertyChanging();
					this._TxnCode = value;
					this.SendPropertyChanged("TxnCode");
					this.OnTxnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmount", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<decimal> BalanceAmount
		{
			get
			{
				return this._BalanceAmount;
			}
			set
			{
				if ((this._BalanceAmount != value))
				{
					this.OnBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._BalanceAmount = value;
					this.SendPropertyChanged("BalanceAmount");
					this.OnBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitLoanDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> InitLoanDate
		{
			get
			{
				return this._InitLoanDate;
			}
			set
			{
				if ((this._InitLoanDate != value))
				{
					this.OnInitLoanDateChanging(value);
					this.SendPropertyChanging();
					this._InitLoanDate = value;
					this.SendPropertyChanged("InitLoanDate");
					this.OnInitLoanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanDay", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> LoanDay
		{
			get
			{
				return this._LoanDay;
			}
			set
			{
				if ((this._LoanDay != value))
				{
					this.OnLoanDayChanging(value);
					this.SendPropertyChanging();
					this._LoanDay = value;
					this.SendPropertyChanged("LoanDay");
					this.OnLoanDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanInterestRate", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<decimal> LoanInterestRate
		{
			get
			{
				return this._LoanInterestRate;
			}
			set
			{
				if ((this._LoanInterestRate != value))
				{
					this.OnLoanInterestRateChanging(value);
					this.SendPropertyChanging();
					this._LoanInterestRate = value;
					this.SendPropertyChanged("LoanInterestRate");
					this.OnLoanInterestRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTBAL", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<decimal> ACTBAL
		{
			get
			{
				return this._ACTBAL;
			}
			set
			{
				if ((this._ACTBAL != value))
				{
					this.OnACTBALChanging(value);
					this.SendPropertyChanging();
					this._ACTBAL = value;
					this.SendPropertyChanged("ACTBAL");
					this.OnACTBALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCreditInsurance", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<bool> UseCreditInsurance
		{
			get
			{
				return this._UseCreditInsurance;
			}
			set
			{
				if ((this._UseCreditInsurance != value))
				{
					this.OnUseCreditInsuranceChanging(value);
					this.SendPropertyChanging();
					this._UseCreditInsurance = value;
					this.SendPropertyChanged("UseCreditInsurance");
					this.OnUseCreditInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoLoan_CreditInsuranceLoan", Storage="_CreditInsuranceLoan", ThisKey="LoanID", OtherKey="LoanID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public CreditInsuranceLoan CreditInsuranceLoan
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditInsuranceLoan.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._CreditInsuranceLoan.Entity;
			}
			set
			{
				CreditInsuranceLoan previousValue = this._CreditInsuranceLoan.Entity;
				if (((previousValue != value) 
							|| (this._CreditInsuranceLoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CreditInsuranceLoan.Entity = null;
						previousValue.NegoLoan = null;
					}
					this._CreditInsuranceLoan.Entity = value;
					if ((value != null))
					{
						value.NegoLoan = this;
					}
					this.SendPropertyChanged("CreditInsuranceLoan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoLoan_NegoLoanRepayment", Storage="_NegoLoanRepayment", ThisKey="LoanID", OtherKey="LoanID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<NegoLoanRepayment> NegoLoanRepayment
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoLoanRepayment.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoLoanRepayment;
			}
			set
			{
				this._NegoLoanRepayment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="L1000_NegoLoan", Storage="_L1000", ThisKey="L1000ID", OtherKey="L1000ID", IsForeignKey=true)]
		public L1000 L1000
		{
			get
			{
				return this._L1000.Entity;
			}
			set
			{
				L1000 previousValue = this._L1000.Entity;
				if (((previousValue != value) 
							|| (this._L1000.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._L1000.Entity = null;
						previousValue.NegoLoan.Remove(this);
					}
					this._L1000.Entity = value;
					if ((value != null))
					{
						value.NegoLoan.Add(this);
						this._L1000ID = value.L1000ID;
					}
					else
					{
						this._L1000ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("L1000");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentNotification_NegoLoan", Storage="_PaymentNotification", ThisKey="PaymentID", OtherKey="PaymentID", IsForeignKey=true)]
		public PaymentNotification PaymentNotification
		{
			get
			{
				return this._PaymentNotification.Entity;
			}
			set
			{
				PaymentNotification previousValue = this._PaymentNotification.Entity;
				if (((previousValue != value) 
							|| (this._PaymentNotification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentNotification.Entity = null;
						previousValue.NegoLoan.Remove(this);
					}
					this._PaymentNotification.Entity = value;
					if ((value != null))
					{
						value.NegoLoan.Add(this);
						this._PaymentID = value.PaymentID;
					}
					else
					{
						this._PaymentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PaymentNotification");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reimbursement_NegoLoan", Storage="_Reimbursement", ThisKey="LoanID", OtherKey="ReimID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Reimbursement Reimbursement
		{
			get
			{
				return this._Reimbursement.Entity;
			}
			set
			{
				Reimbursement previousValue = this._Reimbursement.Entity;
				if (((previousValue != value) 
							|| (this._Reimbursement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reimbursement.Entity = null;
						previousValue.NegoLoan = null;
					}
					this._Reimbursement.Entity = value;
					if ((value != null))
					{
						value.NegoLoan = this;
						this._LoanID = value.ReimID;
					}
					else
					{
						this._LoanID = default(int);
					}
					this.SendPropertyChanged("Reimbursement");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NegoLoanRepayment(NegoLoanRepayment entity)
		{
			this.SendPropertyChanging();
			entity.NegoLoan = this;
		}
		
		private void detach_NegoLoanRepayment(NegoLoanRepayment entity)
		{
			this.SendPropertyChanging();
			entity.NegoLoan = null;
		}
		
		private void Initialize()
		{
			this._CreditInsuranceLoan = default(EntityRef<CreditInsuranceLoan>);
			this._NegoLoanRepayment = new EntitySet<NegoLoanRepayment>(new Action<NegoLoanRepayment>(this.attach_NegoLoanRepayment), new Action<NegoLoanRepayment>(this.detach_NegoLoanRepayment));
			this._L1000 = default(EntityRef<L1000>);
			this._PaymentNotification = default(EntityRef<PaymentNotification>);
			this._Reimbursement = default(EntityRef<Reimbursement>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AMLCheckQueue")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AMLCheckQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private EntityRef<Documentary> _Documentary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    #endregion
		
		public AMLCheckQueue()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_AMLCheckQueue", Storage="_Documentary", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.AMLCheckQueue = null;
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.AMLCheckQueue = this;
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Documentary = default(EntityRef<Documentary>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FpgNegoRemittanceDispatch")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FpgNegoRemittanceDispatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RemittanceID;
		
		private EntityRef<FpgNegoRemittanceLog> _FpgNegoRemittanceLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRemittanceIDChanging(int value);
    partial void OnRemittanceIDChanged();
    #endregion
		
		public FpgNegoRemittanceDispatch()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemittanceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RemittanceID
		{
			get
			{
				return this._RemittanceID;
			}
			set
			{
				if ((this._RemittanceID != value))
				{
					if (this._FpgNegoRemittanceLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRemittanceIDChanging(value);
					this.SendPropertyChanging();
					this._RemittanceID = value;
					this.SendPropertyChanged("RemittanceID");
					this.OnRemittanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FpgNegoRemittanceLog_FpgNegoRemittanceDispatch", Storage="_FpgNegoRemittanceLog", ThisKey="RemittanceID", OtherKey="RemittanceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FpgNegoRemittanceLog FpgNegoRemittanceLog
		{
			get
			{
				return this._FpgNegoRemittanceLog.Entity;
			}
			set
			{
				FpgNegoRemittanceLog previousValue = this._FpgNegoRemittanceLog.Entity;
				if (((previousValue != value) 
							|| (this._FpgNegoRemittanceLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FpgNegoRemittanceLog.Entity = null;
						previousValue.FpgNegoRemittanceDispatch = null;
					}
					this._FpgNegoRemittanceLog.Entity = value;
					if ((value != null))
					{
						value.FpgNegoRemittanceDispatch = this;
						this._RemittanceID = value.RemittanceID;
					}
					else
					{
						this._RemittanceID = default(int);
					}
					this.SendPropertyChanged("FpgNegoRemittanceLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._FpgNegoRemittanceLog = default(EntityRef<FpgNegoRemittanceLog>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BeneficiaryGroup")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BeneficiaryGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupID;
		
		private string _GroupName;
		
		private System.Nullable<int> _ServiceID;
		
		private EntitySet<GroupDepartment> _GroupDepartment;
		
		private EntitySet<OrganizationStatus> _OrganizationStatus;
		
		private EntityRef<BeneficiaryServiceGroup> _BeneficiaryServiceGroup;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnServiceIDChanging(System.Nullable<int> value);
    partial void OnServiceIDChanged();
    #endregion
		
		public BeneficiaryGroup()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._BeneficiaryServiceGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryGroup_GroupDepartment", Storage="_GroupDepartment", ThisKey="GroupID", OtherKey="GroupID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<GroupDepartment> GroupDepartment
		{
			get
			{
				if ((this.serializing 
							&& (this._GroupDepartment.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._GroupDepartment;
			}
			set
			{
				this._GroupDepartment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryGroup_OrganizationStatus", Storage="_OrganizationStatus", ThisKey="GroupID", OtherKey="GroupID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<OrganizationStatus> OrganizationStatus
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationStatus.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OrganizationStatus;
			}
			set
			{
				this._OrganizationStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryServiceGroup_BeneficiaryGroup", Storage="_BeneficiaryServiceGroup", ThisKey="ServiceID", OtherKey="ServiceID", IsForeignKey=true)]
		public BeneficiaryServiceGroup BeneficiaryServiceGroup
		{
			get
			{
				return this._BeneficiaryServiceGroup.Entity;
			}
			set
			{
				BeneficiaryServiceGroup previousValue = this._BeneficiaryServiceGroup.Entity;
				if (((previousValue != value) 
							|| (this._BeneficiaryServiceGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BeneficiaryServiceGroup.Entity = null;
						previousValue.BeneficiaryGroup.Remove(this);
					}
					this._BeneficiaryServiceGroup.Entity = value;
					if ((value != null))
					{
						value.BeneficiaryGroup.Add(this);
						this._ServiceID = value.ServiceID;
					}
					else
					{
						this._ServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BeneficiaryServiceGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupDepartment(GroupDepartment entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryGroup = this;
		}
		
		private void detach_GroupDepartment(GroupDepartment entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryGroup = null;
		}
		
		private void attach_OrganizationStatus(OrganizationStatus entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryGroup = this;
		}
		
		private void detach_OrganizationStatus(OrganizationStatus entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryGroup = null;
		}
		
		private void Initialize()
		{
			this._GroupDepartment = new EntitySet<GroupDepartment>(new Action<GroupDepartment>(this.attach_GroupDepartment), new Action<GroupDepartment>(this.detach_GroupDepartment));
			this._OrganizationStatus = new EntitySet<OrganizationStatus>(new Action<OrganizationStatus>(this.attach_OrganizationStatus), new Action<OrganizationStatus>(this.detach_OrganizationStatus));
			this._BeneficiaryServiceGroup = default(EntityRef<BeneficiaryServiceGroup>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BeneficiaryServiceGroup")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BeneficiaryServiceGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServiceID;
		
		private string _ServiceName;
		
		private string _PostUrl;
		
		private string _ConfirmUrl;
		
		private EntitySet<BeneficiaryGroup> _BeneficiaryGroup;
		
		private EntitySet<ServiceDataQueue> _ServiceDataQueue;
		
		private EntitySet<ResponseDataQueue> _ResponseDataQueue;
		
		private EntitySet<DataPortLog> _DataPortLog;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceIDChanging(int value);
    partial void OnServiceIDChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnPostUrlChanging(string value);
    partial void OnPostUrlChanged();
    partial void OnConfirmUrlChanging(string value);
    partial void OnConfirmUrlChanged();
    #endregion
		
		public BeneficiaryServiceGroup()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostUrl", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string PostUrl
		{
			get
			{
				return this._PostUrl;
			}
			set
			{
				if ((this._PostUrl != value))
				{
					this.OnPostUrlChanging(value);
					this.SendPropertyChanging();
					this._PostUrl = value;
					this.SendPropertyChanged("PostUrl");
					this.OnPostUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmUrl", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ConfirmUrl
		{
			get
			{
				return this._ConfirmUrl;
			}
			set
			{
				if ((this._ConfirmUrl != value))
				{
					this.OnConfirmUrlChanging(value);
					this.SendPropertyChanging();
					this._ConfirmUrl = value;
					this.SendPropertyChanged("ConfirmUrl");
					this.OnConfirmUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryServiceGroup_BeneficiaryGroup", Storage="_BeneficiaryGroup", ThisKey="ServiceID", OtherKey="ServiceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<BeneficiaryGroup> BeneficiaryGroup
		{
			get
			{
				if ((this.serializing 
							&& (this._BeneficiaryGroup.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BeneficiaryGroup;
			}
			set
			{
				this._BeneficiaryGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryServiceGroup_ServiceDataQueue", Storage="_ServiceDataQueue", ThisKey="ServiceID", OtherKey="ServiceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<ServiceDataQueue> ServiceDataQueue
		{
			get
			{
				if ((this.serializing 
							&& (this._ServiceDataQueue.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ServiceDataQueue;
			}
			set
			{
				this._ServiceDataQueue.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryServiceGroup_ResponseDataQueue", Storage="_ResponseDataQueue", ThisKey="ServiceID", OtherKey="ServiceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<ResponseDataQueue> ResponseDataQueue
		{
			get
			{
				if ((this.serializing 
							&& (this._ResponseDataQueue.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ResponseDataQueue;
			}
			set
			{
				this._ResponseDataQueue.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryServiceGroup_DataPortLog", Storage="_DataPortLog", ThisKey="ServiceID", OtherKey="ServiceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<DataPortLog> DataPortLog
		{
			get
			{
				if ((this.serializing 
							&& (this._DataPortLog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DataPortLog;
			}
			set
			{
				this._DataPortLog.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BeneficiaryGroup(BeneficiaryGroup entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryServiceGroup = this;
		}
		
		private void detach_BeneficiaryGroup(BeneficiaryGroup entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryServiceGroup = null;
		}
		
		private void attach_ServiceDataQueue(ServiceDataQueue entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryServiceGroup = this;
		}
		
		private void detach_ServiceDataQueue(ServiceDataQueue entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryServiceGroup = null;
		}
		
		private void attach_ResponseDataQueue(ResponseDataQueue entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryServiceGroup = this;
		}
		
		private void detach_ResponseDataQueue(ResponseDataQueue entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryServiceGroup = null;
		}
		
		private void attach_DataPortLog(DataPortLog entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryServiceGroup = this;
		}
		
		private void detach_DataPortLog(DataPortLog entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryServiceGroup = null;
		}
		
		private void Initialize()
		{
			this._BeneficiaryGroup = new EntitySet<BeneficiaryGroup>(new Action<BeneficiaryGroup>(this.attach_BeneficiaryGroup), new Action<BeneficiaryGroup>(this.detach_BeneficiaryGroup));
			this._ServiceDataQueue = new EntitySet<ServiceDataQueue>(new Action<ServiceDataQueue>(this.attach_ServiceDataQueue), new Action<ServiceDataQueue>(this.detach_ServiceDataQueue));
			this._ResponseDataQueue = new EntitySet<ResponseDataQueue>(new Action<ResponseDataQueue>(this.attach_ResponseDataQueue), new Action<ResponseDataQueue>(this.detach_ResponseDataQueue));
			this._DataPortLog = new EntitySet<DataPortLog>(new Action<DataPortLog>(this.attach_DataPortLog), new Action<DataPortLog>(this.detach_DataPortLog));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceDataQueue")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ServiceDataQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private System.Nullable<int> _ServiceID;
		
		private EntityRef<BeneficiaryServiceGroup> _BeneficiaryServiceGroup;
		
		private EntityRef<DataPortLog> _DataPortLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnServiceIDChanging(System.Nullable<int> value);
    partial void OnServiceIDChanged();
    #endregion
		
		public ServiceDataQueue()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					if (this._DataPortLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._BeneficiaryServiceGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryServiceGroup_ServiceDataQueue", Storage="_BeneficiaryServiceGroup", ThisKey="ServiceID", OtherKey="ServiceID", IsForeignKey=true)]
		public BeneficiaryServiceGroup BeneficiaryServiceGroup
		{
			get
			{
				return this._BeneficiaryServiceGroup.Entity;
			}
			set
			{
				BeneficiaryServiceGroup previousValue = this._BeneficiaryServiceGroup.Entity;
				if (((previousValue != value) 
							|| (this._BeneficiaryServiceGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BeneficiaryServiceGroup.Entity = null;
						previousValue.ServiceDataQueue.Remove(this);
					}
					this._BeneficiaryServiceGroup.Entity = value;
					if ((value != null))
					{
						value.ServiceDataQueue.Add(this);
						this._ServiceID = value.ServiceID;
					}
					else
					{
						this._ServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BeneficiaryServiceGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataPortLog_ServiceDataQueue", Storage="_DataPortLog", ThisKey="LogID", OtherKey="LogID", IsForeignKey=true)]
		public DataPortLog DataPortLog
		{
			get
			{
				return this._DataPortLog.Entity;
			}
			set
			{
				DataPortLog previousValue = this._DataPortLog.Entity;
				if (((previousValue != value) 
							|| (this._DataPortLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DataPortLog.Entity = null;
						previousValue.ServiceDataQueue = null;
					}
					this._DataPortLog.Entity = value;
					if ((value != null))
					{
						value.ServiceDataQueue = this;
						this._LogID = value.LogID;
					}
					else
					{
						this._LogID = default(int);
					}
					this.SendPropertyChanged("DataPortLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BeneficiaryServiceGroup = default(EntityRef<BeneficiaryServiceGroup>);
			this._DataPortLog = default(EntityRef<DataPortLog>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResponseDataQueue")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ResponseDataQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private System.Nullable<int> _ServiceID;
		
		private EntityRef<BeneficiaryServiceGroup> _BeneficiaryServiceGroup;
		
		private EntityRef<DataPortLog> _DataPortLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnServiceIDChanging(System.Nullable<int> value);
    partial void OnServiceIDChanged();
    #endregion
		
		public ResponseDataQueue()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					if (this._DataPortLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._BeneficiaryServiceGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryServiceGroup_ResponseDataQueue", Storage="_BeneficiaryServiceGroup", ThisKey="ServiceID", OtherKey="ServiceID", IsForeignKey=true)]
		public BeneficiaryServiceGroup BeneficiaryServiceGroup
		{
			get
			{
				return this._BeneficiaryServiceGroup.Entity;
			}
			set
			{
				BeneficiaryServiceGroup previousValue = this._BeneficiaryServiceGroup.Entity;
				if (((previousValue != value) 
							|| (this._BeneficiaryServiceGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BeneficiaryServiceGroup.Entity = null;
						previousValue.ResponseDataQueue.Remove(this);
					}
					this._BeneficiaryServiceGroup.Entity = value;
					if ((value != null))
					{
						value.ResponseDataQueue.Add(this);
						this._ServiceID = value.ServiceID;
					}
					else
					{
						this._ServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BeneficiaryServiceGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataPortLog_ResponseDataQueue", Storage="_DataPortLog", ThisKey="LogID", OtherKey="LogID", IsForeignKey=true)]
		public DataPortLog DataPortLog
		{
			get
			{
				return this._DataPortLog.Entity;
			}
			set
			{
				DataPortLog previousValue = this._DataPortLog.Entity;
				if (((previousValue != value) 
							|| (this._DataPortLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DataPortLog.Entity = null;
						previousValue.ResponseDataQueue = null;
					}
					this._DataPortLog.Entity = value;
					if ((value != null))
					{
						value.ResponseDataQueue = this;
						this._LogID = value.LogID;
					}
					else
					{
						this._LogID = default(int);
					}
					this.SendPropertyChanged("DataPortLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BeneficiaryServiceGroup = default(EntityRef<BeneficiaryServiceGroup>);
			this._DataPortLog = default(EntityRef<DataPortLog>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataPortLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DataPortLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private System.Nullable<int> _Direction;
		
		private string _ContentPath;
		
		private System.Nullable<int> _Catalog;
		
		private System.Nullable<System.DateTime> _TransportTime;
		
		private System.Nullable<int> _ExceptionID;
		
		private string _FpgTableName;
		
		private string _FpgFileName;
		
		private System.Nullable<int> _ServiceID;
		
		private EntityRef<ReceivedDataQueue> _ReceivedDataQueue;
		
		private EntitySet<DataProcessLog> _DataProcessLog;
		
		private EntitySet<NegoPrompt> _NegoPrompt;
		
		private EntityRef<NegoPromptRequestQueue> _NegoPromptRequestQueue;
		
		private EntityRef<AlertDataQueue> _AlertDataQueue;
		
		private EntitySet<FpgNegoRemittanceLog> _FpgNegoRemittanceLog;
		
		private EntityRef<ServiceDataQueue> _ServiceDataQueue;
		
		private EntityRef<ResponseDataQueue> _ResponseDataQueue;
		
		private EntityRef<BeneficiaryServiceGroup> _BeneficiaryServiceGroup;
		
		private EntityRef<ExceptionLog> _ExceptionLog;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnDirectionChanging(System.Nullable<int> value);
    partial void OnDirectionChanged();
    partial void OnContentPathChanging(string value);
    partial void OnContentPathChanged();
    partial void OnCatalogChanging(System.Nullable<int> value);
    partial void OnCatalogChanged();
    partial void OnTransportTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTransportTimeChanged();
    partial void OnExceptionIDChanging(System.Nullable<int> value);
    partial void OnExceptionIDChanged();
    partial void OnFpgTableNameChanging(string value);
    partial void OnFpgTableNameChanged();
    partial void OnFpgFileNameChanging(string value);
    partial void OnFpgFileNameChanged();
    partial void OnServiceIDChanging(System.Nullable<int> value);
    partial void OnServiceIDChanged();
    #endregion
		
		public DataPortLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentPath", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ContentPath
		{
			get
			{
				return this._ContentPath;
			}
			set
			{
				if ((this._ContentPath != value))
				{
					this.OnContentPathChanging(value);
					this.SendPropertyChanging();
					this._ContentPath = value;
					this.SendPropertyChanged("ContentPath");
					this.OnContentPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catalog", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> Catalog
		{
			get
			{
				return this._Catalog;
			}
			set
			{
				if ((this._Catalog != value))
				{
					this.OnCatalogChanging(value);
					this.SendPropertyChanging();
					this._Catalog = value;
					this.SendPropertyChanged("Catalog");
					this.OnCatalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> TransportTime
		{
			get
			{
				return this._TransportTime;
			}
			set
			{
				if ((this._TransportTime != value))
				{
					this.OnTransportTimeChanging(value);
					this.SendPropertyChanging();
					this._TransportTime = value;
					this.SendPropertyChanged("TransportTime");
					this.OnTransportTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> ExceptionID
		{
			get
			{
				return this._ExceptionID;
			}
			set
			{
				if ((this._ExceptionID != value))
				{
					if (this._ExceptionLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExceptionIDChanging(value);
					this.SendPropertyChanging();
					this._ExceptionID = value;
					this.SendPropertyChanged("ExceptionID");
					this.OnExceptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FpgTableName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string FpgTableName
		{
			get
			{
				return this._FpgTableName;
			}
			set
			{
				if ((this._FpgTableName != value))
				{
					this.OnFpgTableNameChanging(value);
					this.SendPropertyChanging();
					this._FpgTableName = value;
					this.SendPropertyChanged("FpgTableName");
					this.OnFpgTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FpgFileName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string FpgFileName
		{
			get
			{
				return this._FpgFileName;
			}
			set
			{
				if ((this._FpgFileName != value))
				{
					this.OnFpgFileNameChanging(value);
					this.SendPropertyChanging();
					this._FpgFileName = value;
					this.SendPropertyChanged("FpgFileName");
					this.OnFpgFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._BeneficiaryServiceGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataPortLog_ReceivedDataQueue", Storage="_ReceivedDataQueue", ThisKey="LogID", OtherKey="LogID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public ReceivedDataQueue ReceivedDataQueue
		{
			get
			{
				if ((this.serializing 
							&& (this._ReceivedDataQueue.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._ReceivedDataQueue.Entity;
			}
			set
			{
				ReceivedDataQueue previousValue = this._ReceivedDataQueue.Entity;
				if (((previousValue != value) 
							|| (this._ReceivedDataQueue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReceivedDataQueue.Entity = null;
						previousValue.DataPortLog = null;
					}
					this._ReceivedDataQueue.Entity = value;
					if ((value != null))
					{
						value.DataPortLog = this;
					}
					this.SendPropertyChanged("ReceivedDataQueue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataPortLog_DataProcessLog", Storage="_DataProcessLog", ThisKey="LogID", OtherKey="LogID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<DataProcessLog> DataProcessLog
		{
			get
			{
				if ((this.serializing 
							&& (this._DataProcessLog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DataProcessLog;
			}
			set
			{
				this._DataProcessLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataPortLog_NegoPrompt", Storage="_NegoPrompt", ThisKey="LogID", OtherKey="LogID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<NegoPrompt> NegoPrompt
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoPrompt.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoPrompt;
			}
			set
			{
				this._NegoPrompt.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataPortLog_NegoPromptRequestQueue", Storage="_NegoPromptRequestQueue", ThisKey="LogID", OtherKey="LogID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public NegoPromptRequestQueue NegoPromptRequestQueue
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoPromptRequestQueue.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._NegoPromptRequestQueue.Entity;
			}
			set
			{
				NegoPromptRequestQueue previousValue = this._NegoPromptRequestQueue.Entity;
				if (((previousValue != value) 
							|| (this._NegoPromptRequestQueue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoPromptRequestQueue.Entity = null;
						previousValue.DataPortLog = null;
					}
					this._NegoPromptRequestQueue.Entity = value;
					if ((value != null))
					{
						value.DataPortLog = this;
					}
					this.SendPropertyChanged("NegoPromptRequestQueue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataPortLog_AlertDataQueue", Storage="_AlertDataQueue", ThisKey="LogID", OtherKey="LogID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public AlertDataQueue AlertDataQueue
		{
			get
			{
				if ((this.serializing 
							&& (this._AlertDataQueue.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._AlertDataQueue.Entity;
			}
			set
			{
				AlertDataQueue previousValue = this._AlertDataQueue.Entity;
				if (((previousValue != value) 
							|| (this._AlertDataQueue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AlertDataQueue.Entity = null;
						previousValue.DataPortLog = null;
					}
					this._AlertDataQueue.Entity = value;
					if ((value != null))
					{
						value.DataPortLog = this;
					}
					this.SendPropertyChanged("AlertDataQueue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataPortLog_FpgNegoRemittanceLog", Storage="_FpgNegoRemittanceLog", ThisKey="LogID", OtherKey="LogID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<FpgNegoRemittanceLog> FpgNegoRemittanceLog
		{
			get
			{
				if ((this.serializing 
							&& (this._FpgNegoRemittanceLog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FpgNegoRemittanceLog;
			}
			set
			{
				this._FpgNegoRemittanceLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataPortLog_ServiceDataQueue", Storage="_ServiceDataQueue", ThisKey="LogID", OtherKey="LogID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public ServiceDataQueue ServiceDataQueue
		{
			get
			{
				if ((this.serializing 
							&& (this._ServiceDataQueue.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._ServiceDataQueue.Entity;
			}
			set
			{
				ServiceDataQueue previousValue = this._ServiceDataQueue.Entity;
				if (((previousValue != value) 
							|| (this._ServiceDataQueue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceDataQueue.Entity = null;
						previousValue.DataPortLog = null;
					}
					this._ServiceDataQueue.Entity = value;
					if ((value != null))
					{
						value.DataPortLog = this;
					}
					this.SendPropertyChanged("ServiceDataQueue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataPortLog_ResponseDataQueue", Storage="_ResponseDataQueue", ThisKey="LogID", OtherKey="LogID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public ResponseDataQueue ResponseDataQueue
		{
			get
			{
				if ((this.serializing 
							&& (this._ResponseDataQueue.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._ResponseDataQueue.Entity;
			}
			set
			{
				ResponseDataQueue previousValue = this._ResponseDataQueue.Entity;
				if (((previousValue != value) 
							|| (this._ResponseDataQueue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResponseDataQueue.Entity = null;
						previousValue.DataPortLog = null;
					}
					this._ResponseDataQueue.Entity = value;
					if ((value != null))
					{
						value.DataPortLog = this;
					}
					this.SendPropertyChanged("ResponseDataQueue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryServiceGroup_DataPortLog", Storage="_BeneficiaryServiceGroup", ThisKey="ServiceID", OtherKey="ServiceID", IsForeignKey=true)]
		public BeneficiaryServiceGroup BeneficiaryServiceGroup
		{
			get
			{
				return this._BeneficiaryServiceGroup.Entity;
			}
			set
			{
				BeneficiaryServiceGroup previousValue = this._BeneficiaryServiceGroup.Entity;
				if (((previousValue != value) 
							|| (this._BeneficiaryServiceGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BeneficiaryServiceGroup.Entity = null;
						previousValue.DataPortLog.Remove(this);
					}
					this._BeneficiaryServiceGroup.Entity = value;
					if ((value != null))
					{
						value.DataPortLog.Add(this);
						this._ServiceID = value.ServiceID;
					}
					else
					{
						this._ServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BeneficiaryServiceGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExceptionLog_DataPortLog", Storage="_ExceptionLog", ThisKey="ExceptionID", OtherKey="LogID", IsForeignKey=true)]
		public ExceptionLog ExceptionLog
		{
			get
			{
				return this._ExceptionLog.Entity;
			}
			set
			{
				ExceptionLog previousValue = this._ExceptionLog.Entity;
				if (((previousValue != value) 
							|| (this._ExceptionLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExceptionLog.Entity = null;
						previousValue.DataPortLog.Remove(this);
					}
					this._ExceptionLog.Entity = value;
					if ((value != null))
					{
						value.DataPortLog.Add(this);
						this._ExceptionID = value.LogID;
					}
					else
					{
						this._ExceptionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExceptionLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DataProcessLog(DataProcessLog entity)
		{
			this.SendPropertyChanging();
			entity.DataPortLog = this;
		}
		
		private void detach_DataProcessLog(DataProcessLog entity)
		{
			this.SendPropertyChanging();
			entity.DataPortLog = null;
		}
		
		private void attach_NegoPrompt(NegoPrompt entity)
		{
			this.SendPropertyChanging();
			entity.DataPortLog = this;
		}
		
		private void detach_NegoPrompt(NegoPrompt entity)
		{
			this.SendPropertyChanging();
			entity.DataPortLog = null;
		}
		
		private void attach_FpgNegoRemittanceLog(FpgNegoRemittanceLog entity)
		{
			this.SendPropertyChanging();
			entity.DataPortLog = this;
		}
		
		private void detach_FpgNegoRemittanceLog(FpgNegoRemittanceLog entity)
		{
			this.SendPropertyChanging();
			entity.DataPortLog = null;
		}
		
		private void Initialize()
		{
			this._ReceivedDataQueue = default(EntityRef<ReceivedDataQueue>);
			this._DataProcessLog = new EntitySet<DataProcessLog>(new Action<DataProcessLog>(this.attach_DataProcessLog), new Action<DataProcessLog>(this.detach_DataProcessLog));
			this._NegoPrompt = new EntitySet<NegoPrompt>(new Action<NegoPrompt>(this.attach_NegoPrompt), new Action<NegoPrompt>(this.detach_NegoPrompt));
			this._NegoPromptRequestQueue = default(EntityRef<NegoPromptRequestQueue>);
			this._AlertDataQueue = default(EntityRef<AlertDataQueue>);
			this._FpgNegoRemittanceLog = new EntitySet<FpgNegoRemittanceLog>(new Action<FpgNegoRemittanceLog>(this.attach_FpgNegoRemittanceLog), new Action<FpgNegoRemittanceLog>(this.detach_FpgNegoRemittanceLog));
			this._ServiceDataQueue = default(EntityRef<ServiceDataQueue>);
			this._ResponseDataQueue = default(EntityRef<ResponseDataQueue>);
			this._BeneficiaryServiceGroup = default(EntityRef<BeneficiaryServiceGroup>);
			this._ExceptionLog = default(EntityRef<ExceptionLog>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationBranchSettings")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OrganizationBranchSettings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SettingID;
		
		private int _CompanyID;
		
		private string _BankCode;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<decimal> _StepCharge;
		
		private System.Nullable<decimal> _HandlingCharge;
		
		private System.Nullable<System.Guid> _RecordID;
		
		private System.Nullable<int> _LogID;
		
		private EntityRef<BankData> _BankData;
		
		private EntityRef<RevisionLog> _RevisionLog;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSettingIDChanging(int value);
    partial void OnSettingIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnStepChargeChanging(System.Nullable<decimal> value);
    partial void OnStepChargeChanged();
    partial void OnHandlingChargeChanging(System.Nullable<decimal> value);
    partial void OnHandlingChargeChanged();
    partial void OnRecordIDChanging(System.Nullable<System.Guid> value);
    partial void OnRecordIDChanged();
    partial void OnLogIDChanging(System.Nullable<int> value);
    partial void OnLogIDChanged();
    #endregion
		
		public OrganizationBranchSettings()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SettingID
		{
			get
			{
				return this._SettingID;
			}
			set
			{
				if ((this._SettingID != value))
				{
					this.OnSettingIDChanging(value);
					this.SendPropertyChanging();
					this._SettingID = value;
					this.SendPropertyChanged("SettingID");
					this.OnSettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					if (this._BankData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepCharge", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> StepCharge
		{
			get
			{
				return this._StepCharge;
			}
			set
			{
				if ((this._StepCharge != value))
				{
					this.OnStepChargeChanging(value);
					this.SendPropertyChanging();
					this._StepCharge = value;
					this.SendPropertyChanged("StepCharge");
					this.OnStepChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandlingCharge", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<decimal> HandlingCharge
		{
			get
			{
				return this._HandlingCharge;
			}
			set
			{
				if ((this._HandlingCharge != value))
				{
					this.OnHandlingChargeChanging(value);
					this.SendPropertyChanging();
					this._HandlingCharge = value;
					this.SendPropertyChanged("HandlingCharge");
					this.OnHandlingChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.Guid> RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this.OnRecordIDChanging(value);
					this.SendPropertyChanging();
					this._RecordID = value;
					this.SendPropertyChanged("RecordID");
					this.OnRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					if (this._RevisionLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_OrganizationBranchSettings", Storage="_BankData", ThisKey="BankCode", OtherKey="BankCode", IsForeignKey=true)]
		public BankData BankData
		{
			get
			{
				return this._BankData.Entity;
			}
			set
			{
				BankData previousValue = this._BankData.Entity;
				if (((previousValue != value) 
							|| (this._BankData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankData.Entity = null;
						previousValue.OrganizationBranchSettings.Remove(this);
					}
					this._BankData.Entity = value;
					if ((value != null))
					{
						value.OrganizationBranchSettings.Add(this);
						this._BankCode = value.BankCode;
					}
					else
					{
						this._BankCode = default(string);
					}
					this.SendPropertyChanged("BankData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RevisionLog_OrganizationBranchSettings", Storage="_RevisionLog", ThisKey="LogID", OtherKey="LogID", IsForeignKey=true)]
		public RevisionLog RevisionLog
		{
			get
			{
				return this._RevisionLog.Entity;
			}
			set
			{
				RevisionLog previousValue = this._RevisionLog.Entity;
				if (((previousValue != value) 
							|| (this._RevisionLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RevisionLog.Entity = null;
						previousValue.OrganizationBranchSettings.Remove(this);
					}
					this._RevisionLog.Entity = value;
					if ((value != null))
					{
						value.OrganizationBranchSettings.Add(this);
						this._LogID = value.LogID;
					}
					else
					{
						this._LogID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RevisionLog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationBranchSettings", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.OrganizationBranchSettings.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.OrganizationBranchSettings.Add(this);
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BankData = default(EntityRef<BankData>);
			this._RevisionLog = default(EntityRef<RevisionLog>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NegoLC")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NegoLC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LC_ID;
		
		private string _LCNo;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<System.DateTime> _ImportDate;
		
		private string _IssuingBank;
		
		private System.Nullable<System.DateTime> _DateOfIssue;
		
		private System.Nullable<System.DateTime> _DateOfExpiry;
		
		private System.Nullable<decimal> _Amount;
		
		private string _ApplicantReceiptNo;
		
		private string _AdvisingBank;
		
		private string _PayableBank;
		
		private System.Nullable<System.DateTime> _ShipmentNoAfter;
		
		private string _LCType;
		
		private System.Nullable<decimal> _AvailableAmount;
		
		private System.Nullable<int> _DueDays;
		
		private System.Nullable<int> _CompanyID;
		
		private string _BeneficiaryReceiptNo;
		
		private System.Nullable<int> _BeneficiaryID;
		
		private System.Nullable<short> _DownloadFlag;
		
		private System.Nullable<int> _VersionID;
		
		private System.Nullable<int> _BeneDetailID;
		
		private EntitySet<NegoDraft> _NegoDraft;
		
		private EntityRef<BankData> _AdvisingBankData;
		
		private EntityRef<BankData> _PayableBankData;
		
		private EntityRef<CustomerOfBranch> _CustomerOfBranch;
		
		private EntityRef<CustomerOfBranchVersion> _ApplicantDetails;
		
		private EntityRef<CustomerOfBranchVersion> _BeneDetails;
		
		private EntityRef<BeneficiaryData> _BeneficiaryData;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLC_IDChanging(int value);
    partial void OnLC_IDChanged();
    partial void OnLCNoChanging(string value);
    partial void OnLCNoChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnImportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportDateChanged();
    partial void OnIssuingBankChanging(string value);
    partial void OnIssuingBankChanged();
    partial void OnDateOfIssueChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfIssueChanged();
    partial void OnDateOfExpiryChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfExpiryChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnApplicantReceiptNoChanging(string value);
    partial void OnApplicantReceiptNoChanged();
    partial void OnAdvisingBankChanging(string value);
    partial void OnAdvisingBankChanged();
    partial void OnPayableBankChanging(string value);
    partial void OnPayableBankChanged();
    partial void OnShipmentNoAfterChanging(System.Nullable<System.DateTime> value);
    partial void OnShipmentNoAfterChanged();
    partial void OnLCTypeChanging(string value);
    partial void OnLCTypeChanged();
    partial void OnAvailableAmountChanging(System.Nullable<decimal> value);
    partial void OnAvailableAmountChanged();
    partial void OnDueDaysChanging(System.Nullable<int> value);
    partial void OnDueDaysChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnBeneficiaryReceiptNoChanging(string value);
    partial void OnBeneficiaryReceiptNoChanged();
    partial void OnBeneficiaryIDChanging(System.Nullable<int> value);
    partial void OnBeneficiaryIDChanged();
    partial void OnDownloadFlagChanging(System.Nullable<short> value);
    partial void OnDownloadFlagChanged();
    partial void OnVersionIDChanging(System.Nullable<int> value);
    partial void OnVersionIDChanged();
    partial void OnBeneDetailIDChanging(System.Nullable<int> value);
    partial void OnBeneDetailIDChanged();
    #endregion
		
		public NegoLC()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LC_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LC_ID
		{
			get
			{
				return this._LC_ID;
			}
			set
			{
				if ((this._LC_ID != value))
				{
					this.OnLC_IDChanging(value);
					this.SendPropertyChanging();
					this._LC_ID = value;
					this.SendPropertyChanged("LC_ID");
					this.OnLC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LCNo", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string LCNo
		{
			get
			{
				return this._LCNo;
			}
			set
			{
				if ((this._LCNo != value))
				{
					this.OnLCNoChanging(value);
					this.SendPropertyChanging();
					this._LCNo = value;
					this.SendPropertyChanged("LCNo");
					this.OnLCNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> ImportDate
		{
			get
			{
				return this._ImportDate;
			}
			set
			{
				if ((this._ImportDate != value))
				{
					this.OnImportDateChanging(value);
					this.SendPropertyChanging();
					this._ImportDate = value;
					this.SendPropertyChanged("ImportDate");
					this.OnImportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuingBank", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string IssuingBank
		{
			get
			{
				return this._IssuingBank;
			}
			set
			{
				if ((this._IssuingBank != value))
				{
					if (this._CustomerOfBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIssuingBankChanging(value);
					this.SendPropertyChanging();
					this._IssuingBank = value;
					this.SendPropertyChanged("IssuingBank");
					this.OnIssuingBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfIssue", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> DateOfIssue
		{
			get
			{
				return this._DateOfIssue;
			}
			set
			{
				if ((this._DateOfIssue != value))
				{
					this.OnDateOfIssueChanging(value);
					this.SendPropertyChanging();
					this._DateOfIssue = value;
					this.SendPropertyChanged("DateOfIssue");
					this.OnDateOfIssueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfExpiry", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> DateOfExpiry
		{
			get
			{
				return this._DateOfExpiry;
			}
			set
			{
				if ((this._DateOfExpiry != value))
				{
					this.OnDateOfExpiryChanging(value);
					this.SendPropertyChanging();
					this._DateOfExpiry = value;
					this.SendPropertyChanged("DateOfExpiry");
					this.OnDateOfExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(12,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicantReceiptNo", DbType="NVarChar(8)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string ApplicantReceiptNo
		{
			get
			{
				return this._ApplicantReceiptNo;
			}
			set
			{
				if ((this._ApplicantReceiptNo != value))
				{
					this.OnApplicantReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ApplicantReceiptNo = value;
					this.SendPropertyChanged("ApplicantReceiptNo");
					this.OnApplicantReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvisingBank", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string AdvisingBank
		{
			get
			{
				return this._AdvisingBank;
			}
			set
			{
				if ((this._AdvisingBank != value))
				{
					if (this._AdvisingBankData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvisingBankChanging(value);
					this.SendPropertyChanging();
					this._AdvisingBank = value;
					this.SendPropertyChanged("AdvisingBank");
					this.OnAdvisingBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayableBank", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string PayableBank
		{
			get
			{
				return this._PayableBank;
			}
			set
			{
				if ((this._PayableBank != value))
				{
					if (this._PayableBankData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayableBankChanging(value);
					this.SendPropertyChanging();
					this._PayableBank = value;
					this.SendPropertyChanged("PayableBank");
					this.OnPayableBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentNoAfter", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<System.DateTime> ShipmentNoAfter
		{
			get
			{
				return this._ShipmentNoAfter;
			}
			set
			{
				if ((this._ShipmentNoAfter != value))
				{
					this.OnShipmentNoAfterChanging(value);
					this.SendPropertyChanging();
					this._ShipmentNoAfter = value;
					this.SendPropertyChanged("ShipmentNoAfter");
					this.OnShipmentNoAfterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LCType", DbType="NVarChar(3)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string LCType
		{
			get
			{
				return this._LCType;
			}
			set
			{
				if ((this._LCType != value))
				{
					this.OnLCTypeChanging(value);
					this.SendPropertyChanging();
					this._LCType = value;
					this.SendPropertyChanged("LCType");
					this.OnLCTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableAmount", DbType="Decimal(12,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<decimal> AvailableAmount
		{
			get
			{
				return this._AvailableAmount;
			}
			set
			{
				if ((this._AvailableAmount != value))
				{
					this.OnAvailableAmountChanging(value);
					this.SendPropertyChanging();
					this._AvailableAmount = value;
					this.SendPropertyChanged("AvailableAmount");
					this.OnAvailableAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDays", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<int> DueDays
		{
			get
			{
				return this._DueDays;
			}
			set
			{
				if ((this._DueDays != value))
				{
					this.OnDueDaysChanging(value);
					this.SendPropertyChanging();
					this._DueDays = value;
					this.SendPropertyChanged("DueDays");
					this.OnDueDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._CustomerOfBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryReceiptNo", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string BeneficiaryReceiptNo
		{
			get
			{
				return this._BeneficiaryReceiptNo;
			}
			set
			{
				if ((this._BeneficiaryReceiptNo != value))
				{
					this.OnBeneficiaryReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryReceiptNo = value;
					this.SendPropertyChanged("BeneficiaryReceiptNo");
					this.OnBeneficiaryReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> BeneficiaryID
		{
			get
			{
				return this._BeneficiaryID;
			}
			set
			{
				if ((this._BeneficiaryID != value))
				{
					if (this._BeneficiaryData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBeneficiaryIDChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryID = value;
					this.SendPropertyChanged("BeneficiaryID");
					this.OnBeneficiaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadFlag", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<short> DownloadFlag
		{
			get
			{
				return this._DownloadFlag;
			}
			set
			{
				if ((this._DownloadFlag != value))
				{
					this.OnDownloadFlagChanging(value);
					this.SendPropertyChanging();
					this._DownloadFlag = value;
					this.SendPropertyChanged("DownloadFlag");
					this.OnDownloadFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> VersionID
		{
			get
			{
				return this._VersionID;
			}
			set
			{
				if ((this._VersionID != value))
				{
					if (this._ApplicantDetails.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionIDChanging(value);
					this.SendPropertyChanging();
					this._VersionID = value;
					this.SendPropertyChanged("VersionID");
					this.OnVersionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneDetailID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<int> BeneDetailID
		{
			get
			{
				return this._BeneDetailID;
			}
			set
			{
				if ((this._BeneDetailID != value))
				{
					if (this._BeneDetails.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBeneDetailIDChanging(value);
					this.SendPropertyChanging();
					this._BeneDetailID = value;
					this.SendPropertyChanged("BeneDetailID");
					this.OnBeneDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoLC_NegoDraft", Storage="_NegoDraft", ThisKey="LC_ID", OtherKey="LC_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<NegoDraft> NegoDraft
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoDraft.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoDraft;
			}
			set
			{
				this._NegoDraft.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_NegoLC", Storage="_AdvisingBankData", ThisKey="AdvisingBank", OtherKey="BankCode", IsForeignKey=true)]
		public BankData AdvisingBankData
		{
			get
			{
				return this._AdvisingBankData.Entity;
			}
			set
			{
				BankData previousValue = this._AdvisingBankData.Entity;
				if (((previousValue != value) 
							|| (this._AdvisingBankData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdvisingBankData.Entity = null;
						previousValue.NegoLC.Remove(this);
					}
					this._AdvisingBankData.Entity = value;
					if ((value != null))
					{
						value.NegoLC.Add(this);
						this._AdvisingBank = value.BankCode;
					}
					else
					{
						this._AdvisingBank = default(string);
					}
					this.SendPropertyChanged("AdvisingBankData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_NegoLC1", Storage="_PayableBankData", ThisKey="PayableBank", OtherKey="BankCode", IsForeignKey=true)]
		public BankData PayableBankData
		{
			get
			{
				return this._PayableBankData.Entity;
			}
			set
			{
				BankData previousValue = this._PayableBankData.Entity;
				if (((previousValue != value) 
							|| (this._PayableBankData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayableBankData.Entity = null;
						previousValue.NegoLC1.Remove(this);
					}
					this._PayableBankData.Entity = value;
					if ((value != null))
					{
						value.NegoLC1.Add(this);
						this._PayableBank = value.BankCode;
					}
					else
					{
						this._PayableBank = default(string);
					}
					this.SendPropertyChanged("PayableBankData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranch_NegoLC", Storage="_CustomerOfBranch", ThisKey="IssuingBank,CompanyID", OtherKey="BankCode,CompanyID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CustomerOfBranch CustomerOfBranch
		{
			get
			{
				return this._CustomerOfBranch.Entity;
			}
			set
			{
				CustomerOfBranch previousValue = this._CustomerOfBranch.Entity;
				if (((previousValue != value) 
							|| (this._CustomerOfBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerOfBranch.Entity = null;
						previousValue.NegoLC.Remove(this);
					}
					this._CustomerOfBranch.Entity = value;
					if ((value != null))
					{
						value.NegoLC.Add(this);
						this._IssuingBank = value.BankCode;
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._IssuingBank = default(string);
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerOfBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_NegoLC", Storage="_ApplicantDetails", ThisKey="VersionID", OtherKey="VersionID", IsForeignKey=true)]
		public CustomerOfBranchVersion ApplicantDetails
		{
			get
			{
				return this._ApplicantDetails.Entity;
			}
			set
			{
				CustomerOfBranchVersion previousValue = this._ApplicantDetails.Entity;
				if (((previousValue != value) 
							|| (this._ApplicantDetails.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicantDetails.Entity = null;
						previousValue.NegoLC.Remove(this);
					}
					this._ApplicantDetails.Entity = value;
					if ((value != null))
					{
						value.NegoLC.Add(this);
						this._VersionID = value.VersionID;
					}
					else
					{
						this._VersionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ApplicantDetails");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_NegoLC1", Storage="_BeneDetails", ThisKey="BeneDetailID", OtherKey="VersionID", IsForeignKey=true)]
		public CustomerOfBranchVersion BeneDetails
		{
			get
			{
				return this._BeneDetails.Entity;
			}
			set
			{
				CustomerOfBranchVersion previousValue = this._BeneDetails.Entity;
				if (((previousValue != value) 
							|| (this._BeneDetails.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BeneDetails.Entity = null;
						previousValue.NegoLC1.Remove(this);
					}
					this._BeneDetails.Entity = value;
					if ((value != null))
					{
						value.NegoLC1.Add(this);
						this._BeneDetailID = value.VersionID;
					}
					else
					{
						this._BeneDetailID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BeneDetails");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryData_NegoLC", Storage="_BeneficiaryData", ThisKey="BeneficiaryID", OtherKey="BeneID", IsForeignKey=true)]
		public BeneficiaryData BeneficiaryData
		{
			get
			{
				return this._BeneficiaryData.Entity;
			}
			set
			{
				BeneficiaryData previousValue = this._BeneficiaryData.Entity;
				if (((previousValue != value) 
							|| (this._BeneficiaryData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BeneficiaryData.Entity = null;
						previousValue.NegoLC.Remove(this);
					}
					this._BeneficiaryData.Entity = value;
					if ((value != null))
					{
						value.NegoLC.Add(this);
						this._BeneficiaryID = value.BeneID;
					}
					else
					{
						this._BeneficiaryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BeneficiaryData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NegoDraft(NegoDraft entity)
		{
			this.SendPropertyChanging();
			entity.NegoLC = this;
		}
		
		private void detach_NegoDraft(NegoDraft entity)
		{
			this.SendPropertyChanging();
			entity.NegoLC = null;
		}
		
		private void Initialize()
		{
			this._NegoDraft = new EntitySet<NegoDraft>(new Action<NegoDraft>(this.attach_NegoDraft), new Action<NegoDraft>(this.detach_NegoDraft));
			this._AdvisingBankData = default(EntityRef<BankData>);
			this._PayableBankData = default(EntityRef<BankData>);
			this._CustomerOfBranch = default(EntityRef<CustomerOfBranch>);
			this._ApplicantDetails = default(EntityRef<CustomerOfBranchVersion>);
			this._BeneDetails = default(EntityRef<CustomerOfBranchVersion>);
			this._BeneficiaryData = default(EntityRef<BeneficiaryData>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CreditApplicationDocumentary")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CreditApplicationDocumentary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppID;
		
		private System.Nullable<int> _PaymentID;
		
		private System.Nullable<int> _OpeningID;
		
		private string _ApplicationNo;
		
		private System.DateTime _ApplicationDate;
		
		private int _申請人;
		
		private int _受益人;
		
		private string _開狀行;
		
		private string _付款行;
		
		private string _通知行;
		
		private bool _見票即付;
		
		private int _定日付款;
		
		private System.Nullable<int> _AttachmentID;
		
		private System.Nullable<int> _NoteID;
		
		private System.Nullable<int> _ItemID;
		
		private string _沖銷保證金方式;
		
		private string _FileName;
		
		private string _Instrunction;
		
		private System.Nullable<int> _VersionID;
		
		private System.Nullable<int> _BeneDetailID;
		
		private System.Nullable<bool> _OverTheCounter;
		
		private System.Nullable<bool> _IsAccepted;
		
		private EntityRef<FpgLcItem> _FpgLcItem;
		
		private EntitySet<LetterOfCredit> _LetterOfCredit;
		
		private EntityRef<AttachableDocument> _AttachableDocument;
		
		private EntityRef<BankData> _PayableBank;
		
		private EntityRef<BankData> _AdvisingBank;
		
		private EntityRef<CustomerOfBranch> _CustomerOfBranch;
		
		private EntityRef<CustomerOfBranchVersion> _ApplicantDetails;
		
		private EntityRef<CustomerOfBranchVersion> _BeneDetails;
		
		private EntityRef<Documentary> _Documentary;
		
		private EntityRef<LcItem> _LcItem;
		
		private EntityRef<OpeningApplicationDocumentary> _OpeningApplicationDocumentary;
		
		private EntityRef<PaymentNotification> _PaymentNotification;
		
		private EntityRef<SpecificNote> _SpecificNote;
		
		private EntityRef<BeneficiaryData> _BeneficiaryData;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppIDChanging(int value);
    partial void OnAppIDChanged();
    partial void OnPaymentIDChanging(System.Nullable<int> value);
    partial void OnPaymentIDChanged();
    partial void OnOpeningIDChanging(System.Nullable<int> value);
    partial void OnOpeningIDChanged();
    partial void OnApplicationNoChanging(string value);
    partial void OnApplicationNoChanged();
    partial void OnApplicationDateChanging(System.DateTime value);
    partial void OnApplicationDateChanged();
    partial void On申請人Changing(int value);
    partial void On申請人Changed();
    partial void On受益人Changing(int value);
    partial void On受益人Changed();
    partial void On開狀行Changing(string value);
    partial void On開狀行Changed();
    partial void On付款行Changing(string value);
    partial void On付款行Changed();
    partial void On通知行Changing(string value);
    partial void On通知行Changed();
    partial void On見票即付Changing(bool value);
    partial void On見票即付Changed();
    partial void On定日付款Changing(int value);
    partial void On定日付款Changed();
    partial void OnAttachmentIDChanging(System.Nullable<int> value);
    partial void OnAttachmentIDChanged();
    partial void OnNoteIDChanging(System.Nullable<int> value);
    partial void OnNoteIDChanged();
    partial void OnItemIDChanging(System.Nullable<int> value);
    partial void OnItemIDChanged();
    partial void On沖銷保證金方式Changing(string value);
    partial void On沖銷保證金方式Changed();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnInstrunctionChanging(string value);
    partial void OnInstrunctionChanged();
    partial void OnVersionIDChanging(System.Nullable<int> value);
    partial void OnVersionIDChanged();
    partial void OnBeneDetailIDChanging(System.Nullable<int> value);
    partial void OnBeneDetailIDChanged();
    partial void OnOverTheCounterChanging(System.Nullable<bool> value);
    partial void OnOverTheCounterChanged();
    partial void OnIsAcceptedChanging(System.Nullable<bool> value);
    partial void OnIsAcceptedChanged();
    #endregion
		
		public CreditApplicationDocumentary()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AppID
		{
			get
			{
				return this._AppID;
			}
			set
			{
				if ((this._AppID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppIDChanging(value);
					this.SendPropertyChanging();
					this._AppID = value;
					this.SendPropertyChanged("AppID");
					this.OnAppIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					if (this._PaymentNotification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpeningID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> OpeningID
		{
			get
			{
				return this._OpeningID;
			}
			set
			{
				if ((this._OpeningID != value))
				{
					if (this._OpeningApplicationDocumentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOpeningIDChanging(value);
					this.SendPropertyChanging();
					this._OpeningID = value;
					this.SendPropertyChanged("OpeningID");
					this.OnOpeningIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationNo", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ApplicationNo
		{
			get
			{
				return this._ApplicationNo;
			}
			set
			{
				if ((this._ApplicationNo != value))
				{
					this.OnApplicationNoChanging(value);
					this.SendPropertyChanging();
					this._ApplicationNo = value;
					this.SendPropertyChanged("ApplicationNo");
					this.OnApplicationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime ApplicationDate
		{
			get
			{
				return this._ApplicationDate;
			}
			set
			{
				if ((this._ApplicationDate != value))
				{
					this.OnApplicationDateChanging(value);
					this.SendPropertyChanging();
					this._ApplicationDate = value;
					this.SendPropertyChanged("ApplicationDate");
					this.OnApplicationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_申請人", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int 申請人
		{
			get
			{
				return this._申請人;
			}
			set
			{
				if ((this._申請人 != value))
				{
					if (this._CustomerOfBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.On申請人Changing(value);
					this.SendPropertyChanging();
					this._申請人 = value;
					this.SendPropertyChanged("申請人");
					this.On申請人Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_受益人", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int 受益人
		{
			get
			{
				return this._受益人;
			}
			set
			{
				if ((this._受益人 != value))
				{
					if (this._BeneficiaryData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.On受益人Changing(value);
					this.SendPropertyChanging();
					this._受益人 = value;
					this.SendPropertyChanged("受益人");
					this.On受益人Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_開狀行", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string 開狀行
		{
			get
			{
				return this._開狀行;
			}
			set
			{
				if ((this._開狀行 != value))
				{
					if (this._CustomerOfBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.On開狀行Changing(value);
					this.SendPropertyChanging();
					this._開狀行 = value;
					this.SendPropertyChanged("開狀行");
					this.On開狀行Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_付款行", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string 付款行
		{
			get
			{
				return this._付款行;
			}
			set
			{
				if ((this._付款行 != value))
				{
					if (this._PayableBank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.On付款行Changing(value);
					this.SendPropertyChanging();
					this._付款行 = value;
					this.SendPropertyChanged("付款行");
					this.On付款行Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_通知行", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string 通知行
		{
			get
			{
				return this._通知行;
			}
			set
			{
				if ((this._通知行 != value))
				{
					if (this._AdvisingBank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.On通知行Changing(value);
					this.SendPropertyChanging();
					this._通知行 = value;
					this.SendPropertyChanged("通知行");
					this.On通知行Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_見票即付", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool 見票即付
		{
			get
			{
				return this._見票即付;
			}
			set
			{
				if ((this._見票即付 != value))
				{
					this.On見票即付Changing(value);
					this.SendPropertyChanging();
					this._見票即付 = value;
					this.SendPropertyChanged("見票即付");
					this.On見票即付Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_定日付款", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public int 定日付款
		{
			get
			{
				return this._定日付款;
			}
			set
			{
				if ((this._定日付款 != value))
				{
					this.On定日付款Changing(value);
					this.SendPropertyChanging();
					this._定日付款 = value;
					this.SendPropertyChanged("定日付款");
					this.On定日付款Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<int> AttachmentID
		{
			get
			{
				return this._AttachmentID;
			}
			set
			{
				if ((this._AttachmentID != value))
				{
					if (this._AttachableDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._AttachmentID = value;
					this.SendPropertyChanged("AttachmentID");
					this.OnAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<int> NoteID
		{
			get
			{
				return this._NoteID;
			}
			set
			{
				if ((this._NoteID != value))
				{
					if (this._SpecificNote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoteIDChanging(value);
					this.SendPropertyChanging();
					this._NoteID = value;
					this.SendPropertyChanged("NoteID");
					this.OnNoteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<int> ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._LcItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_沖銷保證金方式", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string 沖銷保證金方式
		{
			get
			{
				return this._沖銷保證金方式;
			}
			set
			{
				if ((this._沖銷保證金方式 != value))
				{
					this.On沖銷保證金方式Changing(value);
					this.SendPropertyChanging();
					this._沖銷保證金方式 = value;
					this.SendPropertyChanged("沖銷保證金方式");
					this.On沖銷保證金方式Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instrunction", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string Instrunction
		{
			get
			{
				return this._Instrunction;
			}
			set
			{
				if ((this._Instrunction != value))
				{
					this.OnInstrunctionChanging(value);
					this.SendPropertyChanging();
					this._Instrunction = value;
					this.SendPropertyChanged("Instrunction");
					this.OnInstrunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> VersionID
		{
			get
			{
				return this._VersionID;
			}
			set
			{
				if ((this._VersionID != value))
				{
					if (this._ApplicantDetails.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionIDChanging(value);
					this.SendPropertyChanging();
					this._VersionID = value;
					this.SendPropertyChanged("VersionID");
					this.OnVersionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneDetailID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> BeneDetailID
		{
			get
			{
				return this._BeneDetailID;
			}
			set
			{
				if ((this._BeneDetailID != value))
				{
					if (this._BeneDetails.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBeneDetailIDChanging(value);
					this.SendPropertyChanging();
					this._BeneDetailID = value;
					this.SendPropertyChanged("BeneDetailID");
					this.OnBeneDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverTheCounter", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<bool> OverTheCounter
		{
			get
			{
				return this._OverTheCounter;
			}
			set
			{
				if ((this._OverTheCounter != value))
				{
					this.OnOverTheCounterChanging(value);
					this.SendPropertyChanging();
					this._OverTheCounter = value;
					this.SendPropertyChanged("OverTheCounter");
					this.OnOverTheCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccepted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<bool> IsAccepted
		{
			get
			{
				return this._IsAccepted;
			}
			set
			{
				if ((this._IsAccepted != value))
				{
					this.OnIsAcceptedChanging(value);
					this.SendPropertyChanging();
					this._IsAccepted = value;
					this.SendPropertyChanged("IsAccepted");
					this.OnIsAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditApplicationDocumentary_FpgLcItem", Storage="_FpgLcItem", ThisKey="AppID", OtherKey="AppID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public FpgLcItem FpgLcItem
		{
			get
			{
				if ((this.serializing 
							&& (this._FpgLcItem.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._FpgLcItem.Entity;
			}
			set
			{
				FpgLcItem previousValue = this._FpgLcItem.Entity;
				if (((previousValue != value) 
							|| (this._FpgLcItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FpgLcItem.Entity = null;
						previousValue.CreditApplicationDocumentary = null;
					}
					this._FpgLcItem.Entity = value;
					if ((value != null))
					{
						value.CreditApplicationDocumentary = this;
					}
					this.SendPropertyChanged("FpgLcItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditApplicationDocumentary_LetterOfCredit", Storage="_LetterOfCredit", ThisKey="AppID", OtherKey="AppID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<LetterOfCredit> LetterOfCredit
		{
			get
			{
				if ((this.serializing 
							&& (this._LetterOfCredit.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LetterOfCredit;
			}
			set
			{
				this._LetterOfCredit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttachableDocument_CreditApplicationDocumentary", Storage="_AttachableDocument", ThisKey="AttachmentID", OtherKey="AttachmentID", IsForeignKey=true)]
		public AttachableDocument AttachableDocument
		{
			get
			{
				return this._AttachableDocument.Entity;
			}
			set
			{
				AttachableDocument previousValue = this._AttachableDocument.Entity;
				if (((previousValue != value) 
							|| (this._AttachableDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AttachableDocument.Entity = null;
						previousValue.CreditApplicationDocumentary.Remove(this);
					}
					this._AttachableDocument.Entity = value;
					if ((value != null))
					{
						value.CreditApplicationDocumentary.Add(this);
						this._AttachmentID = value.AttachmentID;
					}
					else
					{
						this._AttachmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AttachableDocument");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_CreditApplicationDocumentary", Storage="_PayableBank", ThisKey="付款行", OtherKey="BankCode", IsForeignKey=true)]
		public BankData PayableBank
		{
			get
			{
				return this._PayableBank.Entity;
			}
			set
			{
				BankData previousValue = this._PayableBank.Entity;
				if (((previousValue != value) 
							|| (this._PayableBank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayableBank.Entity = null;
						previousValue.CreditApplicationDocumentary.Remove(this);
					}
					this._PayableBank.Entity = value;
					if ((value != null))
					{
						value.CreditApplicationDocumentary.Add(this);
						this._付款行 = value.BankCode;
					}
					else
					{
						this._付款行 = default(string);
					}
					this.SendPropertyChanged("PayableBank");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_CreditApplicationDocumentary1", Storage="_AdvisingBank", ThisKey="通知行", OtherKey="BankCode", IsForeignKey=true)]
		public BankData AdvisingBank
		{
			get
			{
				return this._AdvisingBank.Entity;
			}
			set
			{
				BankData previousValue = this._AdvisingBank.Entity;
				if (((previousValue != value) 
							|| (this._AdvisingBank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdvisingBank.Entity = null;
						previousValue.CreditApplicationDocumentary1.Remove(this);
					}
					this._AdvisingBank.Entity = value;
					if ((value != null))
					{
						value.CreditApplicationDocumentary1.Add(this);
						this._通知行 = value.BankCode;
					}
					else
					{
						this._通知行 = default(string);
					}
					this.SendPropertyChanged("AdvisingBank");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranch_CreditApplicationDocumentary", Storage="_CustomerOfBranch", ThisKey="開狀行,申請人", OtherKey="BankCode,CompanyID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CustomerOfBranch CustomerOfBranch
		{
			get
			{
				return this._CustomerOfBranch.Entity;
			}
			set
			{
				CustomerOfBranch previousValue = this._CustomerOfBranch.Entity;
				if (((previousValue != value) 
							|| (this._CustomerOfBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerOfBranch.Entity = null;
						previousValue.CreditApplicationDocumentary.Remove(this);
					}
					this._CustomerOfBranch.Entity = value;
					if ((value != null))
					{
						value.CreditApplicationDocumentary.Add(this);
						this._開狀行 = value.BankCode;
						this._申請人 = value.CompanyID;
					}
					else
					{
						this._開狀行 = default(string);
						this._申請人 = default(int);
					}
					this.SendPropertyChanged("CustomerOfBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_CreditApplicationDocumentary", Storage="_ApplicantDetails", ThisKey="VersionID", OtherKey="VersionID", IsForeignKey=true)]
		public CustomerOfBranchVersion ApplicantDetails
		{
			get
			{
				return this._ApplicantDetails.Entity;
			}
			set
			{
				CustomerOfBranchVersion previousValue = this._ApplicantDetails.Entity;
				if (((previousValue != value) 
							|| (this._ApplicantDetails.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicantDetails.Entity = null;
						previousValue.CreditApplicationDocumentary.Remove(this);
					}
					this._ApplicantDetails.Entity = value;
					if ((value != null))
					{
						value.CreditApplicationDocumentary.Add(this);
						this._VersionID = value.VersionID;
					}
					else
					{
						this._VersionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ApplicantDetails");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_CreditApplicationDocumentary1", Storage="_BeneDetails", ThisKey="BeneDetailID", OtherKey="VersionID", IsForeignKey=true)]
		public CustomerOfBranchVersion BeneDetails
		{
			get
			{
				return this._BeneDetails.Entity;
			}
			set
			{
				CustomerOfBranchVersion previousValue = this._BeneDetails.Entity;
				if (((previousValue != value) 
							|| (this._BeneDetails.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BeneDetails.Entity = null;
						previousValue.CreditApplicationDocumentary1.Remove(this);
					}
					this._BeneDetails.Entity = value;
					if ((value != null))
					{
						value.CreditApplicationDocumentary1.Add(this);
						this._BeneDetailID = value.VersionID;
					}
					else
					{
						this._BeneDetailID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BeneDetails");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_CreditApplicationDocumentary", Storage="_Documentary", ThisKey="AppID", OtherKey="DocID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.CreditApplicationDocumentary = null;
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.CreditApplicationDocumentary = this;
						this._AppID = value.DocID;
					}
					else
					{
						this._AppID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LcItem_CreditApplicationDocumentary", Storage="_LcItem", ThisKey="ItemID", OtherKey="ItemID", IsForeignKey=true)]
		public LcItem LcItem
		{
			get
			{
				return this._LcItem.Entity;
			}
			set
			{
				LcItem previousValue = this._LcItem.Entity;
				if (((previousValue != value) 
							|| (this._LcItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LcItem.Entity = null;
						previousValue.CreditApplicationDocumentary.Remove(this);
					}
					this._LcItem.Entity = value;
					if ((value != null))
					{
						value.CreditApplicationDocumentary.Add(this);
						this._ItemID = value.ItemID;
					}
					else
					{
						this._ItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LcItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OpeningApplicationDocumentary_CreditApplicationDocumentary", Storage="_OpeningApplicationDocumentary", ThisKey="OpeningID", OtherKey="OpeningID", IsForeignKey=true)]
		public OpeningApplicationDocumentary OpeningApplicationDocumentary
		{
			get
			{
				return this._OpeningApplicationDocumentary.Entity;
			}
			set
			{
				OpeningApplicationDocumentary previousValue = this._OpeningApplicationDocumentary.Entity;
				if (((previousValue != value) 
							|| (this._OpeningApplicationDocumentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpeningApplicationDocumentary.Entity = null;
						previousValue.CreditApplicationDocumentary.Remove(this);
					}
					this._OpeningApplicationDocumentary.Entity = value;
					if ((value != null))
					{
						value.CreditApplicationDocumentary.Add(this);
						this._OpeningID = value.OpeningID;
					}
					else
					{
						this._OpeningID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpeningApplicationDocumentary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentNotification_CreditApplicationDocumentary", Storage="_PaymentNotification", ThisKey="PaymentID", OtherKey="PaymentID", IsForeignKey=true)]
		public PaymentNotification PaymentNotification
		{
			get
			{
				return this._PaymentNotification.Entity;
			}
			set
			{
				PaymentNotification previousValue = this._PaymentNotification.Entity;
				if (((previousValue != value) 
							|| (this._PaymentNotification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentNotification.Entity = null;
						previousValue.CreditApplicationDocumentary.Remove(this);
					}
					this._PaymentNotification.Entity = value;
					if ((value != null))
					{
						value.CreditApplicationDocumentary.Add(this);
						this._PaymentID = value.PaymentID;
					}
					else
					{
						this._PaymentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PaymentNotification");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecificNote_CreditApplicationDocumentary", Storage="_SpecificNote", ThisKey="NoteID", OtherKey="NoteID", IsForeignKey=true)]
		public SpecificNote SpecificNote
		{
			get
			{
				return this._SpecificNote.Entity;
			}
			set
			{
				SpecificNote previousValue = this._SpecificNote.Entity;
				if (((previousValue != value) 
							|| (this._SpecificNote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecificNote.Entity = null;
						previousValue.CreditApplicationDocumentary.Remove(this);
					}
					this._SpecificNote.Entity = value;
					if ((value != null))
					{
						value.CreditApplicationDocumentary.Add(this);
						this._NoteID = value.NoteID;
					}
					else
					{
						this._NoteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SpecificNote");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryData_CreditApplicationDocumentary", Storage="_BeneficiaryData", ThisKey="受益人", OtherKey="BeneID", IsForeignKey=true)]
		public BeneficiaryData BeneficiaryData
		{
			get
			{
				return this._BeneficiaryData.Entity;
			}
			set
			{
				BeneficiaryData previousValue = this._BeneficiaryData.Entity;
				if (((previousValue != value) 
							|| (this._BeneficiaryData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BeneficiaryData.Entity = null;
						previousValue.CreditApplicationDocumentary.Remove(this);
					}
					this._BeneficiaryData.Entity = value;
					if ((value != null))
					{
						value.CreditApplicationDocumentary.Add(this);
						this._受益人 = value.BeneID;
					}
					else
					{
						this._受益人 = default(int);
					}
					this.SendPropertyChanged("BeneficiaryData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LetterOfCredit(LetterOfCredit entity)
		{
			this.SendPropertyChanging();
			entity.CreditApplicationDocumentary = this;
		}
		
		private void detach_LetterOfCredit(LetterOfCredit entity)
		{
			this.SendPropertyChanging();
			entity.CreditApplicationDocumentary = null;
		}
		
		private void Initialize()
		{
			this._FpgLcItem = default(EntityRef<FpgLcItem>);
			this._LetterOfCredit = new EntitySet<LetterOfCredit>(new Action<LetterOfCredit>(this.attach_LetterOfCredit), new Action<LetterOfCredit>(this.detach_LetterOfCredit));
			this._AttachableDocument = default(EntityRef<AttachableDocument>);
			this._PayableBank = default(EntityRef<BankData>);
			this._AdvisingBank = default(EntityRef<BankData>);
			this._CustomerOfBranch = default(EntityRef<CustomerOfBranch>);
			this._ApplicantDetails = default(EntityRef<CustomerOfBranchVersion>);
			this._BeneDetails = default(EntityRef<CustomerOfBranchVersion>);
			this._Documentary = default(EntityRef<Documentary>);
			this._LcItem = default(EntityRef<LcItem>);
			this._OpeningApplicationDocumentary = default(EntityRef<OpeningApplicationDocumentary>);
			this._PaymentNotification = default(EntityRef<PaymentNotification>);
			this._SpecificNote = default(EntityRef<SpecificNote>);
			this._BeneficiaryData = default(EntityRef<BeneficiaryData>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BeneficiaryData")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BeneficiaryData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BeneID;
		
		private System.Nullable<bool> _AppCountersign;
		
		private string _AppAccount;
		
		private string _Approver01;
		
		private string _Approver02;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<int> _DraftType;
		
		private System.Nullable<int> _CurrentVersion;
		
		private System.Nullable<int> _LogID;
		
		private System.Nullable<System.Guid> _RecordID;
		
		private string _NegoCenter;
		
		private EntitySet<FpgLcMonthlyReport> _FpgLcMonthlyReport;
		
		private EntitySet<FpgBeneficiaryStatus> _FpgBeneficiaryStatus;
		
		private EntitySet<NegoLC> _NegoLC;
		
		private EntitySet<CreditApplicationDocumentary> _CreditApplicationDocumentary;
		
		private EntityRef<BankData> _BankData;
		
		private EntityRef<RevisionLog> _RevisionLog;
		
		private EntityRef<CustomerOfBranchVersion> _CustomerOfBranchVersion;
		
		private EntityRef<Organization> _Organization;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBeneIDChanging(int value);
    partial void OnBeneIDChanged();
    partial void OnAppCountersignChanging(System.Nullable<bool> value);
    partial void OnAppCountersignChanged();
    partial void OnAppAccountChanging(string value);
    partial void OnAppAccountChanged();
    partial void OnApprover01Changing(string value);
    partial void OnApprover01Changed();
    partial void OnApprover02Changing(string value);
    partial void OnApprover02Changed();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnDraftTypeChanging(System.Nullable<int> value);
    partial void OnDraftTypeChanged();
    partial void OnCurrentVersionChanging(System.Nullable<int> value);
    partial void OnCurrentVersionChanged();
    partial void OnLogIDChanging(System.Nullable<int> value);
    partial void OnLogIDChanged();
    partial void OnRecordIDChanging(System.Nullable<System.Guid> value);
    partial void OnRecordIDChanged();
    partial void OnNegoCenterChanging(string value);
    partial void OnNegoCenterChanged();
    #endregion
		
		public BeneficiaryData()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int BeneID
		{
			get
			{
				return this._BeneID;
			}
			set
			{
				if ((this._BeneID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBeneIDChanging(value);
					this.SendPropertyChanging();
					this._BeneID = value;
					this.SendPropertyChanged("BeneID");
					this.OnBeneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppCountersign", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<bool> AppCountersign
		{
			get
			{
				return this._AppCountersign;
			}
			set
			{
				if ((this._AppCountersign != value))
				{
					this.OnAppCountersignChanging(value);
					this.SendPropertyChanging();
					this._AppCountersign = value;
					this.SendPropertyChanged("AppCountersign");
					this.OnAppCountersignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppAccount", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string AppAccount
		{
			get
			{
				return this._AppAccount;
			}
			set
			{
				if ((this._AppAccount != value))
				{
					this.OnAppAccountChanging(value);
					this.SendPropertyChanging();
					this._AppAccount = value;
					this.SendPropertyChanged("AppAccount");
					this.OnAppAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approver01", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Approver01
		{
			get
			{
				return this._Approver01;
			}
			set
			{
				if ((this._Approver01 != value))
				{
					this.OnApprover01Changing(value);
					this.SendPropertyChanging();
					this._Approver01 = value;
					this.SendPropertyChanged("Approver01");
					this.OnApprover01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approver02", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Approver02
		{
			get
			{
				return this._Approver02;
			}
			set
			{
				if ((this._Approver02 != value))
				{
					this.OnApprover02Changing(value);
					this.SendPropertyChanging();
					this._Approver02 = value;
					this.SendPropertyChanged("Approver02");
					this.OnApprover02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DraftType", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> DraftType
		{
			get
			{
				return this._DraftType;
			}
			set
			{
				if ((this._DraftType != value))
				{
					this.OnDraftTypeChanging(value);
					this.SendPropertyChanging();
					this._DraftType = value;
					this.SendPropertyChanged("DraftType");
					this.OnDraftTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentVersion", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> CurrentVersion
		{
			get
			{
				return this._CurrentVersion;
			}
			set
			{
				if ((this._CurrentVersion != value))
				{
					if (this._CustomerOfBranchVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._CurrentVersion = value;
					this.SendPropertyChanged("CurrentVersion");
					this.OnCurrentVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					if (this._RevisionLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.Guid> RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this.OnRecordIDChanging(value);
					this.SendPropertyChanging();
					this._RecordID = value;
					this.SendPropertyChanged("RecordID");
					this.OnRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NegoCenter", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string NegoCenter
		{
			get
			{
				return this._NegoCenter;
			}
			set
			{
				if ((this._NegoCenter != value))
				{
					if (this._BankData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNegoCenterChanging(value);
					this.SendPropertyChanging();
					this._NegoCenter = value;
					this.SendPropertyChanged("NegoCenter");
					this.OnNegoCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryData_FpgLcMonthlyReport", Storage="_FpgLcMonthlyReport", ThisKey="BeneID", OtherKey="BeneID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<FpgLcMonthlyReport> FpgLcMonthlyReport
		{
			get
			{
				if ((this.serializing 
							&& (this._FpgLcMonthlyReport.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FpgLcMonthlyReport;
			}
			set
			{
				this._FpgLcMonthlyReport.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryData_FpgBeneficiaryStatus", Storage="_FpgBeneficiaryStatus", ThisKey="BeneID", OtherKey="BeneID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<FpgBeneficiaryStatus> FpgBeneficiaryStatus
		{
			get
			{
				if ((this.serializing 
							&& (this._FpgBeneficiaryStatus.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FpgBeneficiaryStatus;
			}
			set
			{
				this._FpgBeneficiaryStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryData_NegoLC", Storage="_NegoLC", ThisKey="BeneID", OtherKey="BeneficiaryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<NegoLC> NegoLC
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoLC.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoLC;
			}
			set
			{
				this._NegoLC.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BeneficiaryData_CreditApplicationDocumentary", Storage="_CreditApplicationDocumentary", ThisKey="BeneID", OtherKey="受益人")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<CreditApplicationDocumentary> CreditApplicationDocumentary
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditApplicationDocumentary.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CreditApplicationDocumentary;
			}
			set
			{
				this._CreditApplicationDocumentary.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_BeneficiaryData", Storage="_BankData", ThisKey="NegoCenter", OtherKey="BankCode", IsForeignKey=true)]
		public BankData BankData
		{
			get
			{
				return this._BankData.Entity;
			}
			set
			{
				BankData previousValue = this._BankData.Entity;
				if (((previousValue != value) 
							|| (this._BankData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankData.Entity = null;
						previousValue.BeneficiaryData.Remove(this);
					}
					this._BankData.Entity = value;
					if ((value != null))
					{
						value.BeneficiaryData.Add(this);
						this._NegoCenter = value.BankCode;
					}
					else
					{
						this._NegoCenter = default(string);
					}
					this.SendPropertyChanged("BankData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RevisionLog_BeneficiaryData", Storage="_RevisionLog", ThisKey="LogID", OtherKey="LogID", IsForeignKey=true)]
		public RevisionLog RevisionLog
		{
			get
			{
				return this._RevisionLog.Entity;
			}
			set
			{
				RevisionLog previousValue = this._RevisionLog.Entity;
				if (((previousValue != value) 
							|| (this._RevisionLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RevisionLog.Entity = null;
						previousValue.BeneficiaryData.Remove(this);
					}
					this._RevisionLog.Entity = value;
					if ((value != null))
					{
						value.BeneficiaryData.Add(this);
						this._LogID = value.LogID;
					}
					else
					{
						this._LogID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RevisionLog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_BeneficiaryData", Storage="_CustomerOfBranchVersion", ThisKey="CurrentVersion", OtherKey="VersionID", IsForeignKey=true)]
		public CustomerOfBranchVersion CustomerOfBranchVersion
		{
			get
			{
				return this._CustomerOfBranchVersion.Entity;
			}
			set
			{
				CustomerOfBranchVersion previousValue = this._CustomerOfBranchVersion.Entity;
				if (((previousValue != value) 
							|| (this._CustomerOfBranchVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerOfBranchVersion.Entity = null;
						previousValue.BeneficiaryData.Remove(this);
					}
					this._CustomerOfBranchVersion.Entity = value;
					if ((value != null))
					{
						value.BeneficiaryData.Add(this);
						this._CurrentVersion = value.VersionID;
					}
					else
					{
						this._CurrentVersion = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerOfBranchVersion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_BeneficiaryData", Storage="_Organization", ThisKey="BeneID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.BeneficiaryData = null;
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.BeneficiaryData = this;
						this._BeneID = value.CompanyID;
					}
					else
					{
						this._BeneID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FpgLcMonthlyReport(FpgLcMonthlyReport entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryData = this;
		}
		
		private void detach_FpgLcMonthlyReport(FpgLcMonthlyReport entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryData = null;
		}
		
		private void attach_FpgBeneficiaryStatus(FpgBeneficiaryStatus entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryData = this;
		}
		
		private void detach_FpgBeneficiaryStatus(FpgBeneficiaryStatus entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryData = null;
		}
		
		private void attach_NegoLC(NegoLC entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryData = this;
		}
		
		private void detach_NegoLC(NegoLC entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryData = null;
		}
		
		private void attach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryData = this;
		}
		
		private void detach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.BeneficiaryData = null;
		}
		
		private void Initialize()
		{
			this._FpgLcMonthlyReport = new EntitySet<FpgLcMonthlyReport>(new Action<FpgLcMonthlyReport>(this.attach_FpgLcMonthlyReport), new Action<FpgLcMonthlyReport>(this.detach_FpgLcMonthlyReport));
			this._FpgBeneficiaryStatus = new EntitySet<FpgBeneficiaryStatus>(new Action<FpgBeneficiaryStatus>(this.attach_FpgBeneficiaryStatus), new Action<FpgBeneficiaryStatus>(this.detach_FpgBeneficiaryStatus));
			this._NegoLC = new EntitySet<NegoLC>(new Action<NegoLC>(this.attach_NegoLC), new Action<NegoLC>(this.detach_NegoLC));
			this._CreditApplicationDocumentary = new EntitySet<CreditApplicationDocumentary>(new Action<CreditApplicationDocumentary>(this.attach_CreditApplicationDocumentary), new Action<CreditApplicationDocumentary>(this.detach_CreditApplicationDocumentary));
			this._BankData = default(EntityRef<BankData>);
			this._RevisionLog = default(EntityRef<RevisionLog>);
			this._CustomerOfBranchVersion = default(EntityRef<CustomerOfBranchVersion>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationExtension")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OrganizationExtension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyID;
		
		private string _PRODUCTS;
		
		private System.Nullable<int> _TOTAL_AMOUNT;
		
		private System.Nullable<int> _NEED_CP;
		
		private string _CP_ACCOUNT;
		
		private string _SIGNET;
		
		private string _STATUS_CODE;
		
		private System.Nullable<System.DateTime> _CREATE_DATE;
		
		private string _PID;
		
		private string _CA_NO;
		
		private System.Nullable<int> _CurrentVersion;
		
		private EntityRef<CustomerOfBranchVersion> _CustomerOfBranchVersion;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnPRODUCTSChanging(string value);
    partial void OnPRODUCTSChanged();
    partial void OnTOTAL_AMOUNTChanging(System.Nullable<int> value);
    partial void OnTOTAL_AMOUNTChanged();
    partial void OnNEED_CPChanging(System.Nullable<int> value);
    partial void OnNEED_CPChanged();
    partial void OnCP_ACCOUNTChanging(string value);
    partial void OnCP_ACCOUNTChanged();
    partial void OnSIGNETChanging(string value);
    partial void OnSIGNETChanged();
    partial void OnSTATUS_CODEChanging(string value);
    partial void OnSTATUS_CODEChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    partial void OnPIDChanging(string value);
    partial void OnPIDChanged();
    partial void OnCA_NOChanging(string value);
    partial void OnCA_NOChanged();
    partial void OnCurrentVersionChanging(System.Nullable<int> value);
    partial void OnCurrentVersionChanged();
    #endregion
		
		public OrganizationExtension()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTS", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string PRODUCTS
		{
			get
			{
				return this._PRODUCTS;
			}
			set
			{
				if ((this._PRODUCTS != value))
				{
					this.OnPRODUCTSChanging(value);
					this.SendPropertyChanging();
					this._PRODUCTS = value;
					this.SendPropertyChanged("PRODUCTS");
					this.OnPRODUCTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_AMOUNT", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> TOTAL_AMOUNT
		{
			get
			{
				return this._TOTAL_AMOUNT;
			}
			set
			{
				if ((this._TOTAL_AMOUNT != value))
				{
					this.OnTOTAL_AMOUNTChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_AMOUNT = value;
					this.SendPropertyChanged("TOTAL_AMOUNT");
					this.OnTOTAL_AMOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEED_CP", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> NEED_CP
		{
			get
			{
				return this._NEED_CP;
			}
			set
			{
				if ((this._NEED_CP != value))
				{
					this.OnNEED_CPChanging(value);
					this.SendPropertyChanging();
					this._NEED_CP = value;
					this.SendPropertyChanged("NEED_CP");
					this.OnNEED_CPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CP_ACCOUNT", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CP_ACCOUNT
		{
			get
			{
				return this._CP_ACCOUNT;
			}
			set
			{
				if ((this._CP_ACCOUNT != value))
				{
					this.OnCP_ACCOUNTChanging(value);
					this.SendPropertyChanging();
					this._CP_ACCOUNT = value;
					this.SendPropertyChanged("CP_ACCOUNT");
					this.OnCP_ACCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIGNET", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string SIGNET
		{
			get
			{
				return this._SIGNET;
			}
			set
			{
				if ((this._SIGNET != value))
				{
					this.OnSIGNETChanging(value);
					this.SendPropertyChanging();
					this._SIGNET = value;
					this.SendPropertyChanged("SIGNET");
					this.OnSIGNETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS_CODE", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string STATUS_CODE
		{
			get
			{
				return this._STATUS_CODE;
			}
			set
			{
				if ((this._STATUS_CODE != value))
				{
					this.OnSTATUS_CODEChanging(value);
					this.SendPropertyChanging();
					this._STATUS_CODE = value;
					this.SendPropertyChanged("STATUS_CODE");
					this.OnSTATUS_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CA_NO", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string CA_NO
		{
			get
			{
				return this._CA_NO;
			}
			set
			{
				if ((this._CA_NO != value))
				{
					this.OnCA_NOChanging(value);
					this.SendPropertyChanging();
					this._CA_NO = value;
					this.SendPropertyChanged("CA_NO");
					this.OnCA_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentVersion", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> CurrentVersion
		{
			get
			{
				return this._CurrentVersion;
			}
			set
			{
				if ((this._CurrentVersion != value))
				{
					if (this._CustomerOfBranchVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._CurrentVersion = value;
					this.SendPropertyChanged("CurrentVersion");
					this.OnCurrentVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_OrganizationExtension", Storage="_CustomerOfBranchVersion", ThisKey="CurrentVersion", OtherKey="VersionID", IsForeignKey=true)]
		public CustomerOfBranchVersion CustomerOfBranchVersion
		{
			get
			{
				return this._CustomerOfBranchVersion.Entity;
			}
			set
			{
				CustomerOfBranchVersion previousValue = this._CustomerOfBranchVersion.Entity;
				if (((previousValue != value) 
							|| (this._CustomerOfBranchVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerOfBranchVersion.Entity = null;
						previousValue.OrganizationExtension.Remove(this);
					}
					this._CustomerOfBranchVersion.Entity = value;
					if ((value != null))
					{
						value.OrganizationExtension.Add(this);
						this._CurrentVersion = value.VersionID;
					}
					else
					{
						this._CurrentVersion = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerOfBranchVersion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationExtension", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.OrganizationExtension = null;
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.OrganizationExtension = this;
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CustomerOfBranchVersion = default(EntityRef<CustomerOfBranchVersion>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerOfBranchVersion")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CustomerOfBranchVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VersionID;
		
		private string _BankCode;
		
		private System.Nullable<int> _CompanyID;
		
		private string _CompanyName;
		
		private string _PayableAccount;
		
		private string _Addr;
		
		private string _Phone;
		
		private string _ContactEmail;
		
		private string _Undertaker;
		
		private System.Nullable<int> _PostponeMonths;
		
		private System.Nullable<int> _UsancelimitedDays;
		
		private string _PID;
		
		private string _EnglishName;
		
		private string _EnglishAddr;
		
		private string _RegAddr;
		
		private string _EnglishRegAddr;
		
		private string _Fax;
		
		private string _UndertakerID;
		
		private string _UndertakerName;
		
		private string _ContactName;
		
		private string _ContactPhone;
		
		private string _PRODUCTS;
		
		private string _OldBankCode;
		
		private EntitySet<CustomerOfBranch> _CustomerOfBranch;
		
		private EntityRef<CustomerOfBranchApproval> _CustomerOfBranchApproval;
		
		private EntityRef<F0390> _F0390;
		
		private EntityRef<FR062> _FR062;
		
		private EntityRef<AMLComment> _AMLComment;
		
		private EntitySet<NegoLC> _NegoLC;
		
		private EntitySet<NegoLC> _NegoLC1;
		
		private EntitySet<CreditApplicationDocumentary> _CreditApplicationDocumentary;
		
		private EntitySet<CreditApplicationDocumentary> _CreditApplicationDocumentary1;
		
		private EntitySet<BeneficiaryData> _BeneficiaryData;
		
		private EntitySet<OrganizationExtension> _OrganizationExtension;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVersionIDChanging(int value);
    partial void OnVersionIDChanged();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnPayableAccountChanging(string value);
    partial void OnPayableAccountChanged();
    partial void OnAddrChanging(string value);
    partial void OnAddrChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnUndertakerChanging(string value);
    partial void OnUndertakerChanged();
    partial void OnPostponeMonthsChanging(System.Nullable<int> value);
    partial void OnPostponeMonthsChanged();
    partial void OnUsancelimitedDaysChanging(System.Nullable<int> value);
    partial void OnUsancelimitedDaysChanged();
    partial void OnPIDChanging(string value);
    partial void OnPIDChanged();
    partial void OnEnglishNameChanging(string value);
    partial void OnEnglishNameChanged();
    partial void OnEnglishAddrChanging(string value);
    partial void OnEnglishAddrChanged();
    partial void OnRegAddrChanging(string value);
    partial void OnRegAddrChanged();
    partial void OnEnglishRegAddrChanging(string value);
    partial void OnEnglishRegAddrChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnUndertakerIDChanging(string value);
    partial void OnUndertakerIDChanged();
    partial void OnUndertakerNameChanging(string value);
    partial void OnUndertakerNameChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnPRODUCTSChanging(string value);
    partial void OnPRODUCTSChanged();
    partial void OnOldBankCodeChanging(string value);
    partial void OnOldBankCodeChanged();
    #endregion
		
		public CustomerOfBranchVersion()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int VersionID
		{
			get
			{
				return this._VersionID;
			}
			set
			{
				if ((this._VersionID != value))
				{
					this.OnVersionIDChanging(value);
					this.SendPropertyChanging();
					this._VersionID = value;
					this.SendPropertyChanged("VersionID");
					this.OnVersionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayableAccount", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string PayableAccount
		{
			get
			{
				return this._PayableAccount;
			}
			set
			{
				if ((this._PayableAccount != value))
				{
					this.OnPayableAccountChanging(value);
					this.SendPropertyChanging();
					this._PayableAccount = value;
					this.SendPropertyChanged("PayableAccount");
					this.OnPayableAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Addr
		{
			get
			{
				return this._Addr;
			}
			set
			{
				if ((this._Addr != value))
				{
					this.OnAddrChanging(value);
					this.SendPropertyChanging();
					this._Addr = value;
					this.SendPropertyChanged("Addr");
					this.OnAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Undertaker", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Undertaker
		{
			get
			{
				return this._Undertaker;
			}
			set
			{
				if ((this._Undertaker != value))
				{
					this.OnUndertakerChanging(value);
					this.SendPropertyChanging();
					this._Undertaker = value;
					this.SendPropertyChanged("Undertaker");
					this.OnUndertakerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostponeMonths", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> PostponeMonths
		{
			get
			{
				return this._PostponeMonths;
			}
			set
			{
				if ((this._PostponeMonths != value))
				{
					this.OnPostponeMonthsChanging(value);
					this.SendPropertyChanging();
					this._PostponeMonths = value;
					this.SendPropertyChanged("PostponeMonths");
					this.OnPostponeMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsancelimitedDays", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> UsancelimitedDays
		{
			get
			{
				return this._UsancelimitedDays;
			}
			set
			{
				if ((this._UsancelimitedDays != value))
				{
					this.OnUsancelimitedDaysChanging(value);
					this.SendPropertyChanging();
					this._UsancelimitedDays = value;
					this.SendPropertyChanged("UsancelimitedDays");
					this.OnUsancelimitedDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishName", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string EnglishName
		{
			get
			{
				return this._EnglishName;
			}
			set
			{
				if ((this._EnglishName != value))
				{
					this.OnEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._EnglishName = value;
					this.SendPropertyChanged("EnglishName");
					this.OnEnglishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishAddr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string EnglishAddr
		{
			get
			{
				return this._EnglishAddr;
			}
			set
			{
				if ((this._EnglishAddr != value))
				{
					this.OnEnglishAddrChanging(value);
					this.SendPropertyChanging();
					this._EnglishAddr = value;
					this.SendPropertyChanged("EnglishAddr");
					this.OnEnglishAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegAddr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string RegAddr
		{
			get
			{
				return this._RegAddr;
			}
			set
			{
				if ((this._RegAddr != value))
				{
					this.OnRegAddrChanging(value);
					this.SendPropertyChanging();
					this._RegAddr = value;
					this.SendPropertyChanged("RegAddr");
					this.OnRegAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishRegAddr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string EnglishRegAddr
		{
			get
			{
				return this._EnglishRegAddr;
			}
			set
			{
				if ((this._EnglishRegAddr != value))
				{
					this.OnEnglishRegAddrChanging(value);
					this.SendPropertyChanging();
					this._EnglishRegAddr = value;
					this.SendPropertyChanged("EnglishRegAddr");
					this.OnEnglishRegAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerID", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string UndertakerID
		{
			get
			{
				return this._UndertakerID;
			}
			set
			{
				if ((this._UndertakerID != value))
				{
					this.OnUndertakerIDChanging(value);
					this.SendPropertyChanging();
					this._UndertakerID = value;
					this.SendPropertyChanged("UndertakerID");
					this.OnUndertakerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerName", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string UndertakerName
		{
			get
			{
				return this._UndertakerName;
			}
			set
			{
				if ((this._UndertakerName != value))
				{
					this.OnUndertakerNameChanging(value);
					this.SendPropertyChanging();
					this._UndertakerName = value;
					this.SendPropertyChanged("UndertakerName");
					this.OnUndertakerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTS", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string PRODUCTS
		{
			get
			{
				return this._PRODUCTS;
			}
			set
			{
				if ((this._PRODUCTS != value))
				{
					this.OnPRODUCTSChanging(value);
					this.SendPropertyChanging();
					this._PRODUCTS = value;
					this.SendPropertyChanged("PRODUCTS");
					this.OnPRODUCTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldBankCode", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string OldBankCode
		{
			get
			{
				return this._OldBankCode;
			}
			set
			{
				if ((this._OldBankCode != value))
				{
					this.OnOldBankCodeChanging(value);
					this.SendPropertyChanging();
					this._OldBankCode = value;
					this.SendPropertyChanged("OldBankCode");
					this.OnOldBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_CustomerOfBranch", Storage="_CustomerOfBranch", ThisKey="VersionID", OtherKey="CurrentVersion")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<CustomerOfBranch> CustomerOfBranch
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerOfBranch.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomerOfBranch;
			}
			set
			{
				this._CustomerOfBranch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_CustomerOfBranchApproval", Storage="_CustomerOfBranchApproval", ThisKey="VersionID", OtherKey="VersionID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public CustomerOfBranchApproval CustomerOfBranchApproval
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerOfBranchApproval.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._CustomerOfBranchApproval.Entity;
			}
			set
			{
				CustomerOfBranchApproval previousValue = this._CustomerOfBranchApproval.Entity;
				if (((previousValue != value) 
							|| (this._CustomerOfBranchApproval.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerOfBranchApproval.Entity = null;
						previousValue.CustomerOfBranchVersion = null;
					}
					this._CustomerOfBranchApproval.Entity = value;
					if ((value != null))
					{
						value.CustomerOfBranchVersion = this;
					}
					this.SendPropertyChanged("CustomerOfBranchApproval");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_F0390", Storage="_F0390", ThisKey="VersionID", OtherKey="VersionID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public F0390 F0390
		{
			get
			{
				if ((this.serializing 
							&& (this._F0390.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._F0390.Entity;
			}
			set
			{
				F0390 previousValue = this._F0390.Entity;
				if (((previousValue != value) 
							|| (this._F0390.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._F0390.Entity = null;
						previousValue.CustomerOfBranchVersion = null;
					}
					this._F0390.Entity = value;
					if ((value != null))
					{
						value.CustomerOfBranchVersion = this;
					}
					this.SendPropertyChanged("F0390");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_FR062", Storage="_FR062", ThisKey="VersionID", OtherKey="VersionID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public FR062 FR062
		{
			get
			{
				if ((this.serializing 
							&& (this._FR062.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._FR062.Entity;
			}
			set
			{
				FR062 previousValue = this._FR062.Entity;
				if (((previousValue != value) 
							|| (this._FR062.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FR062.Entity = null;
						previousValue.CustomerOfBranchVersion = null;
					}
					this._FR062.Entity = value;
					if ((value != null))
					{
						value.CustomerOfBranchVersion = this;
					}
					this.SendPropertyChanged("FR062");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_AMLComment", Storage="_AMLComment", ThisKey="VersionID", OtherKey="VersionID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public AMLComment AMLComment
		{
			get
			{
				if ((this.serializing 
							&& (this._AMLComment.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._AMLComment.Entity;
			}
			set
			{
				AMLComment previousValue = this._AMLComment.Entity;
				if (((previousValue != value) 
							|| (this._AMLComment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AMLComment.Entity = null;
						previousValue.CustomerOfBranchVersion = null;
					}
					this._AMLComment.Entity = value;
					if ((value != null))
					{
						value.CustomerOfBranchVersion = this;
					}
					this.SendPropertyChanged("AMLComment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_NegoLC", Storage="_NegoLC", ThisKey="VersionID", OtherKey="VersionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public EntitySet<NegoLC> NegoLC
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoLC.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoLC;
			}
			set
			{
				this._NegoLC.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_NegoLC1", Storage="_NegoLC1", ThisKey="VersionID", OtherKey="BeneDetailID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30, EmitDefaultValue=false)]
		public EntitySet<NegoLC> NegoLC1
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoLC1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoLC1;
			}
			set
			{
				this._NegoLC1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_CreditApplicationDocumentary", Storage="_CreditApplicationDocumentary", ThisKey="VersionID", OtherKey="VersionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31, EmitDefaultValue=false)]
		public EntitySet<CreditApplicationDocumentary> CreditApplicationDocumentary
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditApplicationDocumentary.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CreditApplicationDocumentary;
			}
			set
			{
				this._CreditApplicationDocumentary.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_CreditApplicationDocumentary1", Storage="_CreditApplicationDocumentary1", ThisKey="VersionID", OtherKey="BeneDetailID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public EntitySet<CreditApplicationDocumentary> CreditApplicationDocumentary1
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditApplicationDocumentary1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CreditApplicationDocumentary1;
			}
			set
			{
				this._CreditApplicationDocumentary1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_BeneficiaryData", Storage="_BeneficiaryData", ThisKey="VersionID", OtherKey="CurrentVersion")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33, EmitDefaultValue=false)]
		public EntitySet<BeneficiaryData> BeneficiaryData
		{
			get
			{
				if ((this.serializing 
							&& (this._BeneficiaryData.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BeneficiaryData;
			}
			set
			{
				this._BeneficiaryData.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerOfBranchVersion_OrganizationExtension", Storage="_OrganizationExtension", ThisKey="VersionID", OtherKey="CurrentVersion")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34, EmitDefaultValue=false)]
		public EntitySet<OrganizationExtension> OrganizationExtension
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationExtension.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OrganizationExtension;
			}
			set
			{
				this._OrganizationExtension.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerOfBranch(CustomerOfBranch entity)
		{
			this.SendPropertyChanging();
			entity.CustomerOfBranchVersion = this;
		}
		
		private void detach_CustomerOfBranch(CustomerOfBranch entity)
		{
			this.SendPropertyChanging();
			entity.CustomerOfBranchVersion = null;
		}
		
		private void attach_NegoLC(NegoLC entity)
		{
			this.SendPropertyChanging();
			entity.ApplicantDetails = this;
		}
		
		private void detach_NegoLC(NegoLC entity)
		{
			this.SendPropertyChanging();
			entity.ApplicantDetails = null;
		}
		
		private void attach_NegoLC1(NegoLC entity)
		{
			this.SendPropertyChanging();
			entity.BeneDetails = this;
		}
		
		private void detach_NegoLC1(NegoLC entity)
		{
			this.SendPropertyChanging();
			entity.BeneDetails = null;
		}
		
		private void attach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.ApplicantDetails = this;
		}
		
		private void detach_CreditApplicationDocumentary(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.ApplicantDetails = null;
		}
		
		private void attach_CreditApplicationDocumentary1(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.BeneDetails = this;
		}
		
		private void detach_CreditApplicationDocumentary1(CreditApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.BeneDetails = null;
		}
		
		private void attach_BeneficiaryData(BeneficiaryData entity)
		{
			this.SendPropertyChanging();
			entity.CustomerOfBranchVersion = this;
		}
		
		private void detach_BeneficiaryData(BeneficiaryData entity)
		{
			this.SendPropertyChanging();
			entity.CustomerOfBranchVersion = null;
		}
		
		private void attach_OrganizationExtension(OrganizationExtension entity)
		{
			this.SendPropertyChanging();
			entity.CustomerOfBranchVersion = this;
		}
		
		private void detach_OrganizationExtension(OrganizationExtension entity)
		{
			this.SendPropertyChanging();
			entity.CustomerOfBranchVersion = null;
		}
		
		private void Initialize()
		{
			this._CustomerOfBranch = new EntitySet<CustomerOfBranch>(new Action<CustomerOfBranch>(this.attach_CustomerOfBranch), new Action<CustomerOfBranch>(this.detach_CustomerOfBranch));
			this._CustomerOfBranchApproval = default(EntityRef<CustomerOfBranchApproval>);
			this._F0390 = default(EntityRef<F0390>);
			this._FR062 = default(EntityRef<FR062>);
			this._AMLComment = default(EntityRef<AMLComment>);
			this._NegoLC = new EntitySet<NegoLC>(new Action<NegoLC>(this.attach_NegoLC), new Action<NegoLC>(this.detach_NegoLC));
			this._NegoLC1 = new EntitySet<NegoLC>(new Action<NegoLC>(this.attach_NegoLC1), new Action<NegoLC>(this.detach_NegoLC1));
			this._CreditApplicationDocumentary = new EntitySet<CreditApplicationDocumentary>(new Action<CreditApplicationDocumentary>(this.attach_CreditApplicationDocumentary), new Action<CreditApplicationDocumentary>(this.detach_CreditApplicationDocumentary));
			this._CreditApplicationDocumentary1 = new EntitySet<CreditApplicationDocumentary>(new Action<CreditApplicationDocumentary>(this.attach_CreditApplicationDocumentary1), new Action<CreditApplicationDocumentary>(this.detach_CreditApplicationDocumentary1));
			this._BeneficiaryData = new EntitySet<BeneficiaryData>(new Action<BeneficiaryData>(this.attach_BeneficiaryData), new Action<BeneficiaryData>(this.detach_BeneficiaryData));
			this._OrganizationExtension = new EntitySet<OrganizationExtension>(new Action<OrganizationExtension>(this.attach_OrganizationExtension), new Action<OrganizationExtension>(this.detach_OrganizationExtension));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LetterOfCredit")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LetterOfCredit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LcID;
		
		private System.Nullable<int> _AppID;
		
		private string _LcNo;
		
		private System.Nullable<decimal> _可用餘額;
		
		private System.DateTime _LcDate;
		
		private bool _AppCountersign;
		
		private System.Nullable<int> _PrintNotice;
		
		private System.Nullable<bool> _受益人匯票簽核認可;
		
		private string _NotifyingBank;
		
		private EntitySet<CreditCancellation> _CreditCancellation;
		
		private EntitySet<LetterOfCreditVersion> _LetterOfCreditVersion;
		
		private EntityRef<BankData> _BankData;
		
		private EntityRef<CreditApplicationDocumentary> _CreditApplicationDocumentary;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLcIDChanging(int value);
    partial void OnLcIDChanged();
    partial void OnAppIDChanging(System.Nullable<int> value);
    partial void OnAppIDChanged();
    partial void OnLcNoChanging(string value);
    partial void OnLcNoChanged();
    partial void On可用餘額Changing(System.Nullable<decimal> value);
    partial void On可用餘額Changed();
    partial void OnLcDateChanging(System.DateTime value);
    partial void OnLcDateChanged();
    partial void OnAppCountersignChanging(bool value);
    partial void OnAppCountersignChanged();
    partial void OnPrintNoticeChanging(System.Nullable<int> value);
    partial void OnPrintNoticeChanged();
    partial void On受益人匯票簽核認可Changing(System.Nullable<bool> value);
    partial void On受益人匯票簽核認可Changed();
    partial void OnNotifyingBankChanging(string value);
    partial void OnNotifyingBankChanged();
    #endregion
		
		public LetterOfCredit()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LcID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LcID
		{
			get
			{
				return this._LcID;
			}
			set
			{
				if ((this._LcID != value))
				{
					this.OnLcIDChanging(value);
					this.SendPropertyChanging();
					this._LcID = value;
					this.SendPropertyChanged("LcID");
					this.OnLcIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> AppID
		{
			get
			{
				return this._AppID;
			}
			set
			{
				if ((this._AppID != value))
				{
					if (this._CreditApplicationDocumentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppIDChanging(value);
					this.SendPropertyChanging();
					this._AppID = value;
					this.SendPropertyChanged("AppID");
					this.OnAppIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LcNo", DbType="NVarChar(24) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string LcNo
		{
			get
			{
				return this._LcNo;
			}
			set
			{
				if ((this._LcNo != value))
				{
					this.OnLcNoChanging(value);
					this.SendPropertyChanging();
					this._LcNo = value;
					this.SendPropertyChanged("LcNo");
					this.OnLcNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_可用餘額", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<decimal> 可用餘額
		{
			get
			{
				return this._可用餘額;
			}
			set
			{
				if ((this._可用餘額 != value))
				{
					this.On可用餘額Changing(value);
					this.SendPropertyChanging();
					this._可用餘額 = value;
					this.SendPropertyChanged("可用餘額");
					this.On可用餘額Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LcDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime LcDate
		{
			get
			{
				return this._LcDate;
			}
			set
			{
				if ((this._LcDate != value))
				{
					this.OnLcDateChanging(value);
					this.SendPropertyChanging();
					this._LcDate = value;
					this.SendPropertyChanged("LcDate");
					this.OnLcDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppCountersign", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool AppCountersign
		{
			get
			{
				return this._AppCountersign;
			}
			set
			{
				if ((this._AppCountersign != value))
				{
					this.OnAppCountersignChanging(value);
					this.SendPropertyChanging();
					this._AppCountersign = value;
					this.SendPropertyChanged("AppCountersign");
					this.OnAppCountersignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintNotice", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> PrintNotice
		{
			get
			{
				return this._PrintNotice;
			}
			set
			{
				if ((this._PrintNotice != value))
				{
					this.OnPrintNoticeChanging(value);
					this.SendPropertyChanging();
					this._PrintNotice = value;
					this.SendPropertyChanged("PrintNotice");
					this.OnPrintNoticeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_受益人匯票簽核認可", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> 受益人匯票簽核認可
		{
			get
			{
				return this._受益人匯票簽核認可;
			}
			set
			{
				if ((this._受益人匯票簽核認可 != value))
				{
					this.On受益人匯票簽核認可Changing(value);
					this.SendPropertyChanging();
					this._受益人匯票簽核認可 = value;
					this.SendPropertyChanged("受益人匯票簽核認可");
					this.On受益人匯票簽核認可Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyingBank", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string NotifyingBank
		{
			get
			{
				return this._NotifyingBank;
			}
			set
			{
				if ((this._NotifyingBank != value))
				{
					if (this._BankData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNotifyingBankChanging(value);
					this.SendPropertyChanging();
					this._NotifyingBank = value;
					this.SendPropertyChanged("NotifyingBank");
					this.OnNotifyingBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LetterOfCredit_CreditCancellation", Storage="_CreditCancellation", ThisKey="LcID", OtherKey="LcID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<CreditCancellation> CreditCancellation
		{
			get
			{
				if ((this.serializing 
							&& (this._CreditCancellation.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CreditCancellation;
			}
			set
			{
				this._CreditCancellation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LetterOfCredit_LetterOfCreditVersion", Storage="_LetterOfCreditVersion", ThisKey="LcID", OtherKey="LcID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<LetterOfCreditVersion> LetterOfCreditVersion
		{
			get
			{
				if ((this.serializing 
							&& (this._LetterOfCreditVersion.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LetterOfCreditVersion;
			}
			set
			{
				this._LetterOfCreditVersion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_LetterOfCredit", Storage="_BankData", ThisKey="NotifyingBank", OtherKey="BankCode", IsForeignKey=true)]
		public BankData BankData
		{
			get
			{
				return this._BankData.Entity;
			}
			set
			{
				BankData previousValue = this._BankData.Entity;
				if (((previousValue != value) 
							|| (this._BankData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankData.Entity = null;
						previousValue.LetterOfCredit.Remove(this);
					}
					this._BankData.Entity = value;
					if ((value != null))
					{
						value.LetterOfCredit.Add(this);
						this._NotifyingBank = value.BankCode;
					}
					else
					{
						this._NotifyingBank = default(string);
					}
					this.SendPropertyChanged("BankData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditApplicationDocumentary_LetterOfCredit", Storage="_CreditApplicationDocumentary", ThisKey="AppID", OtherKey="AppID", IsForeignKey=true)]
		public CreditApplicationDocumentary CreditApplicationDocumentary
		{
			get
			{
				return this._CreditApplicationDocumentary.Entity;
			}
			set
			{
				CreditApplicationDocumentary previousValue = this._CreditApplicationDocumentary.Entity;
				if (((previousValue != value) 
							|| (this._CreditApplicationDocumentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CreditApplicationDocumentary.Entity = null;
						previousValue.LetterOfCredit.Remove(this);
					}
					this._CreditApplicationDocumentary.Entity = value;
					if ((value != null))
					{
						value.LetterOfCredit.Add(this);
						this._AppID = value.AppID;
					}
					else
					{
						this._AppID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CreditApplicationDocumentary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CreditCancellation(CreditCancellation entity)
		{
			this.SendPropertyChanging();
			entity.LetterOfCredit = this;
		}
		
		private void detach_CreditCancellation(CreditCancellation entity)
		{
			this.SendPropertyChanging();
			entity.LetterOfCredit = null;
		}
		
		private void attach_LetterOfCreditVersion(LetterOfCreditVersion entity)
		{
			this.SendPropertyChanging();
			entity.LetterOfCredit = this;
		}
		
		private void detach_LetterOfCreditVersion(LetterOfCreditVersion entity)
		{
			this.SendPropertyChanging();
			entity.LetterOfCredit = null;
		}
		
		private void Initialize()
		{
			this._CreditCancellation = new EntitySet<CreditCancellation>(new Action<CreditCancellation>(this.attach_CreditCancellation), new Action<CreditCancellation>(this.detach_CreditCancellation));
			this._LetterOfCreditVersion = new EntitySet<LetterOfCreditVersion>(new Action<LetterOfCreditVersion>(this.attach_LetterOfCreditVersion), new Action<LetterOfCreditVersion>(this.detach_LetterOfCreditVersion));
			this._BankData = default(EntityRef<BankData>);
			this._CreditApplicationDocumentary = default(EntityRef<CreditApplicationDocumentary>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LetterOfCreditVersion")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LetterOfCreditVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LcID;
		
		private int _VersionNo;
		
		private System.Nullable<int> _ItemID;
		
		private System.Nullable<int> _NoteID;
		
		private System.Nullable<int> _AttachmentID;
		
		private int _VersionID;
		
		private System.Nullable<int> _AmendingID;
		
		private string _NotifyingBank;
		
		private EntitySet<NegoDraft> _NegoDraft;
		
		private EntitySet<AmendingLcApplication> _AmendingLcApplication;
		
		private EntityRef<AmendingLcInformation> _AmendingLcInformation;
		
		private EntityRef<AttachableDocument> _AttachableDocument;
		
		private EntityRef<LcItem> _LcItem;
		
		private EntityRef<LetterOfCredit> _LetterOfCredit;
		
		private EntityRef<SpecificNote> _SpecificNote;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLcIDChanging(int value);
    partial void OnLcIDChanged();
    partial void OnVersionNoChanging(int value);
    partial void OnVersionNoChanged();
    partial void OnItemIDChanging(System.Nullable<int> value);
    partial void OnItemIDChanged();
    partial void OnNoteIDChanging(System.Nullable<int> value);
    partial void OnNoteIDChanged();
    partial void OnAttachmentIDChanging(System.Nullable<int> value);
    partial void OnAttachmentIDChanged();
    partial void OnVersionIDChanging(int value);
    partial void OnVersionIDChanged();
    partial void OnAmendingIDChanging(System.Nullable<int> value);
    partial void OnAmendingIDChanged();
    partial void OnNotifyingBankChanging(string value);
    partial void OnNotifyingBankChanged();
    #endregion
		
		public LetterOfCreditVersion()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LcID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LcID
		{
			get
			{
				return this._LcID;
			}
			set
			{
				if ((this._LcID != value))
				{
					if (this._LetterOfCredit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLcIDChanging(value);
					this.SendPropertyChanging();
					this._LcID = value;
					this.SendPropertyChanged("LcID");
					this.OnLcIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int VersionNo
		{
			get
			{
				return this._VersionNo;
			}
			set
			{
				if ((this._VersionNo != value))
				{
					this.OnVersionNoChanging(value);
					this.SendPropertyChanging();
					this._VersionNo = value;
					this.SendPropertyChanged("VersionNo");
					this.OnVersionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._LcItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> NoteID
		{
			get
			{
				return this._NoteID;
			}
			set
			{
				if ((this._NoteID != value))
				{
					if (this._SpecificNote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoteIDChanging(value);
					this.SendPropertyChanging();
					this._NoteID = value;
					this.SendPropertyChanged("NoteID");
					this.OnNoteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> AttachmentID
		{
			get
			{
				return this._AttachmentID;
			}
			set
			{
				if ((this._AttachmentID != value))
				{
					if (this._AttachableDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._AttachmentID = value;
					this.SendPropertyChanged("AttachmentID");
					this.OnAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int VersionID
		{
			get
			{
				return this._VersionID;
			}
			set
			{
				if ((this._VersionID != value))
				{
					this.OnVersionIDChanging(value);
					this.SendPropertyChanging();
					this._VersionID = value;
					this.SendPropertyChanged("VersionID");
					this.OnVersionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendingID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> AmendingID
		{
			get
			{
				return this._AmendingID;
			}
			set
			{
				if ((this._AmendingID != value))
				{
					if (this._AmendingLcInformation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendingIDChanging(value);
					this.SendPropertyChanging();
					this._AmendingID = value;
					this.SendPropertyChanged("AmendingID");
					this.OnAmendingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyingBank", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string NotifyingBank
		{
			get
			{
				return this._NotifyingBank;
			}
			set
			{
				if ((this._NotifyingBank != value))
				{
					this.OnNotifyingBankChanging(value);
					this.SendPropertyChanging();
					this._NotifyingBank = value;
					this.SendPropertyChanged("NotifyingBank");
					this.OnNotifyingBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LetterOfCreditVersion_NegoDraft", Storage="_NegoDraft", ThisKey="VersionID", OtherKey="LcID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<NegoDraft> NegoDraft
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoDraft.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoDraft;
			}
			set
			{
				this._NegoDraft.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LetterOfCreditVersion_AmendingLcApplication", Storage="_AmendingLcApplication", ThisKey="VersionID", OtherKey="SourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<AmendingLcApplication> AmendingLcApplication
		{
			get
			{
				if ((this.serializing 
							&& (this._AmendingLcApplication.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AmendingLcApplication;
			}
			set
			{
				this._AmendingLcApplication.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AmendingLcInformation_LetterOfCreditVersion", Storage="_AmendingLcInformation", ThisKey="AmendingID", OtherKey="AmendingID", IsForeignKey=true)]
		public AmendingLcInformation AmendingLcInformation
		{
			get
			{
				return this._AmendingLcInformation.Entity;
			}
			set
			{
				AmendingLcInformation previousValue = this._AmendingLcInformation.Entity;
				if (((previousValue != value) 
							|| (this._AmendingLcInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AmendingLcInformation.Entity = null;
						previousValue.LetterOfCreditVersion.Remove(this);
					}
					this._AmendingLcInformation.Entity = value;
					if ((value != null))
					{
						value.LetterOfCreditVersion.Add(this);
						this._AmendingID = value.AmendingID;
					}
					else
					{
						this._AmendingID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AmendingLcInformation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttachableDocument_LetterOfCreditVersion", Storage="_AttachableDocument", ThisKey="AttachmentID", OtherKey="AttachmentID", IsForeignKey=true)]
		public AttachableDocument AttachableDocument
		{
			get
			{
				return this._AttachableDocument.Entity;
			}
			set
			{
				AttachableDocument previousValue = this._AttachableDocument.Entity;
				if (((previousValue != value) 
							|| (this._AttachableDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AttachableDocument.Entity = null;
						previousValue.LetterOfCreditVersion.Remove(this);
					}
					this._AttachableDocument.Entity = value;
					if ((value != null))
					{
						value.LetterOfCreditVersion.Add(this);
						this._AttachmentID = value.AttachmentID;
					}
					else
					{
						this._AttachmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AttachableDocument");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LcItem_LetterOfCreditVersion", Storage="_LcItem", ThisKey="ItemID", OtherKey="ItemID", IsForeignKey=true)]
		public LcItem LcItem
		{
			get
			{
				return this._LcItem.Entity;
			}
			set
			{
				LcItem previousValue = this._LcItem.Entity;
				if (((previousValue != value) 
							|| (this._LcItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LcItem.Entity = null;
						previousValue.LetterOfCreditVersion.Remove(this);
					}
					this._LcItem.Entity = value;
					if ((value != null))
					{
						value.LetterOfCreditVersion.Add(this);
						this._ItemID = value.ItemID;
					}
					else
					{
						this._ItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LcItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LetterOfCredit_LetterOfCreditVersion", Storage="_LetterOfCredit", ThisKey="LcID", OtherKey="LcID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LetterOfCredit LetterOfCredit
		{
			get
			{
				return this._LetterOfCredit.Entity;
			}
			set
			{
				LetterOfCredit previousValue = this._LetterOfCredit.Entity;
				if (((previousValue != value) 
							|| (this._LetterOfCredit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LetterOfCredit.Entity = null;
						previousValue.LetterOfCreditVersion.Remove(this);
					}
					this._LetterOfCredit.Entity = value;
					if ((value != null))
					{
						value.LetterOfCreditVersion.Add(this);
						this._LcID = value.LcID;
					}
					else
					{
						this._LcID = default(int);
					}
					this.SendPropertyChanged("LetterOfCredit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecificNote_LetterOfCreditVersion", Storage="_SpecificNote", ThisKey="NoteID", OtherKey="NoteID", IsForeignKey=true)]
		public SpecificNote SpecificNote
		{
			get
			{
				return this._SpecificNote.Entity;
			}
			set
			{
				SpecificNote previousValue = this._SpecificNote.Entity;
				if (((previousValue != value) 
							|| (this._SpecificNote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecificNote.Entity = null;
						previousValue.LetterOfCreditVersion.Remove(this);
					}
					this._SpecificNote.Entity = value;
					if ((value != null))
					{
						value.LetterOfCreditVersion.Add(this);
						this._NoteID = value.NoteID;
					}
					else
					{
						this._NoteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SpecificNote");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NegoDraft(NegoDraft entity)
		{
			this.SendPropertyChanging();
			entity.LetterOfCreditVersion = this;
		}
		
		private void detach_NegoDraft(NegoDraft entity)
		{
			this.SendPropertyChanging();
			entity.LetterOfCreditVersion = null;
		}
		
		private void attach_AmendingLcApplication(AmendingLcApplication entity)
		{
			this.SendPropertyChanging();
			entity.LetterOfCreditVersion = this;
		}
		
		private void detach_AmendingLcApplication(AmendingLcApplication entity)
		{
			this.SendPropertyChanging();
			entity.LetterOfCreditVersion = null;
		}
		
		private void Initialize()
		{
			this._NegoDraft = new EntitySet<NegoDraft>(new Action<NegoDraft>(this.attach_NegoDraft), new Action<NegoDraft>(this.detach_NegoDraft));
			this._AmendingLcApplication = new EntitySet<AmendingLcApplication>(new Action<AmendingLcApplication>(this.attach_AmendingLcApplication), new Action<AmendingLcApplication>(this.detach_AmendingLcApplication));
			this._AmendingLcInformation = default(EntityRef<AmendingLcInformation>);
			this._AttachableDocument = default(EntityRef<AttachableDocument>);
			this._LcItem = default(EntityRef<LcItem>);
			this._LetterOfCredit = default(EntityRef<LetterOfCredit>);
			this._SpecificNote = default(EntityRef<SpecificNote>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NegoDraft")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NegoDraft : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DraftID;
		
		private System.Nullable<int> _LcID;
		
		private System.Nullable<int> _AmendingID;
		
		private System.Nullable<int> _AppYear;
		
		private System.Nullable<int> _AppSeq;
		
		private string _DraftNo;
		
		private System.DateTime _ImportDate;
		
		private System.Nullable<System.DateTime> _ShipmentDate;
		
		private decimal _Amount;
		
		private string _ItemName;
		
		private System.Nullable<decimal> _ItemQuantity;
		
		private System.Nullable<decimal> _ItemSubtotal;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _FrontSeal;
		
		private string _BackSeal;
		
		private System.Nullable<short> _DownloadFlag;
		
		private string _DraftContent;
		
		private System.Nullable<int> _PromptID;
		
		private System.Nullable<int> _LC_ID;
		
		private System.Nullable<int> _PaymentID;
		
		private System.Nullable<int> _RegisterID;
		
		private System.Nullable<int> _AppNoBase;
		
		private string _貸放支號;
		
		private string _ResourceName;
		
		private System.Nullable<int> _InvoiceCount;
		
		private EntitySet<NegoInvoice> _NegoInvoice;
		
		private EntitySet<NegoAffair> _NegoAffair;
		
		private EntityRef<FpgNegoDraft> _FpgNegoDraft;
		
		private EntityRef<NegoDraftExtension> _NegoDraftExtension;
		
		private EntitySet<Reimbursement> _Reimbursement;
		
		private EntitySet<NegoDraftAcceptance> _NegoDraftAcceptance;
		
		private EntityRef<AmendingLcInformation> _AmendingLcInformation;
		
		private EntityRef<Documentary> _Documentary;
		
		private EntityRef<LetterOfCreditVersion> _LetterOfCreditVersion;
		
		private EntityRef<NegoDraftRegistry> _NegoDraftRegistry;
		
		private EntityRef<NegoLC> _NegoLC;
		
		private EntityRef<NegoPrompt> _NegoPrompt;
		
		private EntityRef<PaymentNotification> _PaymentNotification;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDraftIDChanging(int value);
    partial void OnDraftIDChanged();
    partial void OnLcIDChanging(System.Nullable<int> value);
    partial void OnLcIDChanged();
    partial void OnAmendingIDChanging(System.Nullable<int> value);
    partial void OnAmendingIDChanged();
    partial void OnAppYearChanging(System.Nullable<int> value);
    partial void OnAppYearChanged();
    partial void OnAppSeqChanging(System.Nullable<int> value);
    partial void OnAppSeqChanged();
    partial void OnDraftNoChanging(string value);
    partial void OnDraftNoChanged();
    partial void OnImportDateChanging(System.DateTime value);
    partial void OnImportDateChanged();
    partial void OnShipmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnShipmentDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemQuantityChanging(System.Nullable<decimal> value);
    partial void OnItemQuantityChanged();
    partial void OnItemSubtotalChanging(System.Nullable<decimal> value);
    partial void OnItemSubtotalChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnFrontSealChanging(string value);
    partial void OnFrontSealChanged();
    partial void OnBackSealChanging(string value);
    partial void OnBackSealChanged();
    partial void OnDownloadFlagChanging(System.Nullable<short> value);
    partial void OnDownloadFlagChanged();
    partial void OnDraftContentChanging(string value);
    partial void OnDraftContentChanged();
    partial void OnPromptIDChanging(System.Nullable<int> value);
    partial void OnPromptIDChanged();
    partial void OnLC_IDChanging(System.Nullable<int> value);
    partial void OnLC_IDChanged();
    partial void OnPaymentIDChanging(System.Nullable<int> value);
    partial void OnPaymentIDChanged();
    partial void OnRegisterIDChanging(System.Nullable<int> value);
    partial void OnRegisterIDChanged();
    partial void OnAppNoBaseChanging(System.Nullable<int> value);
    partial void OnAppNoBaseChanged();
    partial void On貸放支號Changing(string value);
    partial void On貸放支號Changed();
    partial void OnResourceNameChanging(string value);
    partial void OnResourceNameChanged();
    partial void OnInvoiceCountChanging(System.Nullable<int> value);
    partial void OnInvoiceCountChanged();
    #endregion
		
		public NegoDraft()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DraftID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DraftID
		{
			get
			{
				return this._DraftID;
			}
			set
			{
				if ((this._DraftID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDraftIDChanging(value);
					this.SendPropertyChanging();
					this._DraftID = value;
					this.SendPropertyChanged("DraftID");
					this.OnDraftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LcID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> LcID
		{
			get
			{
				return this._LcID;
			}
			set
			{
				if ((this._LcID != value))
				{
					if (this._LetterOfCreditVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLcIDChanging(value);
					this.SendPropertyChanging();
					this._LcID = value;
					this.SendPropertyChanged("LcID");
					this.OnLcIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendingID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> AmendingID
		{
			get
			{
				return this._AmendingID;
			}
			set
			{
				if ((this._AmendingID != value))
				{
					if (this._AmendingLcInformation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendingIDChanging(value);
					this.SendPropertyChanging();
					this._AmendingID = value;
					this.SendPropertyChanged("AmendingID");
					this.OnAmendingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppYear", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> AppYear
		{
			get
			{
				return this._AppYear;
			}
			set
			{
				if ((this._AppYear != value))
				{
					this.OnAppYearChanging(value);
					this.SendPropertyChanging();
					this._AppYear = value;
					this.SendPropertyChanged("AppYear");
					this.OnAppYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppSeq", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> AppSeq
		{
			get
			{
				return this._AppSeq;
			}
			set
			{
				if ((this._AppSeq != value))
				{
					this.OnAppSeqChanging(value);
					this.SendPropertyChanging();
					this._AppSeq = value;
					this.SendPropertyChanged("AppSeq");
					this.OnAppSeqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DraftNo", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string DraftNo
		{
			get
			{
				return this._DraftNo;
			}
			set
			{
				if ((this._DraftNo != value))
				{
					this.OnDraftNoChanging(value);
					this.SendPropertyChanging();
					this._DraftNo = value;
					this.SendPropertyChanged("DraftNo");
					this.OnDraftNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime ImportDate
		{
			get
			{
				return this._ImportDate;
			}
			set
			{
				if ((this._ImportDate != value))
				{
					this.OnImportDateChanging(value);
					this.SendPropertyChanging();
					this._ImportDate = value;
					this.SendPropertyChanged("ImportDate");
					this.OnImportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipmentDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> ShipmentDate
		{
			get
			{
				return this._ShipmentDate;
			}
			set
			{
				if ((this._ShipmentDate != value))
				{
					this.OnShipmentDateChanging(value);
					this.SendPropertyChanging();
					this._ShipmentDate = value;
					this.SendPropertyChanged("ShipmentDate");
					this.OnShipmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(12,0) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemQuantity", DbType="Decimal(8,1)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<decimal> ItemQuantity
		{
			get
			{
				return this._ItemQuantity;
			}
			set
			{
				if ((this._ItemQuantity != value))
				{
					this.OnItemQuantityChanging(value);
					this.SendPropertyChanging();
					this._ItemQuantity = value;
					this.SendPropertyChanged("ItemQuantity");
					this.OnItemQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSubtotal", DbType="Decimal(12,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<decimal> ItemSubtotal
		{
			get
			{
				return this._ItemSubtotal;
			}
			set
			{
				if ((this._ItemSubtotal != value))
				{
					this.OnItemSubtotalChanging(value);
					this.SendPropertyChanging();
					this._ItemSubtotal = value;
					this.SendPropertyChanged("ItemSubtotal");
					this.OnItemSubtotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrontSeal", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string FrontSeal
		{
			get
			{
				return this._FrontSeal;
			}
			set
			{
				if ((this._FrontSeal != value))
				{
					this.OnFrontSealChanging(value);
					this.SendPropertyChanging();
					this._FrontSeal = value;
					this.SendPropertyChanged("FrontSeal");
					this.OnFrontSealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackSeal", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string BackSeal
		{
			get
			{
				return this._BackSeal;
			}
			set
			{
				if ((this._BackSeal != value))
				{
					this.OnBackSealChanging(value);
					this.SendPropertyChanging();
					this._BackSeal = value;
					this.SendPropertyChanged("BackSeal");
					this.OnBackSealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadFlag", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<short> DownloadFlag
		{
			get
			{
				return this._DownloadFlag;
			}
			set
			{
				if ((this._DownloadFlag != value))
				{
					this.OnDownloadFlagChanging(value);
					this.SendPropertyChanging();
					this._DownloadFlag = value;
					this.SendPropertyChanged("DownloadFlag");
					this.OnDownloadFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DraftContent", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string DraftContent
		{
			get
			{
				return this._DraftContent;
			}
			set
			{
				if ((this._DraftContent != value))
				{
					this.OnDraftContentChanging(value);
					this.SendPropertyChanging();
					this._DraftContent = value;
					this.SendPropertyChanged("DraftContent");
					this.OnDraftContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromptID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> PromptID
		{
			get
			{
				return this._PromptID;
			}
			set
			{
				if ((this._PromptID != value))
				{
					if (this._NegoPrompt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromptIDChanging(value);
					this.SendPropertyChanging();
					this._PromptID = value;
					this.SendPropertyChanged("PromptID");
					this.OnPromptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LC_ID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> LC_ID
		{
			get
			{
				return this._LC_ID;
			}
			set
			{
				if ((this._LC_ID != value))
				{
					if (this._NegoLC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLC_IDChanging(value);
					this.SendPropertyChanging();
					this._LC_ID = value;
					this.SendPropertyChanged("LC_ID");
					this.OnLC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					if (this._PaymentNotification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<int> RegisterID
		{
			get
			{
				return this._RegisterID;
			}
			set
			{
				if ((this._RegisterID != value))
				{
					if (this._NegoDraftRegistry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegisterIDChanging(value);
					this.SendPropertyChanging();
					this._RegisterID = value;
					this.SendPropertyChanged("RegisterID");
					this.OnRegisterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppNoBase", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<int> AppNoBase
		{
			get
			{
				return this._AppNoBase;
			}
			set
			{
				if ((this._AppNoBase != value))
				{
					this.OnAppNoBaseChanging(value);
					this.SendPropertyChanging();
					this._AppNoBase = value;
					this.SendPropertyChanged("AppNoBase");
					this.OnAppNoBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_貸放支號", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string 貸放支號
		{
			get
			{
				return this._貸放支號;
			}
			set
			{
				if ((this._貸放支號 != value))
				{
					this.On貸放支號Changing(value);
					this.SendPropertyChanging();
					this._貸放支號 = value;
					this.SendPropertyChanged("貸放支號");
					this.On貸放支號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceName", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string ResourceName
		{
			get
			{
				return this._ResourceName;
			}
			set
			{
				if ((this._ResourceName != value))
				{
					this.OnResourceNameChanging(value);
					this.SendPropertyChanging();
					this._ResourceName = value;
					this.SendPropertyChanged("ResourceName");
					this.OnResourceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<int> InvoiceCount
		{
			get
			{
				return this._InvoiceCount;
			}
			set
			{
				if ((this._InvoiceCount != value))
				{
					this.OnInvoiceCountChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCount = value;
					this.SendPropertyChanged("InvoiceCount");
					this.OnInvoiceCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoDraft_NegoInvoice", Storage="_NegoInvoice", ThisKey="DraftID", OtherKey="DraftID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<NegoInvoice> NegoInvoice
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoInvoice.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoInvoice;
			}
			set
			{
				this._NegoInvoice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoDraft_NegoAffair", Storage="_NegoAffair", ThisKey="DraftID", OtherKey="DraftID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public EntitySet<NegoAffair> NegoAffair
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoAffair.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoAffair;
			}
			set
			{
				this._NegoAffair.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoDraft_FpgNegoDraft", Storage="_FpgNegoDraft", ThisKey="DraftID", OtherKey="DraftID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public FpgNegoDraft FpgNegoDraft
		{
			get
			{
				if ((this.serializing 
							&& (this._FpgNegoDraft.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._FpgNegoDraft.Entity;
			}
			set
			{
				FpgNegoDraft previousValue = this._FpgNegoDraft.Entity;
				if (((previousValue != value) 
							|| (this._FpgNegoDraft.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FpgNegoDraft.Entity = null;
						previousValue.NegoDraft = null;
					}
					this._FpgNegoDraft.Entity = value;
					if ((value != null))
					{
						value.NegoDraft = this;
					}
					this.SendPropertyChanged("FpgNegoDraft");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoDraft_NegoDraftExtension", Storage="_NegoDraftExtension", ThisKey="DraftID", OtherKey="DraftID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public NegoDraftExtension NegoDraftExtension
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoDraftExtension.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._NegoDraftExtension.Entity;
			}
			set
			{
				NegoDraftExtension previousValue = this._NegoDraftExtension.Entity;
				if (((previousValue != value) 
							|| (this._NegoDraftExtension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoDraftExtension.Entity = null;
						previousValue.NegoDraft = null;
					}
					this._NegoDraftExtension.Entity = value;
					if ((value != null))
					{
						value.NegoDraft = this;
					}
					this.SendPropertyChanged("NegoDraftExtension");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoDraft_Reimbursement", Storage="_Reimbursement", ThisKey="DraftID", OtherKey="DraftID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30, EmitDefaultValue=false)]
		public EntitySet<Reimbursement> Reimbursement
		{
			get
			{
				if ((this.serializing 
							&& (this._Reimbursement.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Reimbursement;
			}
			set
			{
				this._Reimbursement.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoDraft_NegoDraftAcceptance", Storage="_NegoDraftAcceptance", ThisKey="DraftID", OtherKey="DraftID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31, EmitDefaultValue=false)]
		public EntitySet<NegoDraftAcceptance> NegoDraftAcceptance
		{
			get
			{
				if ((this.serializing 
							&& (this._NegoDraftAcceptance.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NegoDraftAcceptance;
			}
			set
			{
				this._NegoDraftAcceptance.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AmendingLcInformation_NegoDraft", Storage="_AmendingLcInformation", ThisKey="AmendingID", OtherKey="AmendingID", IsForeignKey=true)]
		public AmendingLcInformation AmendingLcInformation
		{
			get
			{
				return this._AmendingLcInformation.Entity;
			}
			set
			{
				AmendingLcInformation previousValue = this._AmendingLcInformation.Entity;
				if (((previousValue != value) 
							|| (this._AmendingLcInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AmendingLcInformation.Entity = null;
						previousValue.NegoDraft.Remove(this);
					}
					this._AmendingLcInformation.Entity = value;
					if ((value != null))
					{
						value.NegoDraft.Add(this);
						this._AmendingID = value.AmendingID;
					}
					else
					{
						this._AmendingID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AmendingLcInformation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_NegoDraft", Storage="_Documentary", ThisKey="DraftID", OtherKey="DocID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.NegoDraft = null;
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.NegoDraft = this;
						this._DraftID = value.DocID;
					}
					else
					{
						this._DraftID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LetterOfCreditVersion_NegoDraft", Storage="_LetterOfCreditVersion", ThisKey="LcID", OtherKey="VersionID", IsForeignKey=true)]
		public LetterOfCreditVersion LetterOfCreditVersion
		{
			get
			{
				return this._LetterOfCreditVersion.Entity;
			}
			set
			{
				LetterOfCreditVersion previousValue = this._LetterOfCreditVersion.Entity;
				if (((previousValue != value) 
							|| (this._LetterOfCreditVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LetterOfCreditVersion.Entity = null;
						previousValue.NegoDraft.Remove(this);
					}
					this._LetterOfCreditVersion.Entity = value;
					if ((value != null))
					{
						value.NegoDraft.Add(this);
						this._LcID = value.VersionID;
					}
					else
					{
						this._LcID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LetterOfCreditVersion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoDraftRegistry_NegoDraft", Storage="_NegoDraftRegistry", ThisKey="RegisterID", OtherKey="RegisterID", IsForeignKey=true)]
		public NegoDraftRegistry NegoDraftRegistry
		{
			get
			{
				return this._NegoDraftRegistry.Entity;
			}
			set
			{
				NegoDraftRegistry previousValue = this._NegoDraftRegistry.Entity;
				if (((previousValue != value) 
							|| (this._NegoDraftRegistry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoDraftRegistry.Entity = null;
						previousValue.NegoDraft.Remove(this);
					}
					this._NegoDraftRegistry.Entity = value;
					if ((value != null))
					{
						value.NegoDraft.Add(this);
						this._RegisterID = value.RegisterID;
					}
					else
					{
						this._RegisterID = default(Nullable<int>);
					}
					this.SendPropertyChanged("NegoDraftRegistry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoLC_NegoDraft", Storage="_NegoLC", ThisKey="LC_ID", OtherKey="LC_ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public NegoLC NegoLC
		{
			get
			{
				return this._NegoLC.Entity;
			}
			set
			{
				NegoLC previousValue = this._NegoLC.Entity;
				if (((previousValue != value) 
							|| (this._NegoLC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoLC.Entity = null;
						previousValue.NegoDraft.Remove(this);
					}
					this._NegoLC.Entity = value;
					if ((value != null))
					{
						value.NegoDraft.Add(this);
						this._LC_ID = value.LC_ID;
					}
					else
					{
						this._LC_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("NegoLC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NegoPrompt_NegoDraft", Storage="_NegoPrompt", ThisKey="PromptID", OtherKey="PromptID", IsForeignKey=true)]
		public NegoPrompt NegoPrompt
		{
			get
			{
				return this._NegoPrompt.Entity;
			}
			set
			{
				NegoPrompt previousValue = this._NegoPrompt.Entity;
				if (((previousValue != value) 
							|| (this._NegoPrompt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NegoPrompt.Entity = null;
						previousValue.NegoDraft.Remove(this);
					}
					this._NegoPrompt.Entity = value;
					if ((value != null))
					{
						value.NegoDraft.Add(this);
						this._PromptID = value.PromptID;
					}
					else
					{
						this._PromptID = default(Nullable<int>);
					}
					this.SendPropertyChanged("NegoPrompt");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentNotification_NegoDraft", Storage="_PaymentNotification", ThisKey="PaymentID", OtherKey="PaymentID", IsForeignKey=true, DeleteRule="SET NULL")]
		public PaymentNotification PaymentNotification
		{
			get
			{
				return this._PaymentNotification.Entity;
			}
			set
			{
				PaymentNotification previousValue = this._PaymentNotification.Entity;
				if (((previousValue != value) 
							|| (this._PaymentNotification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentNotification.Entity = null;
						previousValue.NegoDraft.Remove(this);
					}
					this._PaymentNotification.Entity = value;
					if ((value != null))
					{
						value.NegoDraft.Add(this);
						this._PaymentID = value.PaymentID;
					}
					else
					{
						this._PaymentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PaymentNotification");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NegoInvoice(NegoInvoice entity)
		{
			this.SendPropertyChanging();
			entity.NegoDraft = this;
		}
		
		private void detach_NegoInvoice(NegoInvoice entity)
		{
			this.SendPropertyChanging();
			entity.NegoDraft = null;
		}
		
		private void attach_NegoAffair(NegoAffair entity)
		{
			this.SendPropertyChanging();
			entity.NegoDraft = this;
		}
		
		private void detach_NegoAffair(NegoAffair entity)
		{
			this.SendPropertyChanging();
			entity.NegoDraft = null;
		}
		
		private void attach_Reimbursement(Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.NegoDraft = this;
		}
		
		private void detach_Reimbursement(Reimbursement entity)
		{
			this.SendPropertyChanging();
			entity.NegoDraft = null;
		}
		
		private void attach_NegoDraftAcceptance(NegoDraftAcceptance entity)
		{
			this.SendPropertyChanging();
			entity.NegoDraft = this;
		}
		
		private void detach_NegoDraftAcceptance(NegoDraftAcceptance entity)
		{
			this.SendPropertyChanging();
			entity.NegoDraft = null;
		}
		
		private void Initialize()
		{
			this._NegoInvoice = new EntitySet<NegoInvoice>(new Action<NegoInvoice>(this.attach_NegoInvoice), new Action<NegoInvoice>(this.detach_NegoInvoice));
			this._NegoAffair = new EntitySet<NegoAffair>(new Action<NegoAffair>(this.attach_NegoAffair), new Action<NegoAffair>(this.detach_NegoAffair));
			this._FpgNegoDraft = default(EntityRef<FpgNegoDraft>);
			this._NegoDraftExtension = default(EntityRef<NegoDraftExtension>);
			this._Reimbursement = new EntitySet<Reimbursement>(new Action<Reimbursement>(this.attach_Reimbursement), new Action<Reimbursement>(this.detach_Reimbursement));
			this._NegoDraftAcceptance = new EntitySet<NegoDraftAcceptance>(new Action<NegoDraftAcceptance>(this.attach_NegoDraftAcceptance), new Action<NegoDraftAcceptance>(this.detach_NegoDraftAcceptance));
			this._AmendingLcInformation = default(EntityRef<AmendingLcInformation>);
			this._Documentary = default(EntityRef<Documentary>);
			this._LetterOfCreditVersion = default(EntityRef<LetterOfCreditVersion>);
			this._NegoDraftRegistry = default(EntityRef<NegoDraftRegistry>);
			this._NegoLC = default(EntityRef<NegoLC>);
			this._NegoPrompt = default(EntityRef<NegoPrompt>);
			this._PaymentNotification = default(EntityRef<PaymentNotification>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AmendingLcApplication")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AmendingLcApplication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AmendingID;
		
		private System.Nullable<int> _PaymentID;
		
		private System.Nullable<int> _RegistrationID;
		
		private System.Nullable<int> _SourceID;
		
		private string _AmendmentNo;
		
		private System.Nullable<System.DateTime> _ApplicationDate;
		
		private System.Nullable<int> _NoteID;
		
		private System.Nullable<int> _AttachmentID;
		
		private System.Nullable<int> _ItemID;
		
		private string _TransactionMessage;
		
		private bool _IsAccepted;
		
		private string _SysDocID;
		
		private string _FileName;
		
		private System.Nullable<int> _PrintNotice;
		
		private string _Instruction;
		
		private System.Nullable<bool> _OverTheCounter;
		
		private EntityRef<AmendingLcInformation> _AmendingLcInformation;
		
		private EntityRef<AmendingLcRegistry> _AmendingLcRegistry;
		
		private EntityRef<AttachableDocument> _AttachableDocument;
		
		private EntityRef<Documentary> _Documentary;
		
		private EntityRef<LcItem> _LcItem;
		
		private EntityRef<LetterOfCreditVersion> _LetterOfCreditVersion;
		
		private EntityRef<PaymentNotification> _PaymentNotification;
		
		private EntityRef<SpecificNote> _SpecificNote;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAmendingIDChanging(int value);
    partial void OnAmendingIDChanged();
    partial void OnPaymentIDChanging(System.Nullable<int> value);
    partial void OnPaymentIDChanged();
    partial void OnRegistrationIDChanging(System.Nullable<int> value);
    partial void OnRegistrationIDChanged();
    partial void OnSourceIDChanging(System.Nullable<int> value);
    partial void OnSourceIDChanged();
    partial void OnAmendmentNoChanging(string value);
    partial void OnAmendmentNoChanged();
    partial void OnApplicationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApplicationDateChanged();
    partial void OnNoteIDChanging(System.Nullable<int> value);
    partial void OnNoteIDChanged();
    partial void OnAttachmentIDChanging(System.Nullable<int> value);
    partial void OnAttachmentIDChanged();
    partial void OnItemIDChanging(System.Nullable<int> value);
    partial void OnItemIDChanged();
    partial void OnTransactionMessageChanging(string value);
    partial void OnTransactionMessageChanged();
    partial void OnIsAcceptedChanging(bool value);
    partial void OnIsAcceptedChanged();
    partial void OnSysDocIDChanging(string value);
    partial void OnSysDocIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnPrintNoticeChanging(System.Nullable<int> value);
    partial void OnPrintNoticeChanged();
    partial void OnInstructionChanging(string value);
    partial void OnInstructionChanged();
    partial void OnOverTheCounterChanging(System.Nullable<bool> value);
    partial void OnOverTheCounterChanged();
    #endregion
		
		public AmendingLcApplication()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendingID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AmendingID
		{
			get
			{
				return this._AmendingID;
			}
			set
			{
				if ((this._AmendingID != value))
				{
					if (this._Documentary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmendingIDChanging(value);
					this.SendPropertyChanging();
					this._AmendingID = value;
					this.SendPropertyChanged("AmendingID");
					this.OnAmendingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					if (this._PaymentNotification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> RegistrationID
		{
			get
			{
				return this._RegistrationID;
			}
			set
			{
				if ((this._RegistrationID != value))
				{
					if (this._AmendingLcRegistry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegistrationIDChanging(value);
					this.SendPropertyChanging();
					this._RegistrationID = value;
					this.SendPropertyChanged("RegistrationID");
					this.OnRegistrationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					if (this._LetterOfCreditVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmendmentNo", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string AmendmentNo
		{
			get
			{
				return this._AmendmentNo;
			}
			set
			{
				if ((this._AmendmentNo != value))
				{
					this.OnAmendmentNoChanging(value);
					this.SendPropertyChanging();
					this._AmendmentNo = value;
					this.SendPropertyChanged("AmendmentNo");
					this.OnAmendmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> ApplicationDate
		{
			get
			{
				return this._ApplicationDate;
			}
			set
			{
				if ((this._ApplicationDate != value))
				{
					this.OnApplicationDateChanging(value);
					this.SendPropertyChanging();
					this._ApplicationDate = value;
					this.SendPropertyChanged("ApplicationDate");
					this.OnApplicationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> NoteID
		{
			get
			{
				return this._NoteID;
			}
			set
			{
				if ((this._NoteID != value))
				{
					if (this._SpecificNote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNoteIDChanging(value);
					this.SendPropertyChanging();
					this._NoteID = value;
					this.SendPropertyChanged("NoteID");
					this.OnNoteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> AttachmentID
		{
			get
			{
				return this._AttachmentID;
			}
			set
			{
				if ((this._AttachmentID != value))
				{
					if (this._AttachableDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._AttachmentID = value;
					this.SendPropertyChanged("AttachmentID");
					this.OnAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._LcItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionMessage", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string TransactionMessage
		{
			get
			{
				return this._TransactionMessage;
			}
			set
			{
				if ((this._TransactionMessage != value))
				{
					this.OnTransactionMessageChanging(value);
					this.SendPropertyChanging();
					this._TransactionMessage = value;
					this.SendPropertyChanged("TransactionMessage");
					this.OnTransactionMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccepted", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool IsAccepted
		{
			get
			{
				return this._IsAccepted;
			}
			set
			{
				if ((this._IsAccepted != value))
				{
					this.OnIsAcceptedChanging(value);
					this.SendPropertyChanging();
					this._IsAccepted = value;
					this.SendPropertyChanged("IsAccepted");
					this.OnIsAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysDocID", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string SysDocID
		{
			get
			{
				return this._SysDocID;
			}
			set
			{
				if ((this._SysDocID != value))
				{
					this.OnSysDocIDChanging(value);
					this.SendPropertyChanging();
					this._SysDocID = value;
					this.SendPropertyChanged("SysDocID");
					this.OnSysDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintNotice", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<int> PrintNotice
		{
			get
			{
				return this._PrintNotice;
			}
			set
			{
				if ((this._PrintNotice != value))
				{
					this.OnPrintNoticeChanging(value);
					this.SendPropertyChanging();
					this._PrintNotice = value;
					this.SendPropertyChanged("PrintNotice");
					this.OnPrintNoticeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instruction", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string Instruction
		{
			get
			{
				return this._Instruction;
			}
			set
			{
				if ((this._Instruction != value))
				{
					this.OnInstructionChanging(value);
					this.SendPropertyChanging();
					this._Instruction = value;
					this.SendPropertyChanged("Instruction");
					this.OnInstructionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverTheCounter", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<bool> OverTheCounter
		{
			get
			{
				return this._OverTheCounter;
			}
			set
			{
				if ((this._OverTheCounter != value))
				{
					this.OnOverTheCounterChanging(value);
					this.SendPropertyChanging();
					this._OverTheCounter = value;
					this.SendPropertyChanged("OverTheCounter");
					this.OnOverTheCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AmendingLcApplication_AmendingLcInformation", Storage="_AmendingLcInformation", ThisKey="AmendingID", OtherKey="AmendingID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public AmendingLcInformation AmendingLcInformation
		{
			get
			{
				if ((this.serializing 
							&& (this._AmendingLcInformation.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._AmendingLcInformation.Entity;
			}
			set
			{
				AmendingLcInformation previousValue = this._AmendingLcInformation.Entity;
				if (((previousValue != value) 
							|| (this._AmendingLcInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AmendingLcInformation.Entity = null;
						previousValue.AmendingLcApplication = null;
					}
					this._AmendingLcInformation.Entity = value;
					if ((value != null))
					{
						value.AmendingLcApplication = this;
					}
					this.SendPropertyChanged("AmendingLcInformation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AmendingLcRegistry_AmendingLcApplication", Storage="_AmendingLcRegistry", ThisKey="RegistrationID", OtherKey="RegistrationID", IsForeignKey=true)]
		public AmendingLcRegistry AmendingLcRegistry
		{
			get
			{
				return this._AmendingLcRegistry.Entity;
			}
			set
			{
				AmendingLcRegistry previousValue = this._AmendingLcRegistry.Entity;
				if (((previousValue != value) 
							|| (this._AmendingLcRegistry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AmendingLcRegistry.Entity = null;
						previousValue.AmendingLcApplication.Remove(this);
					}
					this._AmendingLcRegistry.Entity = value;
					if ((value != null))
					{
						value.AmendingLcApplication.Add(this);
						this._RegistrationID = value.RegistrationID;
					}
					else
					{
						this._RegistrationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AmendingLcRegistry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttachableDocument_AmendingLcApplication", Storage="_AttachableDocument", ThisKey="AttachmentID", OtherKey="AttachmentID", IsForeignKey=true)]
		public AttachableDocument AttachableDocument
		{
			get
			{
				return this._AttachableDocument.Entity;
			}
			set
			{
				AttachableDocument previousValue = this._AttachableDocument.Entity;
				if (((previousValue != value) 
							|| (this._AttachableDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AttachableDocument.Entity = null;
						previousValue.AmendingLcApplication.Remove(this);
					}
					this._AttachableDocument.Entity = value;
					if ((value != null))
					{
						value.AmendingLcApplication.Add(this);
						this._AttachmentID = value.AttachmentID;
					}
					else
					{
						this._AttachmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AttachableDocument");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Documentary_AmendingLcApplication", Storage="_Documentary", ThisKey="AmendingID", OtherKey="DocID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Documentary Documentary
		{
			get
			{
				return this._Documentary.Entity;
			}
			set
			{
				Documentary previousValue = this._Documentary.Entity;
				if (((previousValue != value) 
							|| (this._Documentary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Documentary.Entity = null;
						previousValue.AmendingLcApplication = null;
					}
					this._Documentary.Entity = value;
					if ((value != null))
					{
						value.AmendingLcApplication = this;
						this._AmendingID = value.DocID;
					}
					else
					{
						this._AmendingID = default(int);
					}
					this.SendPropertyChanged("Documentary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LcItem_AmendingLcApplication", Storage="_LcItem", ThisKey="ItemID", OtherKey="ItemID", IsForeignKey=true)]
		public LcItem LcItem
		{
			get
			{
				return this._LcItem.Entity;
			}
			set
			{
				LcItem previousValue = this._LcItem.Entity;
				if (((previousValue != value) 
							|| (this._LcItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LcItem.Entity = null;
						previousValue.AmendingLcApplication.Remove(this);
					}
					this._LcItem.Entity = value;
					if ((value != null))
					{
						value.AmendingLcApplication.Add(this);
						this._ItemID = value.ItemID;
					}
					else
					{
						this._ItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LcItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LetterOfCreditVersion_AmendingLcApplication", Storage="_LetterOfCreditVersion", ThisKey="SourceID", OtherKey="VersionID", IsForeignKey=true)]
		public LetterOfCreditVersion LetterOfCreditVersion
		{
			get
			{
				return this._LetterOfCreditVersion.Entity;
			}
			set
			{
				LetterOfCreditVersion previousValue = this._LetterOfCreditVersion.Entity;
				if (((previousValue != value) 
							|| (this._LetterOfCreditVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LetterOfCreditVersion.Entity = null;
						previousValue.AmendingLcApplication.Remove(this);
					}
					this._LetterOfCreditVersion.Entity = value;
					if ((value != null))
					{
						value.AmendingLcApplication.Add(this);
						this._SourceID = value.VersionID;
					}
					else
					{
						this._SourceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LetterOfCreditVersion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentNotification_AmendingLcApplication", Storage="_PaymentNotification", ThisKey="PaymentID", OtherKey="PaymentID", IsForeignKey=true)]
		public PaymentNotification PaymentNotification
		{
			get
			{
				return this._PaymentNotification.Entity;
			}
			set
			{
				PaymentNotification previousValue = this._PaymentNotification.Entity;
				if (((previousValue != value) 
							|| (this._PaymentNotification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentNotification.Entity = null;
						previousValue.AmendingLcApplication.Remove(this);
					}
					this._PaymentNotification.Entity = value;
					if ((value != null))
					{
						value.AmendingLcApplication.Add(this);
						this._PaymentID = value.PaymentID;
					}
					else
					{
						this._PaymentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PaymentNotification");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecificNote_AmendingLcApplication", Storage="_SpecificNote", ThisKey="NoteID", OtherKey="NoteID", IsForeignKey=true)]
		public SpecificNote SpecificNote
		{
			get
			{
				return this._SpecificNote.Entity;
			}
			set
			{
				SpecificNote previousValue = this._SpecificNote.Entity;
				if (((previousValue != value) 
							|| (this._SpecificNote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecificNote.Entity = null;
						previousValue.AmendingLcApplication.Remove(this);
					}
					this._SpecificNote.Entity = value;
					if ((value != null))
					{
						value.AmendingLcApplication.Add(this);
						this._NoteID = value.NoteID;
					}
					else
					{
						this._NoteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SpecificNote");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._AmendingLcInformation = default(EntityRef<AmendingLcInformation>);
			this._AmendingLcRegistry = default(EntityRef<AmendingLcRegistry>);
			this._AttachableDocument = default(EntityRef<AttachableDocument>);
			this._Documentary = default(EntityRef<Documentary>);
			this._LcItem = default(EntityRef<LcItem>);
			this._LetterOfCreditVersion = default(EntityRef<LetterOfCreditVersion>);
			this._PaymentNotification = default(EntityRef<PaymentNotification>);
			this._SpecificNote = default(EntityRef<SpecificNote>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organization")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ContactName;
		
		private string _Fax;
		
		private string _LogoURL;
		
		private string _CompanyName;
		
		private int _CompanyID;
		
		private string _ReceiptNo;
		
		private string _Phone;
		
		private string _ContactFax;
		
		private string _ContactPhone;
		
		private string _ContactMobilePhone;
		
		private string _RegAddr;
		
		private string _UndertakerName;
		
		private string _UndertakerID;
		
		private string _Addr;
		
		private string _EnglishName;
		
		private string _EnglishAddr;
		
		private string _EnglishRegAddr;
		
		private string _ContactEmail;
		
		private string _UndertakerPhone;
		
		private string _UndertakerFax;
		
		private string _UndertakerMobilePhone;
		
		private string _InvoiceSignature;
		
		private EntitySet<OpeningApplicationDocumentary> _OpeningApplicationDocumentary;
		
		private EntitySet<CustomerOfBranch> _CustomerOfBranch;
		
		private EntitySet<CustomerInbox> _CustomerInbox;
		
		private EntitySet<BeneficiaryTransferInto> _BeneficiaryTransferInto;
		
		private EntityRef<DefaultSpecificNotes> _DefaultSpecificNotes;
		
		private EntitySet<DocumentOwner> _DocumentOwner;
		
		private EntitySet<EnterpriseRelation> _EnterpriseRelation;
		
		private EntitySet<EnterpriseRelation> _EnterpriseRelation1;
		
		private EntityRef<OrganizationStatus> _OrganizationStatus;
		
		private EntitySet<OrganizationBranchSettings> _OrganizationBranchSettings;
		
		private EntityRef<BeneficiaryData> _BeneficiaryData;
		
		private EntityRef<OrganizationExtension> _OrganizationExtension;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnLogoURLChanging(string value);
    partial void OnLogoURLChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnReceiptNoChanging(string value);
    partial void OnReceiptNoChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnContactFaxChanging(string value);
    partial void OnContactFaxChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnContactMobilePhoneChanging(string value);
    partial void OnContactMobilePhoneChanged();
    partial void OnRegAddrChanging(string value);
    partial void OnRegAddrChanged();
    partial void OnUndertakerNameChanging(string value);
    partial void OnUndertakerNameChanged();
    partial void OnUndertakerIDChanging(string value);
    partial void OnUndertakerIDChanged();
    partial void OnAddrChanging(string value);
    partial void OnAddrChanged();
    partial void OnEnglishNameChanging(string value);
    partial void OnEnglishNameChanged();
    partial void OnEnglishAddrChanging(string value);
    partial void OnEnglishAddrChanged();
    partial void OnEnglishRegAddrChanging(string value);
    partial void OnEnglishRegAddrChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnUndertakerPhoneChanging(string value);
    partial void OnUndertakerPhoneChanged();
    partial void OnUndertakerFaxChanging(string value);
    partial void OnUndertakerFaxChanged();
    partial void OnUndertakerMobilePhoneChanging(string value);
    partial void OnUndertakerMobilePhoneChanged();
    partial void OnInvoiceSignatureChanging(string value);
    partial void OnInvoiceSignatureChanged();
    #endregion
		
		public Organization()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoURL", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string LogoURL
		{
			get
			{
				return this._LogoURL;
			}
			set
			{
				if ((this._LogoURL != value))
				{
					this.OnLogoURLChanging(value);
					this.SendPropertyChanging();
					this._LogoURL = value;
					this.SendPropertyChanged("LogoURL");
					this.OnLogoURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this.OnReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNo = value;
					this.SendPropertyChanged("ReceiptNo");
					this.OnReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactFax", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ContactFax
		{
			get
			{
				return this._ContactFax;
			}
			set
			{
				if ((this._ContactFax != value))
				{
					this.OnContactFaxChanging(value);
					this.SendPropertyChanging();
					this._ContactFax = value;
					this.SendPropertyChanged("ContactFax");
					this.OnContactFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactMobilePhone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string ContactMobilePhone
		{
			get
			{
				return this._ContactMobilePhone;
			}
			set
			{
				if ((this._ContactMobilePhone != value))
				{
					this.OnContactMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactMobilePhone = value;
					this.SendPropertyChanged("ContactMobilePhone");
					this.OnContactMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegAddr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string RegAddr
		{
			get
			{
				return this._RegAddr;
			}
			set
			{
				if ((this._RegAddr != value))
				{
					this.OnRegAddrChanging(value);
					this.SendPropertyChanging();
					this._RegAddr = value;
					this.SendPropertyChanged("RegAddr");
					this.OnRegAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerName", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string UndertakerName
		{
			get
			{
				return this._UndertakerName;
			}
			set
			{
				if ((this._UndertakerName != value))
				{
					this.OnUndertakerNameChanging(value);
					this.SendPropertyChanging();
					this._UndertakerName = value;
					this.SendPropertyChanged("UndertakerName");
					this.OnUndertakerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerID", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string UndertakerID
		{
			get
			{
				return this._UndertakerID;
			}
			set
			{
				if ((this._UndertakerID != value))
				{
					this.OnUndertakerIDChanging(value);
					this.SendPropertyChanging();
					this._UndertakerID = value;
					this.SendPropertyChanged("UndertakerID");
					this.OnUndertakerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string Addr
		{
			get
			{
				return this._Addr;
			}
			set
			{
				if ((this._Addr != value))
				{
					this.OnAddrChanging(value);
					this.SendPropertyChanging();
					this._Addr = value;
					this.SendPropertyChanged("Addr");
					this.OnAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishName", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string EnglishName
		{
			get
			{
				return this._EnglishName;
			}
			set
			{
				if ((this._EnglishName != value))
				{
					this.OnEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._EnglishName = value;
					this.SendPropertyChanged("EnglishName");
					this.OnEnglishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishAddr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string EnglishAddr
		{
			get
			{
				return this._EnglishAddr;
			}
			set
			{
				if ((this._EnglishAddr != value))
				{
					this.OnEnglishAddrChanging(value);
					this.SendPropertyChanging();
					this._EnglishAddr = value;
					this.SendPropertyChanged("EnglishAddr");
					this.OnEnglishAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishRegAddr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string EnglishRegAddr
		{
			get
			{
				return this._EnglishRegAddr;
			}
			set
			{
				if ((this._EnglishRegAddr != value))
				{
					this.OnEnglishRegAddrChanging(value);
					this.SendPropertyChanging();
					this._EnglishRegAddr = value;
					this.SendPropertyChanged("EnglishRegAddr");
					this.OnEnglishRegAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerPhone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string UndertakerPhone
		{
			get
			{
				return this._UndertakerPhone;
			}
			set
			{
				if ((this._UndertakerPhone != value))
				{
					this.OnUndertakerPhoneChanging(value);
					this.SendPropertyChanging();
					this._UndertakerPhone = value;
					this.SendPropertyChanged("UndertakerPhone");
					this.OnUndertakerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerFax", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string UndertakerFax
		{
			get
			{
				return this._UndertakerFax;
			}
			set
			{
				if ((this._UndertakerFax != value))
				{
					this.OnUndertakerFaxChanging(value);
					this.SendPropertyChanging();
					this._UndertakerFax = value;
					this.SendPropertyChanged("UndertakerFax");
					this.OnUndertakerFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerMobilePhone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string UndertakerMobilePhone
		{
			get
			{
				return this._UndertakerMobilePhone;
			}
			set
			{
				if ((this._UndertakerMobilePhone != value))
				{
					this.OnUndertakerMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._UndertakerMobilePhone = value;
					this.SendPropertyChanged("UndertakerMobilePhone");
					this.OnUndertakerMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceSignature", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string InvoiceSignature
		{
			get
			{
				return this._InvoiceSignature;
			}
			set
			{
				if ((this._InvoiceSignature != value))
				{
					this.OnInvoiceSignatureChanging(value);
					this.SendPropertyChanging();
					this._InvoiceSignature = value;
					this.SendPropertyChanged("InvoiceSignature");
					this.OnInvoiceSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OpeningApplicationDocumentary", Storage="_OpeningApplicationDocumentary", ThisKey="CompanyID", OtherKey="CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<OpeningApplicationDocumentary> OpeningApplicationDocumentary
		{
			get
			{
				if ((this.serializing 
							&& (this._OpeningApplicationDocumentary.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OpeningApplicationDocumentary;
			}
			set
			{
				this._OpeningApplicationDocumentary.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_CustomerOfBranch", Storage="_CustomerOfBranch", ThisKey="CompanyID", OtherKey="CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<CustomerOfBranch> CustomerOfBranch
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerOfBranch.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomerOfBranch;
			}
			set
			{
				this._CustomerOfBranch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_CustomerInbox", Storage="_CustomerInbox", ThisKey="CompanyID", OtherKey="CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<CustomerInbox> CustomerInbox
		{
			get
			{
				if ((this.serializing 
							&& (this._CustomerInbox.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CustomerInbox;
			}
			set
			{
				this._CustomerInbox.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_BeneficiaryTransferInto", Storage="_BeneficiaryTransferInto", ThisKey="CompanyID", OtherKey="BeneID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<BeneficiaryTransferInto> BeneficiaryTransferInto
		{
			get
			{
				if ((this.serializing 
							&& (this._BeneficiaryTransferInto.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BeneficiaryTransferInto;
			}
			set
			{
				this._BeneficiaryTransferInto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_DefaultSpecificNotes", Storage="_DefaultSpecificNotes", ThisKey="CompanyID", OtherKey="CompanyID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public DefaultSpecificNotes DefaultSpecificNotes
		{
			get
			{
				if ((this.serializing 
							&& (this._DefaultSpecificNotes.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._DefaultSpecificNotes.Entity;
			}
			set
			{
				DefaultSpecificNotes previousValue = this._DefaultSpecificNotes.Entity;
				if (((previousValue != value) 
							|| (this._DefaultSpecificNotes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DefaultSpecificNotes.Entity = null;
						previousValue.Organization = null;
					}
					this._DefaultSpecificNotes.Entity = value;
					if ((value != null))
					{
						value.Organization = this;
					}
					this.SendPropertyChanged("DefaultSpecificNotes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_DocumentOwner", Storage="_DocumentOwner", ThisKey="CompanyID", OtherKey="OwnerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public EntitySet<DocumentOwner> DocumentOwner
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentOwner.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentOwner;
			}
			set
			{
				this._DocumentOwner.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_EnterpriseRelation", Storage="_EnterpriseRelation", ThisKey="CompanyID", OtherKey="EnterpriseID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public EntitySet<EnterpriseRelation> EnterpriseRelation
		{
			get
			{
				if ((this.serializing 
							&& (this._EnterpriseRelation.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EnterpriseRelation;
			}
			set
			{
				this._EnterpriseRelation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_EnterpriseRelation1", Storage="_EnterpriseRelation1", ThisKey="CompanyID", OtherKey="CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30, EmitDefaultValue=false)]
		public EntitySet<EnterpriseRelation> EnterpriseRelation1
		{
			get
			{
				if ((this.serializing 
							&& (this._EnterpriseRelation1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EnterpriseRelation1;
			}
			set
			{
				this._EnterpriseRelation1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationStatus", Storage="_OrganizationStatus", ThisKey="CompanyID", OtherKey="CompanyID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31, EmitDefaultValue=false)]
		public OrganizationStatus OrganizationStatus
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationStatus.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._OrganizationStatus.Entity;
			}
			set
			{
				OrganizationStatus previousValue = this._OrganizationStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationStatus.Entity = null;
						previousValue.Organization = null;
					}
					this._OrganizationStatus.Entity = value;
					if ((value != null))
					{
						value.Organization = this;
					}
					this.SendPropertyChanged("OrganizationStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationBranchSettings", Storage="_OrganizationBranchSettings", ThisKey="CompanyID", OtherKey="CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public EntitySet<OrganizationBranchSettings> OrganizationBranchSettings
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationBranchSettings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OrganizationBranchSettings;
			}
			set
			{
				this._OrganizationBranchSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_BeneficiaryData", Storage="_BeneficiaryData", ThisKey="CompanyID", OtherKey="BeneID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33, EmitDefaultValue=false)]
		public BeneficiaryData BeneficiaryData
		{
			get
			{
				if ((this.serializing 
							&& (this._BeneficiaryData.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._BeneficiaryData.Entity;
			}
			set
			{
				BeneficiaryData previousValue = this._BeneficiaryData.Entity;
				if (((previousValue != value) 
							|| (this._BeneficiaryData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BeneficiaryData.Entity = null;
						previousValue.Organization = null;
					}
					this._BeneficiaryData.Entity = value;
					if ((value != null))
					{
						value.Organization = this;
					}
					this.SendPropertyChanged("BeneficiaryData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationExtension", Storage="_OrganizationExtension", ThisKey="CompanyID", OtherKey="CompanyID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34, EmitDefaultValue=false)]
		public OrganizationExtension OrganizationExtension
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationExtension.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._OrganizationExtension.Entity;
			}
			set
			{
				OrganizationExtension previousValue = this._OrganizationExtension.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationExtension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationExtension.Entity = null;
						previousValue.Organization = null;
					}
					this._OrganizationExtension.Entity = value;
					if ((value != null))
					{
						value.Organization = this;
					}
					this.SendPropertyChanged("OrganizationExtension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OpeningApplicationDocumentary(OpeningApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_OpeningApplicationDocumentary(OpeningApplicationDocumentary entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_CustomerOfBranch(CustomerOfBranch entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_CustomerOfBranch(CustomerOfBranch entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_CustomerInbox(CustomerInbox entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_CustomerInbox(CustomerInbox entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_BeneficiaryTransferInto(BeneficiaryTransferInto entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_BeneficiaryTransferInto(BeneficiaryTransferInto entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_DocumentOwner(DocumentOwner entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_DocumentOwner(DocumentOwner entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_EnterpriseRelation(EnterpriseRelation entity)
		{
			this.SendPropertyChanging();
			entity.AsEnterpriseAgent = this;
		}
		
		private void detach_EnterpriseRelation(EnterpriseRelation entity)
		{
			this.SendPropertyChanging();
			entity.AsEnterpriseAgent = null;
		}
		
		private void attach_EnterpriseRelation1(EnterpriseRelation entity)
		{
			this.SendPropertyChanging();
			entity.AsEnterpriseMember = this;
		}
		
		private void detach_EnterpriseRelation1(EnterpriseRelation entity)
		{
			this.SendPropertyChanging();
			entity.AsEnterpriseMember = null;
		}
		
		private void attach_OrganizationBranchSettings(OrganizationBranchSettings entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_OrganizationBranchSettings(OrganizationBranchSettings entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void Initialize()
		{
			this._OpeningApplicationDocumentary = new EntitySet<OpeningApplicationDocumentary>(new Action<OpeningApplicationDocumentary>(this.attach_OpeningApplicationDocumentary), new Action<OpeningApplicationDocumentary>(this.detach_OpeningApplicationDocumentary));
			this._CustomerOfBranch = new EntitySet<CustomerOfBranch>(new Action<CustomerOfBranch>(this.attach_CustomerOfBranch), new Action<CustomerOfBranch>(this.detach_CustomerOfBranch));
			this._CustomerInbox = new EntitySet<CustomerInbox>(new Action<CustomerInbox>(this.attach_CustomerInbox), new Action<CustomerInbox>(this.detach_CustomerInbox));
			this._BeneficiaryTransferInto = new EntitySet<BeneficiaryTransferInto>(new Action<BeneficiaryTransferInto>(this.attach_BeneficiaryTransferInto), new Action<BeneficiaryTransferInto>(this.detach_BeneficiaryTransferInto));
			this._DefaultSpecificNotes = default(EntityRef<DefaultSpecificNotes>);
			this._DocumentOwner = new EntitySet<DocumentOwner>(new Action<DocumentOwner>(this.attach_DocumentOwner), new Action<DocumentOwner>(this.detach_DocumentOwner));
			this._EnterpriseRelation = new EntitySet<EnterpriseRelation>(new Action<EnterpriseRelation>(this.attach_EnterpriseRelation), new Action<EnterpriseRelation>(this.detach_EnterpriseRelation));
			this._EnterpriseRelation1 = new EntitySet<EnterpriseRelation>(new Action<EnterpriseRelation>(this.attach_EnterpriseRelation1), new Action<EnterpriseRelation>(this.detach_EnterpriseRelation1));
			this._OrganizationStatus = default(EntityRef<OrganizationStatus>);
			this._OrganizationBranchSettings = new EntitySet<OrganizationBranchSettings>(new Action<OrganizationBranchSettings>(this.attach_OrganizationBranchSettings), new Action<OrganizationBranchSettings>(this.detach_OrganizationBranchSettings));
			this._BeneficiaryData = default(EntityRef<BeneficiaryData>);
			this._OrganizationExtension = default(EntityRef<OrganizationExtension>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankUser")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BankUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _USER_ID;
		
		private string _PID;
		
		private string _PASSWORD;
		
		private string _ROLE_ID;
		
		private string _USER_NAME;
		
		private string _TEL_NO;
		
		private string _EMAIL;
		
		private System.Nullable<int> _LOGIN_COUNT;
		
		private System.Nullable<int> _SUPERVISOR;
		
		private string _STATUS_CODE;
		
		private System.Nullable<int> _AUDITOR_ROLE;
		
		private EntitySet<BankUser> _Subordinate;
		
		private EntityRef<BankUserDeputy> _BankUserDeputy;
		
		private EntitySet<BankUserDeputy> _BankUserDeputy1;
		
		private EntitySet<BankUserLogin> _BankUserLogin;
		
		private EntitySet<BankUserBranch> _BankUserBranch;
		
		private EntityRef<BankUser> _SupervisorMan;
		
		private EntityRef<BankUserRole> _BankUserRole;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnPIDChanging(string value);
    partial void OnPIDChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnROLE_IDChanging(string value);
    partial void OnROLE_IDChanged();
    partial void OnUSER_NAMEChanging(string value);
    partial void OnUSER_NAMEChanged();
    partial void OnTEL_NOChanging(string value);
    partial void OnTEL_NOChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnLOGIN_COUNTChanging(System.Nullable<int> value);
    partial void OnLOGIN_COUNTChanged();
    partial void OnSUPERVISORChanging(System.Nullable<int> value);
    partial void OnSUPERVISORChanged();
    partial void OnSTATUS_CODEChanging(string value);
    partial void OnSTATUS_CODEChanged();
    partial void OnAUDITOR_ROLEChanging(System.Nullable<int> value);
    partial void OnAUDITOR_ROLEChanged();
    #endregion
		
		public BankUser()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="NVarChar(64) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_ID", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ROLE_ID
		{
			get
			{
				return this._ROLE_ID;
			}
			set
			{
				if ((this._ROLE_ID != value))
				{
					if (this._BankUserRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnROLE_IDChanging(value);
					this.SendPropertyChanging();
					this._ROLE_ID = value;
					this.SendPropertyChanged("ROLE_ID");
					this.OnROLE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_NAME", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string USER_NAME
		{
			get
			{
				return this._USER_NAME;
			}
			set
			{
				if ((this._USER_NAME != value))
				{
					this.OnUSER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._USER_NAME = value;
					this.SendPropertyChanged("USER_NAME");
					this.OnUSER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEL_NO", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string TEL_NO
		{
			get
			{
				return this._TEL_NO;
			}
			set
			{
				if ((this._TEL_NO != value))
				{
					this.OnTEL_NOChanging(value);
					this.SendPropertyChanging();
					this._TEL_NO = value;
					this.SendPropertyChanged("TEL_NO");
					this.OnTEL_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOGIN_COUNT", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> LOGIN_COUNT
		{
			get
			{
				return this._LOGIN_COUNT;
			}
			set
			{
				if ((this._LOGIN_COUNT != value))
				{
					this.OnLOGIN_COUNTChanging(value);
					this.SendPropertyChanging();
					this._LOGIN_COUNT = value;
					this.SendPropertyChanged("LOGIN_COUNT");
					this.OnLOGIN_COUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUPERVISOR", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> SUPERVISOR
		{
			get
			{
				return this._SUPERVISOR;
			}
			set
			{
				if ((this._SUPERVISOR != value))
				{
					if (this._SupervisorMan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSUPERVISORChanging(value);
					this.SendPropertyChanging();
					this._SUPERVISOR = value;
					this.SendPropertyChanged("SUPERVISOR");
					this.OnSUPERVISORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS_CODE", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string STATUS_CODE
		{
			get
			{
				return this._STATUS_CODE;
			}
			set
			{
				if ((this._STATUS_CODE != value))
				{
					this.OnSTATUS_CODEChanging(value);
					this.SendPropertyChanging();
					this._STATUS_CODE = value;
					this.SendPropertyChanged("STATUS_CODE");
					this.OnSTATUS_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AUDITOR_ROLE", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> AUDITOR_ROLE
		{
			get
			{
				return this._AUDITOR_ROLE;
			}
			set
			{
				if ((this._AUDITOR_ROLE != value))
				{
					this.OnAUDITOR_ROLEChanging(value);
					this.SendPropertyChanging();
					this._AUDITOR_ROLE = value;
					this.SendPropertyChanged("AUDITOR_ROLE");
					this.OnAUDITOR_ROLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankUser_BankUser", Storage="_Subordinate", ThisKey="USER_ID", OtherKey="SUPERVISOR")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<BankUser> Subordinate
		{
			get
			{
				if ((this.serializing 
							&& (this._Subordinate.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Subordinate;
			}
			set
			{
				this._Subordinate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankUser_BankUserDeputy", Storage="_BankUserDeputy", ThisKey="USER_ID", OtherKey="USER_ID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public BankUserDeputy BankUserDeputy
		{
			get
			{
				if ((this.serializing 
							&& (this._BankUserDeputy.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._BankUserDeputy.Entity;
			}
			set
			{
				BankUserDeputy previousValue = this._BankUserDeputy.Entity;
				if (((previousValue != value) 
							|| (this._BankUserDeputy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankUserDeputy.Entity = null;
						previousValue.BankUser = null;
					}
					this._BankUserDeputy.Entity = value;
					if ((value != null))
					{
						value.BankUser = this;
					}
					this.SendPropertyChanged("BankUserDeputy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankUser_BankUserDeputy1", Storage="_BankUserDeputy1", ThisKey="PID", OtherKey="DEPUTY_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<BankUserDeputy> BankUserDeputy1
		{
			get
			{
				if ((this.serializing 
							&& (this._BankUserDeputy1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BankUserDeputy1;
			}
			set
			{
				this._BankUserDeputy1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankUser_BankUserLogin", Storage="_BankUserLogin", ThisKey="USER_ID", OtherKey="USER_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<BankUserLogin> BankUserLogin
		{
			get
			{
				if ((this.serializing 
							&& (this._BankUserLogin.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BankUserLogin;
			}
			set
			{
				this._BankUserLogin.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankUser_BankUserBranch", Storage="_BankUserBranch", ThisKey="USER_ID", OtherKey="USER_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<BankUserBranch> BankUserBranch
		{
			get
			{
				if ((this.serializing 
							&& (this._BankUserBranch.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BankUserBranch;
			}
			set
			{
				this._BankUserBranch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankUser_BankUser", Storage="_SupervisorMan", ThisKey="SUPERVISOR", OtherKey="USER_ID", IsForeignKey=true)]
		public BankUser SupervisorMan
		{
			get
			{
				return this._SupervisorMan.Entity;
			}
			set
			{
				BankUser previousValue = this._SupervisorMan.Entity;
				if (((previousValue != value) 
							|| (this._SupervisorMan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupervisorMan.Entity = null;
						previousValue.Subordinate.Remove(this);
					}
					this._SupervisorMan.Entity = value;
					if ((value != null))
					{
						value.Subordinate.Add(this);
						this._SUPERVISOR = value.USER_ID;
					}
					else
					{
						this._SUPERVISOR = default(Nullable<int>);
					}
					this.SendPropertyChanged("SupervisorMan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankUserRole_BankUser", Storage="_BankUserRole", ThisKey="ROLE_ID", OtherKey="ROLE_ID", IsForeignKey=true)]
		public BankUserRole BankUserRole
		{
			get
			{
				return this._BankUserRole.Entity;
			}
			set
			{
				BankUserRole previousValue = this._BankUserRole.Entity;
				if (((previousValue != value) 
							|| (this._BankUserRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankUserRole.Entity = null;
						previousValue.BankUser.Remove(this);
					}
					this._BankUserRole.Entity = value;
					if ((value != null))
					{
						value.BankUser.Add(this);
						this._ROLE_ID = value.ROLE_ID;
					}
					else
					{
						this._ROLE_ID = default(string);
					}
					this.SendPropertyChanged("BankUserRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Subordinate(BankUser entity)
		{
			this.SendPropertyChanging();
			entity.SupervisorMan = this;
		}
		
		private void detach_Subordinate(BankUser entity)
		{
			this.SendPropertyChanging();
			entity.SupervisorMan = null;
		}
		
		private void attach_BankUserDeputy1(BankUserDeputy entity)
		{
			this.SendPropertyChanging();
			entity.BankUser1 = this;
		}
		
		private void detach_BankUserDeputy1(BankUserDeputy entity)
		{
			this.SendPropertyChanging();
			entity.BankUser1 = null;
		}
		
		private void attach_BankUserLogin(BankUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.BankUser = this;
		}
		
		private void detach_BankUserLogin(BankUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.BankUser = null;
		}
		
		private void attach_BankUserBranch(BankUserBranch entity)
		{
			this.SendPropertyChanging();
			entity.BankUser = this;
		}
		
		private void detach_BankUserBranch(BankUserBranch entity)
		{
			this.SendPropertyChanging();
			entity.BankUser = null;
		}
		
		private void Initialize()
		{
			this._Subordinate = new EntitySet<BankUser>(new Action<BankUser>(this.attach_Subordinate), new Action<BankUser>(this.detach_Subordinate));
			this._BankUserDeputy = default(EntityRef<BankUserDeputy>);
			this._BankUserDeputy1 = new EntitySet<BankUserDeputy>(new Action<BankUserDeputy>(this.attach_BankUserDeputy1), new Action<BankUserDeputy>(this.detach_BankUserDeputy1));
			this._BankUserLogin = new EntitySet<BankUserLogin>(new Action<BankUserLogin>(this.attach_BankUserLogin), new Action<BankUserLogin>(this.detach_BankUserLogin));
			this._BankUserBranch = new EntitySet<BankUserBranch>(new Action<BankUserBranch>(this.attach_BankUserBranch), new Action<BankUserBranch>(this.detach_BankUserBranch));
			this._SupervisorMan = default(EntityRef<BankUser>);
			this._BankUserRole = default(EntityRef<BankUserRole>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankUserDeputy")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BankUserDeputy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _USER_ID;
		
		private string _DEPUTY_ID;
		
		private System.Nullable<int> _DEPUTED;
		
		private EntityRef<BankUser> _BankUser;
		
		private EntityRef<BankUser> _BankUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnDEPUTY_IDChanging(string value);
    partial void OnDEPUTY_IDChanged();
    partial void OnDEPUTEDChanging(System.Nullable<int> value);
    partial void OnDEPUTEDChanged();
    #endregion
		
		public BankUserDeputy()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					if (this._BankUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEPUTY_ID", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string DEPUTY_ID
		{
			get
			{
				return this._DEPUTY_ID;
			}
			set
			{
				if ((this._DEPUTY_ID != value))
				{
					if (this._BankUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDEPUTY_IDChanging(value);
					this.SendPropertyChanging();
					this._DEPUTY_ID = value;
					this.SendPropertyChanged("DEPUTY_ID");
					this.OnDEPUTY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEPUTED", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> DEPUTED
		{
			get
			{
				return this._DEPUTED;
			}
			set
			{
				if ((this._DEPUTED != value))
				{
					this.OnDEPUTEDChanging(value);
					this.SendPropertyChanging();
					this._DEPUTED = value;
					this.SendPropertyChanged("DEPUTED");
					this.OnDEPUTEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankUser_BankUserDeputy", Storage="_BankUser", ThisKey="USER_ID", OtherKey="USER_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BankUser BankUser
		{
			get
			{
				return this._BankUser.Entity;
			}
			set
			{
				BankUser previousValue = this._BankUser.Entity;
				if (((previousValue != value) 
							|| (this._BankUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankUser.Entity = null;
						previousValue.BankUserDeputy = null;
					}
					this._BankUser.Entity = value;
					if ((value != null))
					{
						value.BankUserDeputy = this;
						this._USER_ID = value.USER_ID;
					}
					else
					{
						this._USER_ID = default(int);
					}
					this.SendPropertyChanged("BankUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankUser_BankUserDeputy1", Storage="_BankUser1", ThisKey="DEPUTY_ID", OtherKey="PID", IsForeignKey=true)]
		public BankUser BankUser1
		{
			get
			{
				return this._BankUser1.Entity;
			}
			set
			{
				BankUser previousValue = this._BankUser1.Entity;
				if (((previousValue != value) 
							|| (this._BankUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankUser1.Entity = null;
						previousValue.BankUserDeputy1.Remove(this);
					}
					this._BankUser1.Entity = value;
					if ((value != null))
					{
						value.BankUserDeputy1.Add(this);
						this._DEPUTY_ID = value.PID;
					}
					else
					{
						this._DEPUTY_ID = default(string);
					}
					this.SendPropertyChanged("BankUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BankUser = default(EntityRef<BankUser>);
			this._BankUser1 = default(EntityRef<BankUser>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankUserLogin")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BankUserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _USER_ID;
		
		private System.DateTime _LAST_LOGIN_TIME;
		
		private EntityRef<BankUser> _BankUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnLAST_LOGIN_TIMEChanging(System.DateTime value);
    partial void OnLAST_LOGIN_TIMEChanged();
    #endregion
		
		public BankUserLogin()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					if (this._BankUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAST_LOGIN_TIME", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime LAST_LOGIN_TIME
		{
			get
			{
				return this._LAST_LOGIN_TIME;
			}
			set
			{
				if ((this._LAST_LOGIN_TIME != value))
				{
					this.OnLAST_LOGIN_TIMEChanging(value);
					this.SendPropertyChanging();
					this._LAST_LOGIN_TIME = value;
					this.SendPropertyChanged("LAST_LOGIN_TIME");
					this.OnLAST_LOGIN_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankUser_BankUserLogin", Storage="_BankUser", ThisKey="USER_ID", OtherKey="USER_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BankUser BankUser
		{
			get
			{
				return this._BankUser.Entity;
			}
			set
			{
				BankUser previousValue = this._BankUser.Entity;
				if (((previousValue != value) 
							|| (this._BankUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankUser.Entity = null;
						previousValue.BankUserLogin.Remove(this);
					}
					this._BankUser.Entity = value;
					if ((value != null))
					{
						value.BankUserLogin.Add(this);
						this._USER_ID = value.USER_ID;
					}
					else
					{
						this._USER_ID = default(int);
					}
					this.SendPropertyChanged("BankUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BankUser = default(EntityRef<BankUser>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankUserRole")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BankUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ROLE_ID;
		
		private string _ROLE_NAME;
		
		private string _MEMO;
		
		private EntitySet<BankUser> _BankUser;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnROLE_IDChanging(string value);
    partial void OnROLE_IDChanged();
    partial void OnROLE_NAMEChanging(string value);
    partial void OnROLE_NAMEChanged();
    partial void OnMEMOChanging(string value);
    partial void OnMEMOChanged();
    #endregion
		
		public BankUserRole()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_ID", DbType="NVarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string ROLE_ID
		{
			get
			{
				return this._ROLE_ID;
			}
			set
			{
				if ((this._ROLE_ID != value))
				{
					this.OnROLE_IDChanging(value);
					this.SendPropertyChanging();
					this._ROLE_ID = value;
					this.SendPropertyChanged("ROLE_ID");
					this.OnROLE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_NAME", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ROLE_NAME
		{
			get
			{
				return this._ROLE_NAME;
			}
			set
			{
				if ((this._ROLE_NAME != value))
				{
					this.OnROLE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._ROLE_NAME = value;
					this.SendPropertyChanged("ROLE_NAME");
					this.OnROLE_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEMO", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string MEMO
		{
			get
			{
				return this._MEMO;
			}
			set
			{
				if ((this._MEMO != value))
				{
					this.OnMEMOChanging(value);
					this.SendPropertyChanging();
					this._MEMO = value;
					this.SendPropertyChanged("MEMO");
					this.OnMEMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankUserRole_BankUser", Storage="_BankUser", ThisKey="ROLE_ID", OtherKey="ROLE_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<BankUser> BankUser
		{
			get
			{
				if ((this.serializing 
							&& (this._BankUser.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BankUser;
			}
			set
			{
				this._BankUser.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BankUser(BankUser entity)
		{
			this.SendPropertyChanging();
			entity.BankUserRole = this;
		}
		
		private void detach_BankUser(BankUser entity)
		{
			this.SendPropertyChanging();
			entity.BankUserRole = null;
		}
		
		private void Initialize()
		{
			this._BankUser = new EntitySet<BankUser>(new Action<BankUser>(this.attach_BankUser), new Action<BankUser>(this.detach_BankUser));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankUserBranch")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BankUserBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BRANCH_ID;
		
		private int _USER_ID;
		
		private System.Nullable<int> _GROUP_ID;
		
		private System.Nullable<int> _CAN_AUDIT;
		
		private System.Nullable<int> _NOTIFY;
		
		private EntityRef<BankData> _BankData;
		
		private EntityRef<BankUser> _BankUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBRANCH_IDChanging(string value);
    partial void OnBRANCH_IDChanged();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnGROUP_IDChanging(System.Nullable<int> value);
    partial void OnGROUP_IDChanged();
    partial void OnCAN_AUDITChanging(System.Nullable<int> value);
    partial void OnCAN_AUDITChanged();
    partial void OnNOTIFYChanging(System.Nullable<int> value);
    partial void OnNOTIFYChanged();
    #endregion
		
		public BankUserBranch()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BRANCH_ID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string BRANCH_ID
		{
			get
			{
				return this._BRANCH_ID;
			}
			set
			{
				if ((this._BRANCH_ID != value))
				{
					if (this._BankData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBRANCH_IDChanging(value);
					this.SendPropertyChanging();
					this._BRANCH_ID = value;
					this.SendPropertyChanged("BRANCH_ID");
					this.OnBRANCH_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					if (this._BankUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_ID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> GROUP_ID
		{
			get
			{
				return this._GROUP_ID;
			}
			set
			{
				if ((this._GROUP_ID != value))
				{
					this.OnGROUP_IDChanging(value);
					this.SendPropertyChanging();
					this._GROUP_ID = value;
					this.SendPropertyChanged("GROUP_ID");
					this.OnGROUP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAN_AUDIT", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> CAN_AUDIT
		{
			get
			{
				return this._CAN_AUDIT;
			}
			set
			{
				if ((this._CAN_AUDIT != value))
				{
					this.OnCAN_AUDITChanging(value);
					this.SendPropertyChanging();
					this._CAN_AUDIT = value;
					this.SendPropertyChanged("CAN_AUDIT");
					this.OnCAN_AUDITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTIFY", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> NOTIFY
		{
			get
			{
				return this._NOTIFY;
			}
			set
			{
				if ((this._NOTIFY != value))
				{
					this.OnNOTIFYChanging(value);
					this.SendPropertyChanging();
					this._NOTIFY = value;
					this.SendPropertyChanged("NOTIFY");
					this.OnNOTIFYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankData_BankUserBranch", Storage="_BankData", ThisKey="BRANCH_ID", OtherKey="BankCode", IsForeignKey=true)]
		public BankData BankData
		{
			get
			{
				return this._BankData.Entity;
			}
			set
			{
				BankData previousValue = this._BankData.Entity;
				if (((previousValue != value) 
							|| (this._BankData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankData.Entity = null;
						previousValue.BankUserBranch.Remove(this);
					}
					this._BankData.Entity = value;
					if ((value != null))
					{
						value.BankUserBranch.Add(this);
						this._BRANCH_ID = value.BankCode;
					}
					else
					{
						this._BRANCH_ID = default(string);
					}
					this.SendPropertyChanged("BankData");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankUser_BankUserBranch", Storage="_BankUser", ThisKey="USER_ID", OtherKey="USER_ID", IsForeignKey=true)]
		public BankUser BankUser
		{
			get
			{
				return this._BankUser.Entity;
			}
			set
			{
				BankUser previousValue = this._BankUser.Entity;
				if (((previousValue != value) 
							|| (this._BankUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankUser.Entity = null;
						previousValue.BankUserBranch.Remove(this);
					}
					this._BankUser.Entity = value;
					if ((value != null))
					{
						value.BankUserBranch.Add(this);
						this._USER_ID = value.USER_ID;
					}
					else
					{
						this._USER_ID = default(int);
					}
					this.SendPropertyChanged("BankUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BankData = default(EntityRef<BankData>);
			this._BankUser = default(EntityRef<BankUser>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
